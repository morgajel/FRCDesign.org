{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to FRCDesign.org","text":"<p>FRCDesign.org is a comprehensive learning guide and technical reference for FRC design using Onshape.</p> <ul> <li> <p> Website Feature Guide</p> <p>Explains the main features of the website. Recommended to go through before the learning course.</p> <p> Website Feature Guide</p> </li> <li> <p> Learning Course</p> <p>A guided curriculum through learning Onshape applied to robot design fundamentals. Looking to learn FRC robot design and CAD skills? Start here.</p> <p> Learning Course</p> </li> <li> <p> Design Handbook</p> <p>Dives into the concepts necessary in order to design a competitive robot. Unlike the learning course, this is primarily a reference wiki. </p> <p> Design Handbook</p> </li> <li> <p> Mechanism Examples</p> <p>Unlike other mechanism example collections, these are hand picked for specific concepts with detailed breakdowns behind each design.</p> <p> Mechanism Examples</p> </li> <li> <p> CAD Best Practices</p> <p>A reference for best practices to follow when you're modeling a robot in Onshape.</p> <p> CAD Best Practices</p> </li> <li> <p> Other Resources</p> <p>Besides the other content on the website, we have a nice collection of resources (e.g. featurescripts and models).</p> <p> Other Resources</p> </li> </ul>"},{"location":"#what-is-frcdesignorg","title":"What is FRCDesign.org?","text":"<ol> <li>FRCDesign.org is not just a resource collection. Though it includes many resources, almost all of the website's content has been written specifically for the website to align with our goals.</li> <li>Everything is taught from a competitive focus. Designing competitive robots helps inspire students and teach both engineering skills and life skills. It's also generally more fun when the robot performs well instead of breaking.</li> <li>We don't try to teach everything. The learning course is built around teaching a single CAD software (Onshape), and we encourage a specific design style which is optimized for the majority of mid-resource teams. </li> <li>We try to include the small details that most guides forget. The concept of an \"arm\" is almost ubiquitous, but the concepts behind designing a pivot that works every match and never breaks? That's not so much common knowledge and much more important.</li> <li>Design practices are important! We try to document and teach the best practices possible so you can design faster during the season.  </li> </ol>"},{"location":"#who-is-frcdesignorg","title":"Who is FRCDesign.org?","text":"<p>FRCDesign.org is the culmination of hundreds of hours of work between a group of FIRST students, alumni, and mentors from teams all over the world. </p> <p> Contributors List </p>"},{"location":"#discord","title":"Discord","text":"<p>The most effective tool for learning design is getting feedback and learning from others. Join the Discord for design reviews, design challenges, and events. </p> <p></p> <p></p>"},{"location":"solidworks/","title":"Solidworks","text":""},{"location":"website-feature-guide/","title":"Website Feature Guide","text":"<p>There are several features across the website that, if missed, will make it hard to go through the content effectively. The following features are shown with examples to help you gain a quick understanding of them before you make your way through the website.</p>"},{"location":"website-feature-guide/#across-the-website","title":"Across the Website","text":"<ul> <li>Links are shown with green text</li> <li>Clicking on an image enlarges it and shows a caption, if applicable. Press the <code>Esc</code> key to minimize it again. </li> <li>The website has a glossary of terms related to the content. Whenever a word in that glossary is mentioned in the website, it will be underlined. You can hover over these underlined words to get a quick definition (e.g. COTS, OTB). </li> <li> <p>Some information is hidden in dropdowns. Try to check most of them!</p> Example <p>Information is hidden here to clean up pages.</p> </li> </ul>"},{"location":"website-feature-guide/#admonitions-call-outs","title":"Admonitions (Call-Outs)","text":"<p>Tip</p> <p>Quick tips are shown in a \"Tip\" box like this one.</p> <p>Note</p> <p>Any extra notes about things are shown in a \"Note\" box like this one.</p> <p>Warning</p> <p>Pay attention to anything in a \"Warning\" box like this one.</p> <p>Example</p> <p>Examples for different concepts are shown in an \"Example\" box like this one.</p>"},{"location":"website-feature-guide/#learning-course","title":"Learning Course","text":""},{"location":"website-feature-guide/#buttons","title":"Buttons","text":"<p>Important Onshape documents for the page will be shown as a button like the one below:</p> <p>1A Exercises Document</p>"},{"location":"website-feature-guide/#slideshows","title":"Slideshows","text":"Navigate the slideshows by pressing the arrows on the sides.   The dots below the slideshow indicate the slide you're on. They can also be clicked to navigate to slides.               Your browser does not support the video tag.           Some slideshows contain videos. \u276e \u276f <p>Warning</p> <p>You may have to disable your adblocker to get some videos to load (we do not host any ads on the site).</p> <p>Tip</p> <p>If a slideshow has issues loading, reload the webpage and it should be fixed.</p> <p></p> <p>Use the arrows at the bottom of the page to navigate to the next or previous page! </p> <p></p>"},{"location":"best-practices/","title":"CAD Best Practices: Why?","text":"<p>In this guide, we document best practices for Onshape CAD and design standards for FRC. </p> <p>Reasons for these best practices include:</p> <ul> <li>Keeping loading times low</li> <li>Staying organized, so that making changes down the line is easier and more accessible</li> <li>Encouraging top-down design through document structure</li> <li>Making CAD resistant to breaking</li> </ul> <p>Why standardize design?</p> <ul> <li>Make it easier for new designers to succeed; reduce the number of things to learn</li> <li>Make it harder to make mistakes - encourage good practice through standardization</li> <li>Reduce part cost - only invest in parts that work and last</li> </ul> <p>Essentially, standardizing practices on your FRC team helps to ease the requirement of institutional knowledge by making things \"just work\".</p> <p>Note</p> <p>This is a living document.</p> <p></p>"},{"location":"best-practices/assembly-setup/","title":"Assembly Best Practices","text":"<p>Assuming you have already named your parts and organized your work within the rest of the document, creating a well-organized assembly is very straightforward. </p>"},{"location":"best-practices/assembly-setup/#the-origin-cube","title":"The Origin Cube","text":"<p>The <code>Origin Cube</code> Featurescript inserts a 2\" transparent cube at the origin of the part studio. The cube has a mate connector at the origin. Because this part will never change and always stays at the origin of the part studio, using it to group and fasten parts to the origin will always be more robust and parametric than fixing or using a mate connector attached to another part, in case that part changes or is deleted.</p> <p>Origin Cube Featurescript</p> <p></p> Inserting the Origin Cube feature <p>Tip</p> <p>The origin cube has the option of importing a number of useful constants and functions, including bolt hole sizes, gear outer diameter, and a center-to-center calculator.</p>"},{"location":"best-practices/assembly-setup/#process-for-inserting-parts","title":"Process for Inserting Parts","text":"<p>As is described in Sub-Document Setup, subsystems with no degrees of freedom will only have one assembly, while subsystems with multiple moving parts are separated into rigid assemblies. The process for inserting parts and finishing assemblies is similar for both circumstances.</p> <ol> <li>Create the origin cube in your part studio</li> <li>Insert the related parts and origin cube for a rigid subassembly</li> <li>Use the \"group\" tool on all parts</li> <li>Fasten the origin mate connector to the origin</li> <li>Duplicate and fasten any duplicate parts</li> <li>Insert standard hardware and COTS components</li> <li>Sort the instances into folders (i.e. tubes, swerve modules, spacers)</li> </ol> <p>Tip</p> <p>As you add more parts in the part studio, you can insert them individually into the assembly with the green checkmark, double click on the initial group, and add the part to the group to avoid mating it. This means that new part will always stay in the same place relative to where it was designed in the part studio.</p> <p>If the subsystem has multiple moving parts (like an over-the-bumper intake or elevator), create a mate connector on the main layout sketch for each degree of freedom. This may be a pivot point or the starting point of a slider mate (in the case of an elevator). Make each mate connector owned by the origin cube.</p> <p>Repeat steps 4-7 of the process for all other rigid subassemblies, if applicable. This will result in each subassembly being rigid, with the origin cube fastened to the origin and all the parts in the same place as in the part studio. Each subassembly will also contain the mate connectors owned by the origin cube.</p> <p>Now create a top-level subsystem assembly and insert each subassembly into it. Fasten the origin cube of the static subassembly to the origin, and use the other mate connectors to mate the other subassemblies together.</p> Stage 2C - Slapdown Intake <p>The Stage 2C Slapdown Intake is a subsystem with a static portion and a pivoting portion. An extra mate connector is added for the pivot on the main layout sketch, owned by the origin cube</p> <p>Stage 2C - Slapdown Intake</p> <p></p> <p>This mate connector exists in both subassemblies. </p> <p></p> <p>The static assembly is fastened to the origin and the arm assembly revolves using the pivot mate connector owned by both instances of the origin cube. </p> Stage 2D - Cascade Elevator <p>The Stage 2D Cascade Elevator is a subsystem with a static portion and two subassemblies that slide linearly. This contains a part studio, a static frame/gearbox assembly, assemblies for the first stage and carriage, and a top-level assembly combining the 3 subassemblies with slider mates.</p> <p>Stage 2D - Cascade Elevator</p> <p></p> 3647 Millennium Falcons 2024 Intake <p>Top Level Assembly: 0200-A-Intake. Notice that there is only two mates. The revolute is between the two intake pivot mate connectors, which are attached to the repective origin cubes.</p> <p>Stationary Components Assembly: 0210-A-Intake Base. The components are group mated and the origin cube is fastened to the origin.</p> <p>Stationary Components PS: 0210-A-Intake Base. Notice the intake pivot mate connector, derived from the orange main layout sketch. </p> <p>Moving Components Assembly: 0220-A-Intake Arm. The components are group mated and the origin cube is fastened to the origin.</p> <p>Moving Components PS: 0220-Intake Arm. Notice the intake pivot mate connector, derived from the orange main layout sketch.</p>"},{"location":"best-practices/assembly-setup/#simplified-models","title":"Simplified Models","text":"<p>Make sure to minimize primitives in your assembly. Primitives are a measure of how complex the object is and how hard it is for Onshape to render. The more primitives there are, the more laggy your assembly will be.</p> <p>Use simplified models wherever possible to minimize primitives: electronics, swerve modules, motors, etc. Some of these are added to MKCAD as well.</p> Minimize Primitives <p> </p>"},{"location":"best-practices/assembly-setup/#other-small-things","title":"Other Small Things","text":"<ul> <li>Import COTS parts from MKCAD</li> <li>Use the replicate tool for adding hardware!</li> <li>Minimize the number of mates you use; this lowers the solve time</li> <li>Stay organized with folders</li> </ul> <p>See a well-organized assembly here: </p> <p></p> <p></p>"},{"location":"best-practices/document-setup/","title":"Document Setup","text":"<p>In general, an FRC robot is too complicated and has too many parts to be created entirely within a single document. Doing so is possible, but will result in bad loading times, and likely poor organization. </p> <p>To alleviate these challenges, we generally split FRC robots into several documents, each with an individual version number:</p> <ul> <li>\"Concept\" document: contains the main layout sketch, which determines the overall architecture and geometry for the robot, alongside the Crayon CAD (a simplistic model of your robot archetype)</li> <li>Several \"Subsystem\" documents, which contain the part studios, subassemblies and top-level assembly for each subsystem, such as an Intake</li> <li>\"Main Robot\" document, which contains the top-level full robot assembly. This assembly is comprised of the top-level assembly from each of the subsystem documents.</li> </ul> <p>To connect these documents to each other, we make use of a few key Onshape features:</p> <ul> <li>Derive feature: brings your main layout sketch from the concept document into the subsystem document, so you can design your parts on top of it.</li> <li>Import: Subassemblies are imported from each subsystem document so they can be assembled in the main robot document.</li> </ul> <p>Here is a diagram showing the full file structure:</p> <p></p> <p> Blue: Derive, Red: Import </p> <p>Note</p> <p>Sometimes the \"main robot\" document is combined with the \"concept\" document. In this case nothing really changes, the file structure just becomes a sort of loop, and there is one less document.</p> <p>You can see an example of this document structure here. Note the combination of the framework and main documents.</p> <p></p> <p></p> <p>The document structure isn't set in stone; as long as it helps your team fulfill the goal of top-down design and uses separate documents to split up the versions of mechanisms, you can place your main layout sketches wherever you want (main document, concept document, or the drivetrain document).</p> <p></p>"},{"location":"best-practices/feature-tree-setup/","title":"Part Studio Best Practices","text":""},{"location":"best-practices/feature-tree-setup/#what-to-include-in-the-part-studio","title":"What to Include in the Part Studio","text":"<p>The part studio should contain all parts that need to be manufactured by your team. This could include fully custom plates, shafts cut to length, modified COTS parts, etc. Unmodified COTs parts should be imported directly into the corresponding assembly - no modification inside the part studio is required. </p> <p>Also avoid duplicating identical parts and over-using intensive featurescripts, such as tube converter. These practices can make your part studio loading times high and navigation and changes very laggy. Creating only one of each part in the part studio means you can simply duplicate it when assembling while your part studio performance will be greatly improved.</p> <p>Tip</p> <p>Instead of deriving COTS parts for reference, usually you can add simple measurements in your sketches (like a pitch circle instead of a derived gear), which faster both in the moment and overall with load times. You can derive parts from your other subsystems (such as the frame and simplified modules from your drivetrain part studio into your intake part studio) and make them closed composites for easy reference, but keep it to a minimum.</p>"},{"location":"best-practices/feature-tree-setup/#feature-tree-organization","title":"Feature Tree Organization","text":"<p>Every part studio feature tree should start with a derive command, pulling down the relevant main layout sketches. This is what you will build on. </p> <p>Sort and name the features, parts, and tabs and use folders to make your CAD more understandable for other people working on the robot. One of the biggest benefits of Onshape is its collaborative capability, but unnamed and unsorted documents eliminate that point entirely. Sorting and naming in real time can also make it easier to go back and change things (which you will inevitably need to do). Some teams even use a part naming system to assist with organizing manufacturing and assembly.</p> <p>See an example of a well-organized part studio here:</p> <p></p>"},{"location":"best-practices/feature-tree-setup/#the-importance-of-intelligent-origins","title":"The Importance of Intelligent Origins","text":"<p>As with many good practices in CAD, smart origins are another good practice to make future you's life easier. Intelligent origins allow designers to leverage default geometry (Front/Right/Top Planes, Origin Point) for robust axes of symmetry and references in their models. </p> <p>For FRC CAD, the purpose of using the same origin as the main layout sketch across all studios and assemblies is twofold:</p> <ol> <li>The origin will always be a consistent central point you can reference. This helps keep things parametric too.</li> <li>To unify the robot CAD and robot software origin point. By having the same origin in CAD and code, the robot can be seamlessly exported to AdvantageScope and camera transformations more easily measured. </li> </ol> <p>Note</p> <p>Although definitions may vary from team to team, the origin of an FRC robot is typically defined as the center of the drivebase, on floor level.</p> <p>One way to help achieve this is to use the Origin Cube Featurescript, which is further explained in the assembly best practices page. If using the origin cube, make the origin cube the first feature in all part studios.</p> <p></p>"},{"location":"best-practices/mastersketch-setup/","title":"Layout Sketch Best Practices","text":"<p>A main layout sketch is a series of sketches that capture the major dimensions of each mechanism, field element interactions, and robot size constraints. Then, the main layout sketch(es) are inserted into each mechanism's part studio and the individual components are then modeled around the imported layout sketch. This enables much easier integration with a top-down design approach.</p> <p> Always Include Sometimes Include Never Include Drivebase dimensions Gears Specific details like the shape of plates End-effector wheel locations based off of prototyping Belts Gussets Field elements and extension limits Chain Mounting holes Mechanism motion paths Motor locations Gamepiece path <p></p> <p>This isn't an extensive list, and things can vary from team to team and from architecture to architecture. Detail can easily be added or removed later if necessary.</p> <p>All important measurements that drive the geometry of the robot exist in the layout sketches part studio. They can all be easily viewed and changed together, as opposed to if you had to go through each subsystem to make changes to the geometry to try to make things fit in the top-level robot assembly.</p> 1778 Chill Out's 2024 Robot Main Layout Sketches <p>Main layout sketches always start with your drivetrain, bumpers, initial configuration, and extension limits. Field elements are sketched next. You can use hard alignment against bumpers to ensure your geometry can score pieces without much software or mechanical complexity. </p> <p>Tip</p> <p>Directly after kickoff, you can create a part studio with layout sketches of the drivetrain, extension limits, and field elements. This can be copied and used to test out the geometries of several different robot architectures to then decide between.</p> <p>Your robot should be designed specifically to interact with the field elements and gamepieces. For the main layout sketches, this means making every dimension of every subsystem intentional, whether it's based off of field elements, extension limits, or each other.</p> <p>Example</p> <p>The length of an elevator would be driven by the start and end positions of the manipulator being moved, since those positions are based on how it interacts with the field elements.</p> <p>Tip</p> <p>You can make construction circles representing the range of motion of a pivoting subsystem, and dimension a subsystem a distance away from that circle to make sure there's clearance between them.</p> <p>Effective layout sketching requires you to stay organized. This means:</p> <ul> <li>Multiple sketches, usually one per subsystem, within the main layout sketch part studio. Keep everything separate!</li> <li>Name your sketches accordingly</li> <li>You can also give your sketches different colors to differentiate between them</li> <li>Sketch all the possible states of each moving subsystem </li> </ul> 3647's 2024 Robot Main Layout Sketches <p>Layout sketching is an art that can require some practice to get the hang of. While Stage 3 will help you learn and practice doing full layout sketches, this tutorial can help you get started if you are unsure.</p> <p>A presentation of an example: 8177 Vector 2023 Robot</p> <p></p>"},{"location":"best-practices/sub-document-setup/","title":"Sub-Document Setup","text":"<p>Each subsystem document should have at least one part studio and one assembly associated with it. </p> <p>The Stage 2A Basic Shooter is a simple subsystem with no moving parts. This contains only a part studio and a rigid assembly.</p> <p>Stage 2A - Basic Shooter</p> <p></p>"},{"location":"best-practices/sub-document-setup/#subsystems-with-multiple-degrees-of-freedom","title":"Subsystems with Multiple Degrees of Freedom","text":"<p>You may want to split subsystems with multiple degrees of freedom into multiple rigid assemblies. Each separate moving part of the subsystem should have a 'rigid' assembly (no degrees of freedom allowed for any part), while the top-level subsystem assembly only defines the motion between them. </p> <p>Note</p> <p>A rigid assembly, when inserted, is treated as a solid body with no mates calculated. It decreases load time in top-level assemblies greatly. You will learn how to integrate the origin cube into this system for easy parametric mates in assembly best practices.</p> <p>For example, you could split an elevator document into one part studio and corresponding rigid assembly for each stage. The top-level elevator assembly would thus include each of the stage subassemblies within it and the slider mates.</p> <p>The Stage 2C Slapdown Intake is a subsystem with a static portion and a pivoting portion. Functionally, this contains a part studio, a static assembly for the gearboxes and pivot, a rigid assembly for the arms and rollers, and a top-level assembly combining the two subassemblies.</p> <p>Stage 2C - Slapdown Intake</p> <p></p> <p>The Stage 2D Cascade Elevator is a subsystem with a static portion and two subassemblies that slide linearly. This contains a part studio, a static frame/gearbox assembly, assemblies for the first stage and carriage, and a top-level assembly combining the 3 subassemblies with slider mates.</p> <p>Stage 2D Cascade Elevator</p> <p></p> <p></p>"},{"location":"contribution/contributors/","title":"Contributors","text":"<p>FRCDesign.org would not happen without the wonderful work of these people!</p>"},{"location":"contribution/contributors/#primary-contributors","title":"Primary Contributors","text":"<ul> <li>David</li> <li>Kelly - FRC 1778AM</li> <li>Andrew Card - FRC 6657AM</li> <li>Jonathan Mi - FRC 3647/9442M</li> </ul>"},{"location":"contribution/contributors/#other-contributors","title":"Other Contributors","text":"<ul> <li>Brendan - FRC 1153/1119</li> <li>Astro - FRC 6423A</li> <li>Neel - FRC 5026A</li> <li>Eeshwar - FTC 7244A</li> <li>Vaughn - FRC 8033</li> <li>Eliot D - FRC 111</li> <li>Ben - FRC 8738</li> <li>Sid - FRC 4089 AM</li> <li>George T - FRC 840</li> <li>Connor - FRC 8177A</li> </ul>"},{"location":"contribution/contributors/#additional-input","title":"Additional Input","text":"<ul> <li>Andrew Torrance - FRC 254M</li> <li>JJ - FRC 4414M</li> <li>Mike Corsetto - FRC 1678M</li> <li>Nick Kremer - FRC 3512AM</li> <li>Nick Coussens - FRC 33M</li> <li>Nick Aarestad - FRC 2220M</li> <li>Andrew Lawrence</li> <li>Bryce Hanson- FRC 7525M/125M</li> <li>Trisha - FRC 1868</li> <li>Chickenbonker - FRC 6423A</li> <li>Lati</li> <li>Jeremy</li> <li>Sarah - FRC 3647</li> <li>Evan</li> <li>John - FRC 3928M</li> <li>Brian Wagg - FRC 739M</li> <li>Tung Chan (Joe) - FRC 4546M</li> <li>Andy M-P - FRC 3504M</li> <li>Chun-che Lo - FRC 4499M</li> <li>Travis Norris - FRC 2423M</li> <li>Eric Berquist - FRC 3100M</li> <li>Kevin - FRC 2399M</li> <li>Anand Rajamani - Redux Robotics</li> <li>Nolan - FRC 9432 student </li> <li>Tim - FRC 8248M </li> <li>Oliver - FRC 4089 </li> <li>Cloudcake8 - FRC 3006</li> <li>pointybirb - FRC 3256A </li> <li>Lewy - FRC 8033</li> <li>George - FRC 2521A </li> <li>Ishaan - FRC 8177A</li> <li>Honore - FRC 1072</li> <li>Wither - FRC 6443A</li> <li>Zachary - FRC 4990A</li> <li>Jupiter - FRC 9483 </li> </ul>"},{"location":"contribution/mechanismContribution/","title":"Contributing to Mechanism Examples","text":"<p>The mechanism examples pages are the ones that would benefit the most from outside contribution. You can add examples from other teams, of course, but adding your own mechanism and going behind the design and performance on it will be ideal. If adding an example from another team, try to interview them for their input and more accurate information.</p> <p>Criteria for Mechanism Examples:</p> <ul> <li>It must have been actually built and used at a competition</li> <li>You must show both the good parts and the bad parts. What was it designed for? Why were certain decisions made? How easy was it to build and manufacture? How did it actually perform? What went well and what would be changed if it was redesigned?</li> <li>Go into detail about specific parts of the design, such as the materials and parts used and why, any specific mechanisms or processes, etc.</li> <li>Detailed pictures of the CAD and/or the actual robot. Preferably public CAD made in or uploaded to Onshape. </li> <li>Extra media and links if available and applicable.</li> </ul>"},{"location":"contribution/mechanismContribution/#adding-mechanism-examples","title":"Adding Mechanism Examples","text":"<p>As was described in methods of contributing, there are two methods:</p> <ol> <li>Writing the contribution on a separate platform (such as Google Docs) and getting an internal contributor to add it to the website</li> <li>Forking and making a pull request on GitHub</li> </ol> <p>The first method is pretty self explanatory, but if you choose to fork and make a pull request on GitHub, there is some formatting required. Make sure to follow the contribution guide on the methods of contributing page to get up and running with GitHub and VS Code.</p>"},{"location":"contribution/mechanismContribution/#adding-a-mechanism-category-optional","title":"Adding a Mechanism Category (OPTIONAL)","text":"<p>If you need to add a mechanism category, you must add a landing page for the mechanism examples in that category and a grid card to the mechanism examples landing page.</p>"},{"location":"contribution/mechanismContribution/#adding-the-folders-and-files","title":"Adding the Folders and Files","text":"<ol> <li> <p>Create a new folder under <code>mechanism-examples</code> with the name of the new mechanism category. All mechanism example pages and the landing page for the category will be in this folder. </p> <p>Note</p> <p>If there are multiple types of the mechanism (such as with elevators and intakes), you can create multiple folders in that with the landing pages in each separate folder. For example, the folder <code>elevator</code> contains the folders <code>cascade</code> and <code>continuous</code>, both of which contain a landing page <code>index.md</code>.</p> </li> <li> <p>In the root folder of the new category, create a new file called <code>.meta.yml</code> and copy the following code into it:</p> <p><pre><code>social:\n    cards_layout_dir: layouts\n    cards_layout: mechanism_fundamentals_wide\n</code></pre> This sets the size of image you will use for the social card for embeds for the whole category. You can choose between <code>mechanism_fundamentals_wide</code> or <code>mechanism_fundamentals_tall</code> for the <code>cards_layout</code> option. </p> <p>Images have to be 1:1.545 or 1.545:1, any size. More information provided here</p> </li> <li> <p>Create the landing page(s) for the category, named <code>index.md</code>. Only one of these can be made per folder.</p> <p>Copy this template for the category landing page and fill it out with your information:</p> <pre><code>---\ntitle: page-title\nimage: link-to-social-card-image\n---\n\n\n# page-title\ndescription\n\n&lt;div class=\"grid cards\" markdown&gt;\n\n-   &lt;center&gt;[![](link-to-mechanism-image)](link-to-page)&lt;/center&gt;\n\n    ---\n\n    description-about-unique-aspects-of-example\n\n    [:octicons-arrow-right-24: page title](link-to-page)\n\n&lt;/div&gt;\n\n&lt;br&gt;\n</code></pre> <p>The following is the code for the drivebase examples landing page:</p> <pre><code>---\ntitle: Drivebase Examples\nimage: docs/img/mechanism-examples/drivebase/swerve/2910_2023_dt.webp\n---\n\n\n# Swerve Drivebases\nThe drivebase is the single most important part of your robot, providing a bed for every other subsystem to build off. Examples of different drivebases can provide inspiration for electronics layout, bellypan shapes, and structural cross members for mounting, all of which can be a hard but crucial part of designing a robot, as accessibility and maintainability need to be preserved even as subsystems get placed on top of the robot.\n\n&lt;div class=\"grid cards\" markdown&gt;\n\n-   &lt;center&gt;[![](../../img/mechanism-examples/drivebase/swerve/2910_2023_dt.webp)](2910_2023_dt.md)&lt;/center&gt;\n-   &lt;center&gt;[![](../../img/mechanism-examples/drivebase/swerve/2910_2023_dt.webp)](2910_2023_dt.md)&lt;/center&gt;\n\n    ---\n\n    A custom plate to keep the radio and breaker accessible, holes with grommets to allow wires to pass through the cross members\n\n    [:octicons-arrow-right-24: 2910 Charged Up Drivebase](2910_2023_dt.md)\n    [:octicons-arrow-right-24: 2910 Charged Up Drivebase](2910_2023_dt.md)\n\n-   &lt;center&gt;[![](../../img/mechanism-examples/drivebase/swerve/972_2024_dt.webp)](972_2024_dt.md)&lt;/center&gt;\n-   &lt;center&gt;[![](../../img/mechanism-examples/drivebase/swerve/972_2024_dt.webp)](972_2024_dt.md)&lt;/center&gt;\n\n    ---\n\n    A central 2x2 cross member, a brainpan, and citrus bumper mounting plates.\n\n    [:octicons-arrow-right-24: 972 Brainpan Drivebase](972_2024_dt.md)\n    [:octicons-arrow-right-24: 972 Brainpan Drivebase](972_2024_dt.md)\n\n&lt;/div&gt;\n\n&lt;br&gt;\n</code></pre> </li> </ol>"},{"location":"contribution/mechanismContribution/#adding-a-grid-card-to-the-mechanism-examples-landing-page","title":"Adding a Grid Card to the Mechanism Examples Landing Page","text":"<p>All grid cards are contained in the <code>&lt;div class=\"grid cards\" markdown&gt;</code> div. See the mkdocs-material docs about grid cards for more information.</p> <p>Copy and paste the following code into the div and replace all template information with your own.</p> <pre><code>-   &lt;center&gt;[![](link-to-image)](link-to-category-page)&lt;/center&gt;\n\n    ---\n\n    Example Description\n\n    [:octicons-arrow-right-24: category-name](link-to-category-page)\n</code></pre> <p>Note</p> <p>Leave a line break in the code between each card, otherwise the card content will merge.</p> <p>The following is the code for the drivebase examples grid card:</p> <pre><code>-   &lt;center&gt;[![](../img/mechanism-examples/drivebase/swerve/2910_2023_dt.webp)](drivebase/swerve/index.md)&lt;/center&gt;\n-   &lt;center&gt;[![](../img/mechanism-examples/drivebase/swerve/2910_2023_dt.webp)](drivebase/swerve/index.md)&lt;/center&gt;\n\n    ---\n\n    Swerve drivebases with examples of electronics layout\n\n    [:octicons-arrow-right-24: Swerve Drivebases](drivebase/swerve/index.md)\n    [:octicons-arrow-right-24: Swerve Drivebases](drivebase/swerve/index.md)\n</code></pre>"},{"location":"contribution/mechanismContribution/#adding-a-mechanism-example-page","title":"Adding a Mechanism Example Page","text":"<p>Adding a mechanism example page to an already existing category requires a few things to be done. The page has to be created, a grid card for it must be created in the category landing page, and an standard image for the example needs to be created. </p>"},{"location":"contribution/mechanismContribution/#creating-the-page","title":"Creating the Page","text":"<p>Create a new <code>.md</code> file in the category folder for your example. </p> <p>Copy the following template into it and fill out the information using Markdown formatting:</p> <pre><code>---\nimage: link-to-social-card-image\n---\n\n# mechanism-example-name\n\n&lt;figure markdown=\"span\"&gt;\n    [![alt-text](link-to-image){height=80% width=80%}](link-to-cad){target = \"_blank\"}\n&lt;figcaption&gt;caption&lt;/figcaption&gt;\n&lt;/figure&gt;\n\n### Links\n[CAD Link](link){target = \"_blank\"}\n\n## Behind the Design\n\n&lt;br&gt;\n</code></pre> <p>The following is an example of the 2910 Charged Up Drivebase page without content written:</p> <pre><code>---\nimage: docs\\img\\mechanism-examples\\drivebase\\2910_2023_dt.webp\nimage: docs\\img\\mechanism-examples\\drivebase\\2910_2023_dt.webp\n---\n\n# 2910 Charged Up Drivebase\n\n&lt;figure markdown=\"span\"&gt;\n[![2910 Charged up Drivebase](../../img/mechanism-examples/drivebase/swerve/2910_2023_dt.webp){height=80% width=80%}](https://cad.onshape.com/documents/28a885d3b8ad7de567efebbd/w/33b7dd39d54ec1ab15f2e2aa/e/d78c591638c349b708e238e6){target = \"_blank\"}\n[![2910 Charged up Drivebase](../../img/mechanism-examples/drivebase/swerve/2910_2023_dt.webp){height=80% width=80%}](https://cad.onshape.com/documents/28a885d3b8ad7de567efebbd/w/33b7dd39d54ec1ab15f2e2aa/e/d78c591638c349b708e238e6){target = \"_blank\"}\n&lt;figcaption&gt;Swerve drivetrain featuring MK4I swerve modules, a pocketed bellypan, and a billet brass frame-rail for weight distribution.&lt;/figcaption&gt;\n&lt;/figure&gt;\n\n### Links\n[CAD Link](https://cad.onshape.com/documents/28a885d3b8ad7de567efebbd/w/33b7dd39d54ec1ab15f2e2aa/e/d78c591638c349b708e238e6){target = \"_blank\"}\n\n## Behind the Design\n\n&lt;br&gt;\n</code></pre> <p>Add any images you use for your page in <code>/docs/img/mechanism-examples/[category]/[example]/</code>.</p>"},{"location":"contribution/mechanismContribution/#adding-an-image-for-the-example","title":"Adding an Image for the Example","text":"<p>Check the category's .meta.yml for the default card layout (tall or wide). This will be the orientation of the 1:1.545 image you will use for the mechanism example.</p> <p>1:1.545 is the aspect ratio of a picture outputted from Onshape's \"print\" function using the \"tabloid\" paper size. You can select landscape or portrait from there for wide or tall. </p> <p>Tip</p> <p>For images you already have, you can use GIMP and a calculator to crop an image by adding pixels to get it to the desired aspect ratio.</p>"},{"location":"contribution/mechanismContribution/#adding-pages-to-site-navigation","title":"Adding Pages to Site Navigation","text":"<p>Any new pages added have to be added to the site navigation.</p> <p>Follow the standard formatting presented in the <code>mkdocs.yml file</code> to add more pages, categories, and landing pages as necessary:</p> <p>mkdocs.yml<pre><code>- Mechanism Examples:\n      - mechanism-examples/index.md\n      - Drivebases:\n        - Swerve:\n          - mechanism-examples/drivebase/swerve/index.md\n          - 2910's Charged Up Drivebase: mechanism-examples/drivebase/swerve/2910_2023_dt.md\n          - 1678's Crescendo Drivebase: mechanism-examples/drivebase/swerve/1678_2024_dt.md\n          - 3005's Charged Up Drivebase: mechanism-examples/drivebase/swerve/3005_2023_dt.md\n          - 6328's Crescendo Drivebase: mechanism-examples/drivebase/swerve/6328_2024_dt.md\n          - 5460's Crescendo Drivebase: mechanism-examples/drivebase/swerve/5460_2023_dt.md\n          - 972's Crescendo Drivebase: mechanism-examples/drivebase/swerve/972_2024_dt.md\n        - Tank:\n          - mechanism-examples/drivebase/tank/index.md\n      - Intakes:\n        - Pivoting Intakes:\n          - mechanism-examples/intake/slapdown/index.md\n          - 1678's Crescendo Intake: mechanism-examples/intake/slapdown/1678_2024_intake.md\n          - 1778's Crescendo Intake: mechanism-examples/intake/slapdown/1778_2024_intake.md\n          - 6423's Crescendo Intake: mechanism-examples/intake/slapdown/6423_2024_intake.md\n          - 3847's Rapid React Intake: mechanism-examples/intake/slapdown/3847_2022_intake.md\n          - 2910's IR @ Home Intake: mechanism-examples/intake/slapdown/2910_2021_intake.md\n        - Linkage Intakes:\n          - mechanism-examples/intake/linkage/index.md\n          - 1678's Rapid React Intake: mechanism-examples/intake/linkage/1678_2022_intake.md\n          - 6800's Rapid React Intake: mechanism-examples/intake/linkage/6800_2022_intake.md\n          - 4089's Rapid React Intake: mechanism-examples/intake/linkage/4089_2022_intake.md\n      - Game Piece Manipulation:\n        - Shooters:\n          - mechanism-examples/shooter/index.md\n          - 1678's Rapid React Shooter: mechanism-examples/shooter/1678_2022_shooter.md\n          - 6328's Crescendo Shooter: mechanism-examples/shooter/6328_2024_shooter.md\n          - 2910's Rapid React Shooter: mechanism-examples/shooter/2910_2022_shooter.md\n          - 6800's Rapid React Shooter: mechanism-examples/shooter/6800_2022_shooter.md\n          - 2910's IR @ Home Shooter: mechanism-examples/shooter/2910_2021_shooter.md\n        - Indexers:\n          - mechanism-examples/indexer/index.md\n        - End Effectors:\n          - mechanism-examples/end-effector/index.md\n      - Linear Extensions:\n        - Continuous Elevators:\n          - mechanism-examples/elevator/continuous/index.md\n          - 1678's Charged Up Elevator: mechanism-examples/elevator/continuous/cable.md\n          - 3847's Charged Up Elevator: mechanism-examples/elevator/continuous/belt.md\n        - Cascade Elevators:\n          - mechanism-examples/elevator/cascade/index.md\n          - WCP Greyt COTS Elevator: mechanism-examples/elevator/cascade/wcp_greyt_elevator.md\n          - 2 Stage Cascade Elevator: mechanism-examples/elevator/cascade/2_stage_elevator.md\n          - 3 Stage Cascade Elevator: mechanism-examples/elevator/cascade/3_stage_elevator.md\n        - Telescopes:\n          - mechanism-examples/telescope/index.md\n      - Rotating Mechanisms:\n        - Pivots:\n          - mechanism-examples/pivots/index.md\n          - 6328 A-Frame Pivot: mechanism-examples/pivots/6328_2023_pivot.md\n          - 2910 Dead Axle Pivot: mechanism-examples/pivots/2910_2023_pivot.md\n          - 1690 Lantern Gear Pivot: mechanism-examples/pivots/1690_2024_pivot.md\n          - 5460 Dead Axle Pivot: mechanism-examples/pivots/5460_2023_pivot.md\n        - Turrets:\n          - mechanism-examples/turret/index.md\n</code></pre> As you can see, the formatting goes:</p> <pre><code>- Mechanism Examples:\n    - mechanism-examples/index.md\n    - Category 1:\n        - link-to-category-landing-page\n        - Mechanism 1: link-to-mech-1-page\n        - Mechanism 2: link-to-mech-2-page\n</code></pre> <p>Thanks for your contribution!</p> <p></p>"},{"location":"contribution/methodsOfContributing/","title":"Methods of Contributing","text":""},{"location":"contribution/methodsOfContributing/#public-contribution","title":"Public Contribution","text":"<p>Anyone can create content for the website without markdown knowledge or github, though it is preferred you learn how to use both to lessen the workload of other contributors.</p> <p>In the discord server, go to the \"website-discussion\" channel and ask if you can contribute the thing you want to by filling out this template:</p> <pre><code>Issue/content:\nSolution or Notes about the execution of the content:\nWhen do you plan on finishing?:\nUsing an alternate platform or forking on Github?:\n</code></pre> <p>This is to make sure you don't waste your time if it's not something that won't get put on the website or something that someone has already started working on.</p> <p>If you're given approval to start working on it, an internal contributor will make a new post in the \"public-website-contribution\" forum channel or direct you an existing post to work with and supplement another contributor if the content or issue has already started to be addressed.</p> <p>When you start on your work, you may choose to either:</p> <ol> <li>Fork the repository on Github and submit pull requests for your work to be accepted (if you're more programming-savvy)</li> <li>Work on an alternate platform such as Google Docs or Notion and let an internal contributor port it over to the website when you're done</li> </ol>"},{"location":"contribution/methodsOfContributing/#setting-up-github-and-vs-code-for-contributing","title":"Setting up Github and VS Code For Contributing","text":""},{"location":"contribution/methodsOfContributing/#install-prerequisites","title":"Install Prerequisites","text":"<p>Make sure to download the correct versions for the OS that you have (Windows, Mac, or Linux).</p> <p>Windows installers will almost always need to be the 64-bit version if there is a distinction.</p> <ul> <li>The latest version of Git Bash<ul> <li>Follow instructions for your OS</li> <li>Use all default options for installation</li> </ul> </li> <li>Python 3.10.6<ul> <li>When the installer opens, make sure to select \"Add Python 3.10 to PATH\" at the bottom and click \"Install Now\"</li> <li>For Windows users, you have the option of disabling the PATH length limit at the end; this can be helpful for other projects but is not required for contributing to the website</li> </ul> </li> <li>VSCode<ul> <li>Download the stable build for your OS</li> <li>Use all default options for installation, except creating a desktop icon if you want</li> </ul> </li> <li>GitHub Desktop (Optional - you can also use git interface in VSCode)<ul> <li>After installing, select \"Sign in to GitHub.com\"</li> <li>Sign in or sign up for a new GitHub account, then click \"Authorize Desktop\"<ul> <li>If you choose to sign up, you must verify your account with a captcha at the end of the registration and an emailed code</li> <li>If the captcha fails, try disabling a privacy extension that might be interfering</li> <li>Set up the rest of your account (you may choose to sign up for GitHub education but that isn't required, the free version is fine)</li> <li>If it doesn't take you to the authorization page after signing up, go back to the GitHub Desktop application, press \"Cancel\", the select \"Sign in to GitHub.com\" again</li> </ul> </li> <li>Allow your browser to open GitHub Desktop</li> <li>Click \"Finish\"</li> </ul> </li> </ul>"},{"location":"contribution/methodsOfContributing/#steps-to-start-writing-contributions","title":"Steps to Start Writing Contributions","text":"<p>For Public Contributors:</p> <ol> <li>Go to the repository website</li> <li>Click \"Fork\" near the top right, then click \"Create Fork\" on the next screen</li> <li>Open GitHub Desktop and select \"Clone a repository from the Internet...\" or go to <code>file -&gt; Clone repository...</code> in the very top left</li> <li>Under \"GitHub.com\", select your forked <code>[username]/FRCDesign.org</code> repository  and click \"Clone\"</li> <li>After it clones the repository (downloads a copy of it to your computer), it will ask how you plan to use the fork. Select \"To contribute to the parent project\" and click \"Continue\"</li> </ol> <p>For Internal Contributors (added to the main repository):</p> <ol> <li>Open GitHub Desktop and select \"Clone a repository from the Internet...\" or go to <code>file -&gt; Clone repository...</code> in the very top left</li> <li>Under \"GitHub.com\", select the <code>davidsdesignserver/FRCDesign.org</code> repository and click \"Clone\"</li> <li>After it clones the repository (downloads a copy of it to your computer), it will ask how you plan to use the fork. Select \"To contribute to the parent project\" and click \"Continue\"</li> </ol> <p>How to Write and Pull Request Contributions</p> <ol> <li>Create a new branch by going to the \"Current branch\" dropdown at the top of GitHub Desktop, pressing \"New branch\", naming it and clicking \"Create branch\".<ul> <li>Typically you want to make changes in branches (not main), then do what's called a \"pull request\" to get those changes \"pulled\" and merged over to the original main branch</li> <li>Name the branch something related to the overall changes you're making, e.g. \"contributors-guide\" or \"3A-cleanup\". You should expect to delete the branch after a pull request, so keep it specific enough to your changes</li> <li>Make sure to publish the branch by clicking the button for it that shows up after you create a new branch</li> </ul> </li> <li>Click \"Open in Visual Studio Code\" to open VS Code.</li> <li>If you get a pop-up that says \"Do you trust the authors of the files in this folder?\", check the box next to \"Trust the authors of all files in the parent folder 'GitHub'\" (for no further popups when you clone repositories in the future) and click \"Yes, I trust the authors\".</li> <li>Set up VS Code how you like if this is your first time running it (themes, extensions).<ul> <li>The \"Code Spell Checker\" extension is suggested</li> <li>Enable autosave in the <code>file</code> menu by toggling it on</li> </ul> </li> <li> <p>Make a set of changes.</p> <p>Tip</p> <p>All the website files and folders are contained in the <code>docs</code> folder, except the <code>mkdocs.yml</code> file which contains the directory for the sidebar of the website</p> </li> <li> <p>Whenever you reach a good point to stop where you want to save your changes to the cloud, you want to make what's called a \"commit\", which is where the changes are saved to the branch. You then have to \"push\" any commits to get them uploaded to the cloud, otherwise they will remain local. You can do this through VS Code or GitHub Desktop, but we'll go through GitHub Desktop to keep all version control actions centralized there.</p> </li> <li>Open Github Desktop and make sure \"Changes\" on the sidebar is selected. All changes selected in the sidebar will be added to the commit (the changes are \"staged\" for the commit). Type a summary of the commit (description optional) and press \"Commit to [branch]\".</li> <li> <p>Click the button to push the commit(s) you've made to the cloud (either up above or in the middle of the screen).</p> <p>Tip</p> <p>Clicking the \"Fetch origin\" button will fetch any commits to the current branch that anyone else has made and pushed to the cloud</p> </li> <li> <p>To keep your code up to date with the original repository's main branch, open the \"branch\" menu at the top of the screen and click \"Update from main\". If some commits get pulled to your branch from main, you can push to update your branch in the cloud again.</p> <p>Tip</p> <p>Make sure to update your branch from main frequently! If you don't, you may have to resolve big conflicts between your changes and changes someone else made to main. If you encounter conflicts, just follow the prompts in GitHub Desktop to open the conflicts in VS Code and solve them there. Once all conflicts are resolved, switch back to GitHub Desktop to complete the merge.</p> </li> <li> <p>Once you're satisfied enough with your set of changes to request to add them to the main website, and have committed all changes, checked for updates, and pushed all commits, create a pull request through the menu in the middle of GitHub Desktop. This will bring you to the website where you can describe the changes you made and want to pull to the website and assign an issue that it will fix. One of the internal contributors will review your pull request after you submit it and will either approve it and merge it with the main branch or make comments about things that need fixed before it can get merged.</p> </li> </ol> <p>To recap the contribution steps, do the combination of creating and publishing a branch, making changes and commits, updating from main, pushing commits, and creating a pull request.</p>"},{"location":"contribution/methodsOfContributing/#how-to-get-the-local-preview-of-the-website-running","title":"How to Get The Local Preview of the Website Running","text":"<p>You can get a local hosted version of the website to have a live preview of the site while editing.</p> <ol> <li>Open the repository in VS Code (doesn't matter which branch)</li> <li>Toggle the bottom panel on if there isn't one with the shortcut <code>Ctrl + J</code></li> <li>Click the dropdown next to the + on the top righthand side of the bottom panel and click \"Git Bash\"</li> <li>Run the command <code>py -m venv venv</code> to create a virtual environment (FIRST TIME)</li> <li>Run the command <code>./installdependencies.sh</code> to install all needed python packages (FIRST TIME)</li> <li>Run the command <code>./runlocal.sh</code> to start the server</li> <li>If everything went smoothly it should say its \"Serving on\" something like <code>http://127.0.0.1:8000</code></li> </ol> <p>Make sure to run <code>./runlocal.sh</code> in Git Bash every time you open VS Code to edit.</p> <p>Tip</p> <p>After clicking on the terminal in the bottom panel, you can use Ctrl + C to terminate the local website hosting.</p> <p>Note</p> <p>When you switch branches using GitHub Desktop, the local preview will follow without any problems</p>"},{"location":"contribution/styleguide/","title":"Contribution Style Guide","text":""},{"location":"contribution/styleguide/#futureproofing-and-usefulness","title":"Futureproofing and Usefulness","text":"<p>To make the content you write useful for teams of all resource levels, while maintaining validity in the future, the goal isn\u2019t to go broad and shallow, but to go extra deep to equip students with the understanding of the underlying fundamentals behind concepts to apply to their own unique situations. Pros and cons are context dependent while fundamentals are universal. </p> <p>At the same time, things that aren\u2019t easily accessible and/or commonly used by teams, like billet chassis and ball drive, shouldn\u2019t be included to prevent confusion.</p> <p>On the other hand, including small details that you\u2019d only discover through actually making the thing tends to be a lifesaver for everyone (such as electrical taping cat-tongue tape to make it not peel).</p>"},{"location":"contribution/styleguide/#why-is-this-important","title":"Why is this important?","text":"<ol> <li> <p>We don\u2019t need to figure out the pros and cons of everything for students to make a decision. New products come out all the time, and equipping them with the skills lets students find creative solutions that no one would think of for their circumstances.</p> </li> <li> <p>This enables students to understand WHY a team would make a certain decision and figure out tradeoffs without us explicitly telling them. </p> </li> <li> <p>It makes it significantly less intensive to future proof and maintain. If the meta shifts, having to redo sections to stay competitive is time consuming. If the project dies and is no longer maintained, the information stays useful for way longer.</p> </li> <li> <p>The small details are often the experience gap between the most reliable successful robots and not. It\u2019s a lifesaver for teams without experience, and reduces the review workload on design mentors with experience.  </p> </li> </ol>"},{"location":"contribution/styleguide/#to-make-this-easier-here-are-a-few-tips","title":"To make this easier, here are a few tips:","text":"<ol> <li> <p>You can usually find extremes for each concept to make it more obvious. (stealth wheels vs brass flywheels for inertia.)</p> </li> <li> <p>It may be useful to find one or two meta team applications and figure out what fundamental trade offs are made for that decision. This helps learners understand how these concepts relate to each other. This also applies to mechanism examples. </p> </li> <li> <p>\u201chow to cad xyz\u201d and IRL nuances are very useful for certain applications. Examples include sketching linkages or tensioner placement depending on load. </p> </li> </ol>"},{"location":"contribution/styleguide/#inspired-by-gm0s-style-guide","title":"Inspired by gm0's Style Guide","text":"<p>Don\u2019t deal in absolutes.</p> <ul> <li>Only a Sith deals in absolutes</li> <li>Use pros/cons lists to compare options</li> <li>Explain WHY something is good or bad</li> <li>For example, we all know deadaxle pivots are better than liveaxle. But don\u2019t just say they\u2019re better, say: \"Deadaxles have a higher second moment of area as the torque being directly transferred to the part. As a result your pivot is significantly more robust and less prone to breaking. \u201d</li> <li>Similarly, we know the Kraken motors are generally good. But explain why they are good, e.g. \u201cWe would recommend using Krakens on your drivetrain because they are extremely high torque motors and will improve your acceleration. In addition, they have integrated Talon FX motor controllers that make them easier to wire and feature a high resolution encoder which will help the precision of your swerve odometry. Keep in mind that Kraken motors are not yet compatible with stock REV Maxswerve modules and require an extra adaptor from WCP to mate with other existing modules.\u201d</li> <li>Still emphasize that teams are free to explore and innovate, but help set realistic expectations (see the following point)</li> </ul> <p>FRCDesign.org is a guide from a competitive standpoint. - Try to leave out stuff that doesn\u2019t work well and is unpopular; if it is popular it is worth explaining the disadvantages (See tank drive vs mecanum drive; explaining tank drive, as a relatively popular and simple drivetrain makes sense, but mecanum drive, a drivetrain that no longer makes sense in the era of swerve and has little-to-no pushing power or traction.) - Try to leave opinions out as much as possible. Do not speak authoritatively on stuff you do not have first-hand experience with whenever possible</p> <p>Keep in mind that FRC design trends are temporary and transient. - Just because something is popular one season doesn\u2019t mean it\u2019s the end all be all. There was a time when WCD and sheet metal superstructures was all the rage, but that doesn\u2019t mean that we should recommend them in this guide. Try your best to think about why something is popular, and what benefits in design, function, and execution they actually bring to the table.</p>"},{"location":"contribution/styleguide/#standards","title":"Standards","text":""},{"location":"contribution/styleguide/#file-formats","title":"File Formats:","text":"<ul> <li>Compress images to .webp format using squoosh</li> <li>Embed longer videos using a Youtube embed, and shorter videos with a webm file</li> <li>Add images by using <code>&lt;center&gt;&lt;img src=\"absolute link\" width=\"x%\"&gt;&lt;/center&gt;</code></li> </ul>"},{"location":"contribution/styleguide/#brand-standards","title":"Brand Standards","text":"<p>Adhere to brand standards when possible.</p> <ul> <li>Abide by FIRST\u00ae Trademark guidelines, available here</li> <li>The first instance of FIRST and FRC on a page should include \u00ae (i.e, FIRST\u00ae)</li> <li>Always capitalize and italize the name FIRST</li> <li>Do NOT use a possessive on the FIRST name (e.g, FIRST\u2019s)</li> </ul> <ul> <li>This also applies to team names: spell them how they are officially spelled</li> <li>Check The Blue Alliance if you don't know how to spell a team's name</li> </ul> <p>You can use \u201cyou\u201d when writing, when it makes writing less awkward. However, try avoiding excessively using it.</p>"},{"location":"contribution/styleguide/#links","title":"Links:","text":"<ul> <li>External links should open in a new tab: <code>[Link Text](link_url \"Link Title\"){:target=\"_blank\"}</code><ul> <li>Links to CAD documents should use a large centered button: <code>&lt;center&gt;[Link Text](link_url \"Link Title\"){:target=\"_blank\" .md-button .md-button--primary}&lt;/center&gt;</code></li> <li>Link titles for Onshape documents should be <code>[Document name] Onshape Document</code></li> </ul> </li> <li>Internal links should open in the current tab and use a relative link: <code>[Link Text](relative_link \"Link Title\")</code><ul> <li>Link titles for internal links should be in the format: <code>\"[Page Name] Page\"</code></li> </ul> </li> </ul>"},{"location":"design-handbook/","title":"Design Handbook","text":"<p>These sections form an extensive and in depth reference manual that covers both fundamentals and advanced techniques in FRC robot design. While examples are given in Onshape, the content is largely CAD software agnostic.</p> <p>Keep in mind that this category is a large work in progress, and will continue to be added to long after the design guide is finished. Feel free to write your own content for something we don't have yet and we'll try to incorporate it into the website (See contribution guide).</p>"},{"location":"design-handbook/#strategic-design","title":"Strategic Design","text":"<p>(WIP) Strategic Design is the holy grail of fundamentals. It can take any team's performance and raise it significantly (with a solid support structure of students and mentors). Strategic design is about all the factors that go into what robot your team decides to build, creating a successful build season schedule for getting it done, and executing it well for competitions. It's about priorities and tradeoffs. It's about designing a robot and playing the game within your capabilities. </p>"},{"location":"design-handbook/#hardware","title":"Hardware","text":"<p>These pages are all about robustness and designing with fabrication in mind. This means materials, types of structure, hardware, tolerances, and tools and machines.</p> <p>(WIP) Materials: Different types of common materials in FRC and how to use them best, how to design for manufacturing, and a guide on lightening.</p> <p>(WIP) Structure: A guide on creating robust and versatile robot structures. </p> <p>(WIP) Fasteners: A guide on fasteners and fastener standards common in FRC.</p> <p>(WIP) Sheet Metal: A guide on designing for sheet metal. </p> <p>(WIP) 3D Printing: A guide on designing for 3D printing.</p> <p>(WIP) Tolerances: A guide on tolerances to account for when manufacturing real parts.</p> <p>(WIP) Weight Savings: A guide on designing your parts to be lighter with and without pocketing.</p>"},{"location":"design-handbook/#power-transmission","title":"Power Transmission","text":"<p>These pages discuss the transmission of power to enable robot functionality.</p> <p>(WIP) Motion Components: A guide on bearings, bushings, axles, and the best use cases for them, including the mechanics behind transmission of torque through axles.</p> <p>(WIP) Transfer of Rotational Motion: A guide on rotational power transmission components. Includes gears, belts, and chain.</p> <p>(WIP) Linear Extension: A guide on linear extension systems such as worm gears and rack and pinion.</p> <p>(WIP) Motors: A guide on motors. Discusses motor selection and motor calculations.</p> <p>(WIP) Wheels and Rollers: A extensive guide on wheels found in FRC. Discusses their mechanical properties and use cases. </p> <p>(WIP) Pneumatics: A guide on how and when to use pneumatics. </p> <p>(WIP) Electronics and Sensors: A guide on how to design for electronics and incorporate sensors to improve the controllability.</p>"},{"location":"design-handbook/#mechanisms","title":"Mechanisms","text":"<p>(WIP) Drivetrains: A guide on drivetrains. </p> <p>(WIP) Elevators: A guide on elevators, including different types of rigging, COTS parts, gearboxes, and use cases.</p> <p>(WIP) Arms: A guide on arms.</p> <p>(WIP) Linkages: A guide on linkages.</p> <p>(WIP) Intakes: A guide on intakes.</p> <p>(WIP) Shooters: A guide on shooters.</p> <p>(WIP) Turrets: A guide on turrets.</p> <p>(WIP) Bumpers: A guide on bumper materials, construction, and mounting solutions, with several references.</p>"},{"location":"design-handbook/#design-write-ups","title":"Design Write-ups","text":"<p>Write-ups on important topics to take your designs a step further.</p> <p>(WIP) Designing for Controllability: Designing mechanisms and power transmissions for controllability.</p> <p>(WIP) Chain Tensioning Solutions: Tensioning chain drive mechanisms.</p> <p>(WIP) Bumper Mounting Solutions: Different solutions for bumper mounting.</p> <p>(WIP) Springs and Shocks: Different forms of tension that can be used to lessen the load on structure or motors and how to use them.</p> <p></p>"},{"location":"design-handbook/strategic-design/","title":"Strategic Design","text":"<p>Strategic Design is the holy grail of fundamentals. It can take any team's performance and raise it significantly (with a solid support structure of students and mentors). Strategic design is about all the factors that go into what robot your team decides to build, creating a successful build season schedule for getting it done, and executing it well for competitions. It's about priorities and tradeoffs. It's about designing a robot and playing the game within your capabilities. </p> <p>Coming Soon</p> <p></p>"},{"location":"design-handbook/design-writeups/DFC/","title":"Designing for Controllability","text":"<p>A guide on designing mechanisms and power transmissions for controllability. Make your programmer's life easier.</p> <p>WIP</p> <p></p>"},{"location":"design-handbook/design-writeups/bumperMounting/","title":"Bumper Mounting Solutions","text":"<p>A guide on different bumper mounting solutions.</p> <p>Coming Soon</p> <p></p>"},{"location":"design-handbook/design-writeups/chainTensioning/","title":"Chain Tensioning Solutions","text":"<p>A guide on tensioning chain drive mechanisms.</p> <p>Coming Soon</p> <p></p>"},{"location":"design-handbook/design-writeups/springs-shocks/","title":"Springs and Gas Shocks","text":"<p>A guide on springs and gas shocks.</p> <p>Coming Soon</p> <p></p>"},{"location":"design-handbook/mechanisms/arms/","title":"Arms","text":"<p>A guide on arm design.</p> <p>Coming Soon</p> <p></p>"},{"location":"design-handbook/mechanisms/bumpers/","title":"Bumpers","text":"<p>A guide on how to design and build robust bumpers.</p> <p>Coming Soon</p> <p></p>"},{"location":"design-handbook/mechanisms/drivetrains/","title":"Drivebase Fundamentals","text":"<p>A guide on drivebase design.</p> <p>Coming Soon</p>"},{"location":"design-handbook/mechanisms/elevators/","title":"Elevators","text":"<p>A guide on elevators design, including different types of rigging, COTS parts, gearboxes, and use cases.</p> <p>Coming Soon</p> <p></p>"},{"location":"design-handbook/mechanisms/intakes/","title":"Intakes","text":"<p>A guide on intake design.</p> <p>Coming Soon</p> <p></p>"},{"location":"design-handbook/mechanisms/linkages/","title":"Linkages","text":"<p>A guide on linkage design.</p> <p>Coming Soon</p> <p></p>"},{"location":"design-handbook/mechanisms/shooters/","title":"Shooters","text":"<p>A guide on shooter design.</p> <p>Coming Soon</p> <p></p>"},{"location":"design-handbook/mechanisms/turrets/","title":"Turrets","text":"<p>A guide on turret design.</p> <p>Coming Soon</p> <p></p>"},{"location":"design-handbook/power-transmission/electronics-sensors/","title":"Electronics, Motors, and Sensors","text":"<p>A guide on how to design space for electronics, an overview of motors, and incorporating sensors to improve the controllability of a robot.</p> <p>Coming Soon</p> <p></p>"},{"location":"design-handbook/power-transmission/linear-extension/","title":"Linear Extension","text":"<p>A guide on linear extension systems such as worm gears and rack and pinion.</p> <p>Coming Soon</p> <p></p>"},{"location":"design-handbook/power-transmission/motion-components/","title":"Motion Components","text":"<p>A guide on bearings, bushings, axles, and the best use cases for them, including the mechanics behind transmission of torque through axles.</p> <p>Coming Soon</p> <p></p>"},{"location":"design-handbook/power-transmission/motors/","title":"Motors","text":"<p>A guide on motors.</p> <p>Coming Soon</p> <p></p>"},{"location":"design-handbook/power-transmission/pneumatics/","title":"Pneumatics","text":"<p>A guide on how and when to use pneumatics. </p> <p>Coming Soon</p> <p></p>"},{"location":"design-handbook/power-transmission/rotation/","title":"Transfer of Rotational Motion","text":"<p>A guide on rotational power transmission components. Includes gears, belts, and chain.</p> <p>Coming Soon</p> <p></p>"},{"location":"design-handbook/power-transmission/wheels-rollers/","title":"Wheels and Rollers","text":"<p>A extensive guide on wheels found in FRC. Discusses their mechanical properties and use cases.</p> <p>Coming Soon</p> <p></p>"},{"location":"design-handbook/structure/3d-printing/","title":"3D Printing","text":"<p>A guide on designing for 3D printing.</p> <p>Coming Soon</p> <p></p>"},{"location":"design-handbook/structure/fasteners/","title":"Fastener Standards","text":"<p>A guide on fasteners and fastener standards common in FRC.</p>"},{"location":"design-handbook/structure/fasteners/#bolts-and-nuts","title":"Bolts and Nuts","text":"<p>Modern FRC generally uses two different types of imperial bolts, #10-32 and 1/4-20. FRC COTS components primarily utilize 10-32 fasteners, and with a bit of effort, we can make robots that use almost exclusively 10-32 hardware. In general:</p> <ul> <li>10-32 is used for almost everything: retaining shafts, screwing into motors, superstructure, etc.</li> <li>1/4-20 is used for structural applications where more strength is required than #10 can provide. </li> </ul> <p>When designing around hardware, it is best to use the hole tool</p> <ul> <li>10-32 hardware uses a hole diameter of 0.196 inches for a standard fit</li> <li>1/4-20 hardware uses a hole diameter of 0.257 inches for a standard fit</li> </ul>"},{"location":"design-handbook/structure/fasteners/#tapped-components","title":"Tapped Components","text":"<p>Coming Soon</p>"},{"location":"design-handbook/structure/fasteners/#bolt-retention","title":"Bolt Retention","text":"<p>Coming Soon</p>"},{"location":"design-handbook/structure/fasteners/#rivets","title":"Rivets","text":"<p>Coming Soon</p>"},{"location":"design-handbook/structure/fasteners/#welding","title":"Welding","text":"<p>Coming Soon</p> <p></p>"},{"location":"design-handbook/structure/materials/","title":"Materials","text":"<p>An overview of raw materials commonly found on FRC robots.</p>"},{"location":"design-handbook/structure/materials/#aluminum","title":"Aluminum","text":"<p>1/8, 3/16, and 1/4 aluminum stock are generally used for gussets and plates that have to be stiffer than plastic could provide. Avoid using use these materials in applications where they will be exposed beyond the robot frame, as they are not as impact-resistant as plastics and can easily bend, or fail catastrophically. 6061-T6 is the most common alloy, but 7075 is sometimes used and has higher yield strength.</p>"},{"location":"design-handbook/structure/materials/#polycarbonate","title":"Polycarbonate","text":"<p>Polycarbonate plastic is used in high impact applications such as subsystems that are exposed beyond the robot frame perimeter. Typically 1/4\" thickness is used. 1/8 or 1/16\" polycarbonate can be used for dust covers, sponsor panels, etc - it will almost never shatter and looks great.</p> <p>Tip</p> <p>\"Smoked\" or \"tinted\" polycarbonate can provide a more aesthetic look than clear. While making smoked polycarbonate is difficult, making frosted is easy! 30 seconds of sanding with an orbital sander using 240 grit will give the material a nice, glassy finish.</p> <p>Note</p> <p>Make sure to check your supplier's thickness and tolerance for each material. Sometimes something marketed as in imperial measurements is actually manufactured to fit metric tolerances. For instance: 1/4\" polycarb is actually sometimes manufactured as 6mm, which is 14 thousandths of an inch off of 1/4in. Account for these actual stock measurements when designing to make sure things end up fitting together!</p> <p></p>"},{"location":"design-handbook/structure/sheet-metal/","title":"Sheet Metal","text":"<p>A guide on designing for sheet metal. </p> <p>Coming Soon</p> <p></p>"},{"location":"design-handbook/structure/structure/","title":"Structure","text":"<p>A guide on creating robust and versatile robot structures. Covers different materials, techniques, and COTS components.</p>"},{"location":"design-handbook/structure/structure/#box-tube","title":"Box Tube","text":"<p>Coming Soon</p>"},{"location":"design-handbook/structure/structure/#tube-plugs","title":"Tube Plugs","text":"<p>Tube plugs are metal inserts that go into the ends of box tube that allow you to fasten tubes together without the use of gussets. Combining tube plugs with crush blocks provides a simple and strong connection between tubes. Tube plugs find a major use in modern elevator designs due to how much they simplify the design process. By not having to worry about bearing blocks interfering with gussets, you massively cut down on design complexity while also cutting part count and robot cost. When bolting tube plugs to the tube you typically dont need to use all 8 available bolts, with 2-4 being acceptable for most use cases.</p> <p>Note</p> <p>Tube plugs are made to fit into tubes of 1/8\" wall thickness. For tube with thinner walls you can use a plastic sleeve (possibly 3D-printed) on the outside of the tube plug to fill the gap with no strength loss.</p> <p>Important</p> <p>When using tube plugs, well-toleranced holes relative to the end of the tube are required to make a strong connection between the tubes.</p> <p></p>"},{"location":"design-handbook/structure/structure/#crush-blocks","title":"Crush Blocks","text":"<p>Crush blocks are common in modern FRC due to how frequently used thin-walled box tubing is. The main purpose of crush blocks is to prevent forces from buckling the thin wall of the tube. This is very easy to do by simply overtightening a bolt on the tube. Thus, crush blocks enable you to tighten the bolts more than you would without having a crush block. This stiffens the connection and the tube as a whole.</p> <p>Note</p> <p>Crushblocks can be made of any material, but 3D printing them is by far the simplest method of manufacturing for crush blocks. Just make sure to account for printer tolerances. Crushblocks shouldnt be too loose, but you dont want to have to hammer them in.</p> <p> Above is the simplest form of a crushblock: a piece of plastic that fills the empty space within the tube with some holes for bolts to go through. For a crush block at the end of a tube, you can include a flange to aide in alignment with the holes in the tube. Crush blocks may not be ideal for use in the middle of long tubes, since they would be hard to install and service; in these places, you can add an extra 1/16\" plate on the outside of the tube to help spread the load of tightened bolts, functionally a large washer. For additional strength, consider increasing the amount of walls to 4-6 when 3D-printing.  </p> <p></p>"},{"location":"design-handbook/structure/tolerances/","title":"Tolerances","text":"<p>A guide on accounting for tolerances to make your parts fit together properly when they are manufactured in real life.</p> <p>Coming Soon</p> <p></p>"},{"location":"design-handbook/structure/weight-savings/","title":"Weight Savings","text":"<p>A guide on methods to make your parts lighter both with and without pocketing.</p> <p>Coming Soon</p> <p></p>"},{"location":"educators-guide/introduction/","title":"Educator's Guide Overview","text":"<p>The FRCDesign.org Learning Course is a self-paced, comprehensive program that teaches FRC robot design and CAD skills. This guide is intended to help educators effectively implement the course while supporting their students throughout the learning process. Designed for accessibility, the course requires minimal prior knowledge of physics or math, making it suitable for students from various backgrounds. The emphasis is on building knowledge through consistent practice and review.</p>"},{"location":"educators-guide/introduction/#course-usage","title":"Course Usage","text":"<p>The course is built for self-paced learning, where students can progress at their own speed. It can either be used by motivated students to self-teach or in a more classroom-esque setting where it's led by student design leads or mentors. </p> Why Self-Paced? <p>Different people will have different starting points and different things they don't understand or struggle with. Going at a set pace may cause some students to be bored and others to struggle and fall behind.</p> <p>The ideal setup is for educators to offload most of the curriculum (concepts, exercises, projects) to the website, freeing them up to give more individualized help and review to each student. This is what may be called a \"self-paced blended learning\" approach, where preferably meeting time or class time is given for students to do the work at their own pace and for educators to review and catch mistakes as students are working through exercises and projects. </p> <p>This approach helps increase motivation and engagement, reduces gaps in knowledge, builds confidence, and helps make sure every student gets the support they need to learn. </p>"},{"location":"educators-guide/introduction/#course-content","title":"Course Content","text":"<p>The content itself is focused on teaching CAD through FRC-relevant exercises, where new skills and concepts are introduced in each exercise or project. Each section has a bit of explanation on the concepts or skills being introduced in the exercises, with the exercises gradually decreasing in guidance to help students get more confident with using the software.</p> <p>The progression of the course moves from learning how to use the software (while using and teaching FRC-relevant skills and engineering such as COTS parts and power transmissions) to designing whole individual mechanisms, teaching mechanism design along the way. Students will then learn how to integrate these mechanisms into full robot designs. More detailed information on each topic will be given in the Design Handbook for students or educators to use for extra information, but that's out of the scope of the course.</p> <p>Students will be able to focus on what they need to improve on through a mix of self-review and external review (from educators and/or other students).</p> Extra Practice <p>Students may choose to do their own custom mechanisms or projects to practice specific skills or learn how to design a specific mechanism; this should be encouraged and supported. External review and resources are more important for these because they don't have a specific reference for knowledge inside of the course.</p> <p>The purpose of robot design (and the specific design style the course uses) is to allow the team to effectively manufacture, build, program and drive the robot. The design style focuses on utilizing 2-D plates and patterned box tube. This is, as far as we know, the lowest resource design style with the highest ceiling, as you can get plates cut using a service such as Fabworks and cut the tubes and shafts using just a hacksaw. It makes it as easy as possible to have a tight schedule and prioritize making the robot work well and drive well. There are also countless example robots and resources using this design style to take inspiration from.</p> <p></p>"},{"location":"educators-guide/introduction/preparation/","title":"Preparation","text":"<p>Before using FRCDesign.org's Learning Course to teach your students, make sure you have an adequate understanding of the concepts covered. The best way to do this is to go through the course yourself; however, the level of involvement with which you do so is dependent on your previous knowledge. If you're new to Onshape, we recommend going pretty deep through the course as much as you can, at least so you're ahead of the students you're helping guide. If you're pretty experienced with Onshape and FRC Design, you might just go through the Educator's Guide and the Best Practices category to get a complete overview of the course and caught up to date with practices.</p> <p>Tip</p> <p>Check ChiefDelphi for any updates on the website's content and refresh yourself on the material every so often so you're up to date with information about the workflow and tools.</p>"},{"location":"educators-guide/introduction/preparation/#onshape-classroom","title":"Onshape Classroom","text":"<p>Setting up an Onshape Classroom is a great way to track student progress. Creating assignments for the various exercises also makes it easy to review the work students have done; this also useful in case you need to treat exercises as graded assignments.</p>"},{"location":"educators-guide/introduction/preparation/#recommended-onshape-classroom-setup","title":"Recommended Onshape Classroom Setup","text":"<p>Coming Soon</p>"},{"location":"educators-guide/introduction/preparation/#final-advice","title":"Final Advice","text":"<ol> <li>Remember that it is ok for students to be at wildly different sections of the course. </li> <li>Even if a student just gets through 1A, they would have enough knowledge to be somewhat helpful and easy to guide during build season. The more sections they complete, the more autonomous they should be as a designer, making them easier to lead to complete a task.</li> <li>When helping students, make sure to not handhold them too much. If you're in a situation where you can get the student to solve a problem by asking some guiding questions, do that.</li> </ol>"},{"location":"educators-guide/introduction/the-stages/","title":"The Stages","text":"<p>The course progressively builds complexity while reinforcing core concepts of CAD organization, mechanism design, and engineering best practices. It starts with basic CAD skills and culminates in complete complex mechanism designs. </p>"},{"location":"educators-guide/introduction/the-stages/#stage-section-overview","title":"Stage Section Overview","text":"<p>Stage 0: Introduction to CAD</p> <ul> <li>Introduces CAD and its importance in FRC</li> <li>Teaches how to set up Onshape accounts and install essential Featurescripts and MKCad</li> <li>Covers basic CAD theory and concepts like sketches and features</li> <li>Explains Onshape interface navigation and Documents Page</li> </ul> <p>Stage 1A: Onshape Fundamentals</p> <ul> <li>Teaches basic sketching and part modeling through FRC-relevant exercises</li> <li>Introduces mechanisms like tubes, gussets, and basic structural components</li> <li>Introduces the idea of multi-part modeling</li> <li>Covers assembly basics and mate types</li> <li>Focuses on proper organization and naming conventions</li> </ul> <p>Stage 1B: Power Transmissions  </p> <ul> <li>Introduces the origin cube and MKCAD</li> <li>Introduces motors, shafts, bearings and power transmission components</li> <li>Covers gear ratios, belt/chain drives, and mechanical advantage concepts</li> <li>Provides exercises modeling simple gearboxes and power transmission assemblies, using origin cube functions </li> </ul> <p>Stage 1C: Practice Mechanisms</p> <ul> <li>Provides increasingly complex mechanism exercises with decreasing guidance</li> <li>Includes mechanisms like shooters, intakes, and indexers</li> <li>Introduces more COTS components and assembly techniques</li> <li>Focuses on practical application of previously learned concepts</li> </ul> <p>Stage 1D: Design Methodology - Simple Swerve Drivebase</p> <ul> <li>Formally introduces top-down design methodology using layout sketches</li> <li>Teaches proper origin placement and use of the Origin Cube</li> <li>Walks through designing a basic swerve drive chassis</li> <li>Covers organization of top-level robot assemblies</li> </ul> <p>Stage 1E: Subsystem Workflow - Detailing the Drivebase</p> <ul> <li>Covers the process of fully detailing a drivebase subsystem</li> <li>Includes battery mounting, electronics placement, and bumper design</li> <li>Teaches proper cable routing and component organization</li> <li>Focuses on making assemblies manufacturable and maintainable</li> </ul> <p>Stage 2A: Basic Shooter</p> <ul> <li>Covers design of a flywheel shooter mechanism</li> <li>Teaches concepts of compression, wrap, and exit velocity</li> <li>Includes friction reduction and efficiency optimization</li> <li>Provides practical shooter design workflow</li> </ul> <p>Stage 2B: Dead Axle Pivot</p> <ul> <li>Teaches design of robust pivot mechanisms</li> <li>Covers concepts of friction, strength, and backlash</li> <li>Includes proper bearing/bushing selection</li> <li>Shows organization of moving assemblies</li> </ul> <p>Stage 2C: Slapdown Intake</p> <ul> <li>Covers design of an over-the-bumper intake mechanism</li> <li>Teaches intake design best practices and \"golden rules\"</li> <li>Introduces concepts like zombie axles</li> <li>Shows organization of complex moving assemblies</li> </ul> <p>Stage 2D: Cascade Elevator</p> <ul> <li>Teaches design of cascade vs continuous elevators</li> <li>Covers proper rigging, cable management, and tensioning</li> <li>Includes elevator block selection and implementation</li> <li>Shows organization of multi-stage linear motion assemblies</li> </ul> <p></p>"},{"location":"educators-guide/stage0/overview/","title":"Stage 0: Introduction to CAD","text":""},{"location":"educators-guide/stage0/overview/#overview","title":"Overview","text":"<p>Stage 0 serves as the foundation for the entire learning course, introducing students to CAD and specifically Onshape, the cloud-based CAD platform used throughout the course. This stage ensures all students have the necessary tools, understanding, and account setup before diving into actual mechanism design.</p> <p>These early stages are just as important as the rest, and it is highly recommended that all students run through this section to make sure they have all the necessary tools to complete the rest of course.</p>"},{"location":"educators-guide/stage0/overview/#why-cad","title":"Why CAD?","text":"<p>CAD is essential in FRC for several key reasons:</p> <ol> <li>Design Iteration: Teams can quickly test and modify designs before manufacturing</li> <li>Team Collaboration: Multiple team members can view and understand designs clearly</li> <li>Manufacturing Planning: CAD serves as a blueprint and helps with manufacturing</li> <li>Teaching Tool: Helps new members understand robot mechanisms and assembly</li> <li>Weight Management: Allows teams to track robot weight throughout the design process</li> </ol>"},{"location":"educators-guide/stage0/overview/#account-setup","title":"Account Setup","text":"<p>The stage walks through several critical setup steps:</p> <ol> <li>Creating an Onshape Education account</li> <li>Installing necessary Featurescripts:<ul> <li>Electronics Mounting</li> <li>Extrude Individual </li> <li>Gusset Generator</li> <li>Shaft Generator</li> <li>Tube Converter</li> <li>Belt &amp; Chain Generator</li> </ul> </li> <li>Setting up MKCad (FRC parts library)</li> </ol>"},{"location":"educators-guide/stage0/overview/#cad-theory","title":"CAD Theory","text":"<p>Stage 0 introduces fundamental CAD concepts:</p> <ol> <li>Sketches: 2D drawings that form the basis of 3D models</li> <li>Features: Operations that create or modify 3D geometry</li> <li>Part Studios vs Assemblies:<ul> <li>Part Studios: Where individual parts are designed</li> <li>Assemblies: Where parts are combined and constrained</li> </ul> </li> </ol>"},{"location":"educators-guide/stage0/overview/#navigation","title":"Navigation","text":"<p>Students learn to navigate the Onshape interface:</p> <ol> <li>Document Management:<ul> <li>Creating new documents</li> <li>Organizing with folders</li> <li>Version control</li> </ul> </li> <li>Interface Elements:<ul> <li>Toolbars</li> <li>Feature list</li> <li>Graphics area</li> </ul> </li> <li>View Control:<ul> <li>Pan, zoom, and rotate</li> <li>Standard views</li> <li>View shortcuts</li> </ul> </li> </ol>"},{"location":"educators-guide/stage0/overview/#best-practices","title":"Best Practices","text":"<p>The stage emphasizes several best practices:</p> <ol> <li>Organization:<ul> <li>Proper naming</li> <li>Folder structure</li> <li>Feature organization</li> </ul> </li> <li>File Management:<ul> <li>Version control</li> <li>Proper document sharing</li> </ul> </li> </ol>"},{"location":"educators-guide/stage0/overview/#learning-outcomes","title":"Learning Outcomes","text":"<p>By completing Stage 0, students should:</p> <ol> <li>Have a functioning Onshape account with necessary tools installed</li> <li>Understand basic CAD concepts and terminology</li> <li>Be able to navigate the Onshape interface</li> <li>Know how to create basic sketches and features</li> <li>Understand proper organization and best practices</li> <li>Be prepared for the hands-on exercises in Stage 1</li> </ol>"},{"location":"educators-guide/stage0/overview/#moving-forward","title":"Moving Forward","text":"<p>Stage 0 sets students up for success in later stages by:</p> <ol> <li>Providing a strong theoretical foundation</li> <li>Ensuring proper tool setup</li> <li>Establishing good organizational habits</li> <li>Introducing key concepts gradually</li> <li>Preparing for more complex designs</li> </ol> <p>The stage emphasizes taking time to properly understand fundamentals and set up tools correctly, as this investment pays dividends when tackling more complex mechanisms in later stages. It's designed to be accessible to complete beginners while still providing useful setup information for more experienced CAD users.</p> <p>If you have extra time we encourage everyone to go through the linked Onshape Learning courses, knowing more in depth how Onshape documents work will save time later compared to students needing to figure out how to use those tools themselves.</p> <p></p>"},{"location":"educators-guide/stage1/","title":"Stage 1 Overview","text":"<p>Stage 1 establishes foundational CAD skills through a carefully structured progression of learning materials and exercises. The stage is designed to build competence and confidence gradually while maintaining student engagement through FRC-relevant content.</p>"},{"location":"educators-guide/stage1/#teaching-approach","title":"Teaching Approach","text":"<p>The stage uses a multi-pronged approach combining: - Onshape's professional learning center courses for core CAD concepts - Custom FRC-specific exercises that immediately apply these concepts - Progressive reduction in step-by-step guidance to develop independence - Introduction of FRC-specific tools and best practices</p>"},{"location":"educators-guide/stage1/#stage-structure","title":"Stage Structure","text":""},{"location":"educators-guide/stage1/#stage-1a-cad-fundamentals","title":"Stage 1A: CAD Fundamentals","text":"<p>Students begin with Onshape's learning center courses covering basic sketching, part modeling, and assemblies. These courses provide professional-grade CAD instruction while minimizing educator workload. The following exercises then contextualize these skills through FRC-relevant tasks like modeling box tubes and gussets. Key learning objectives include:</p> <ul> <li>Basic sketching and part modeling techniques</li> <li>Understanding constraints and design intent</li> <li>Using Featurescripts for common FRC modeling tasks</li> <li>Assembly basics and mate types</li> </ul> <p>Warning</p> <p>The Onshape learning course material is essential for ensuring students understand the fundamental tools of Onshape and should not be skipped! If students are already familiar with the basic Onshape they tools they can skip this section, however if they are stumbling with basic tasks it might be a good idea to run them through the Onshape learning center for a refresher.</p>"},{"location":"educators-guide/stage1/#stage-1b-power-transmission-basics","title":"Stage 1B: Power Transmission Basics","text":"<p>This section introduces mechanical concepts through straightforward power transmission exercises. Students learn about:</p> <ul> <li>Speed and torque relationships</li> <li>Mechanical advantage through gear/belt/chain ratios</li> <li>Basic gearbox modeling</li> <li>Using the MKCad parts library for COTS components</li> </ul>"},{"location":"educators-guide/stage1/#stage-1c-practice-mechanisms","title":"Stage 1C: Practice Mechanisms","text":"<p>A series of increasingly complex mechanism exercises helps students develop fluency and independence. Each exercise introduces new COTS components and design techniques while reinforcing previous concepts. The gradual reduction in step-by-step instructions encourages problem-solving skills.</p>"},{"location":"educators-guide/stage1/#stage-1d-design-methodology","title":"Stage 1D: Design Methodology","text":"<p>The final section teaches the top-down design approach used in FRC robot design. Students learn:</p> <ul> <li>Creating and using layout sketches</li> <li>Organizing robot assemblies effectively </li> <li>Basic integration considerations</li> <li>Modeling a complete swerve drivebase</li> </ul>"},{"location":"educators-guide/stage1/#teaching-tips","title":"Teaching Tips","text":"<ul> <li>Encourage use of the exercise solution documents for self-checking work</li> <li>Ask us questions your students have that you are unable to answer in the discord server.</li> <li>Emphasize organization and best practices throughout to build good habits</li> <li>Don't be afraid to have students complete the exercises multiple times through to build proficiency</li> </ul> <p>The stage is designed to provide approximately 20-30 hours of instruction and practice, though timing may vary based on student experience and aptitude.</p> <p></p>"},{"location":"educators-guide/stage1/stage1a/","title":"Stage 1A: CAD Fundamentals","text":""},{"location":"educators-guide/stage1/stage1a/#overview","title":"Overview","text":"<p>Stage 1A introduces students to fundamental CAD skills through a combination of Onshape's learning courses and FRC-specific exercises. This dual approach ensures students learn proper CAD techniques while maintaining engagement through robotics-relevant applications.</p>"},{"location":"educators-guide/stage1/stage1a/#learning-objectives","title":"Learning Objectives","text":"<p>Students will learn to:</p> <ul> <li>Create and constrain basic sketches</li> <li>Model simple parts using features like extrude and fillet</li> <li>Work with multiple parts in a single part studio</li> <li>Create basic assemblies with mates</li> <li>Use FRC-specific Featurescripts</li> <li>Follow proper naming and organization practices</li> </ul>"},{"location":"educators-guide/stage1/stage1a/#teaching-structure","title":"Teaching Structure","text":""},{"location":"educators-guide/stage1/stage1a/#1-onshape-learning-courses","title":"1. Onshape Learning Courses","text":"<p>Have students complete these courses in order:</p> <ul> <li>Introduction to Sketching</li> <li>Part Design Using Part Studios</li> </ul> <p>Expected completion time: 2-4 hours per course</p>"},{"location":"educators-guide/stage1/stage1a/#2-practice-exercises","title":"2. Practice Exercises","text":"<p>Four guided exercises that apply course concepts to FRC components:</p> <ol> <li>Simple Box Tube: Basic sketching and feature creation</li> <li>Box Tube and Gusset Joint: Multiple parts in one studio</li> <li>Box Tube Frame: Using Featurescripts for FRC </li> <li>Climber Hook: Complex sketching and assembly practices</li> </ol> <p>Expected completion time: 30-45 minutes per exercise</p>"},{"location":"educators-guide/stage1/stage1a/#teaching-tips","title":"Teaching Tips","text":""},{"location":"educators-guide/stage1/stage1a/#learning-courses","title":"Learning Courses","text":"<ul> <li>Ensure students complete course exercises, not just watch videos</li> <li>Consider reviewing common misconceptions after each course</li> <li>Encourage use of keyboard shortcuts early for efficiency, if someone asks how to do something try and tell them the hotkey for it in addition to where it is on the toolbar.</li> <li>Emphasize proper sketch constraints and design intent if possible (no random dimensions)</li> </ul>"},{"location":"educators-guide/stage1/stage1a/#practice-exercises","title":"Practice Exercises","text":"<ul> <li>Review exercise solutions beforehand to understand key concepts</li> <li>Have students check their work against solution files</li> <li>Pay attention to organization and naming conventions</li> <li>Ensure students fully constrain their sketches</li> <li>Encourage use of construction geometry for better design intent</li> </ul>"},{"location":"educators-guide/stage1/stage1a/#common-student-challenges","title":"Common Student Challenges","text":"<ul> <li>Understanding sketch constraints and degrees of freedom</li> <li>Properly organizing features and parts</li> <li>Deciding when to use separate sketches vs. one sketch</li> <li>Determining correct mate types in assemblies</li> </ul>"},{"location":"educators-guide/stage1/stage1a/#resources","title":"Resources","text":"<ul> <li>Exercise solution files for reference</li> <li>Discord server for technical questions</li> <li>Onshape's help documentation</li> </ul>"},{"location":"educators-guide/stage1/stage1a/#assessment","title":"Assessment","text":"<p>Student work should demonstrate:</p> <ul> <li>Fully constrained sketches</li> <li>Proper feature and part organization</li> <li>Correct use of Featurescripts</li> <li>Understanding of design intent</li> <li>Basic assembly competence</li> </ul> <p>Expected time to complete Stage 1A: 3-5 hours depending on student experience and aptitude.</p> <p></p>"},{"location":"educators-guide/stage1/stage1b/","title":"Stage 1B - Power Transmissions","text":""},{"location":"educators-guide/stage1/stage1b/#learning-objectives","title":"Learning Objectives","text":"<p>Students will: - Understand the relationship between torque and speed in power transmissions - Learn about motors, shafts, bearings commonly used in FRC - Gain proficiency modeling different types of power transmissions (gears, belts, chain)  - Practice creating more complex assemblies and following best practices</p>"},{"location":"educators-guide/stage1/stage1b/#suggested-teaching-flow","title":"Suggested Teaching Flow","text":""},{"location":"educators-guide/stage1/stage1b/#1-theory-introduction","title":"1. Theory Introduction","text":"<ul> <li>Begin with the basic physics of torque and speed, using real-world examples</li> <li>Explain mechanical advantage and gear ratios</li> <li>Introduce motors commonly used in FRC and their characteristics</li> <li>Discuss shafts, bearings and other supporting components</li> </ul>"},{"location":"educators-guide/stage1/stage1b/#2-cad-skills-introduction","title":"2. CAD Skills Introduction","text":"<ul> <li>Demonstrate use of relevant Featurescripts (Belt &amp; Chain Gen, Shaft Generator)</li> <li>Show how to calculate center-to-center distances and gear ratios</li> <li>Introduce MKCAD library components for power transmission</li> <li>Explain best practices for modeling power transmissions</li> </ul>"},{"location":"educators-guide/stage1/stage1b/#3-guided-practice","title":"3. Guided Practice","text":"<p>Have students complete 3 progressively more complex exercises:</p> <p>Exercise 1: Simple Gearbox - Single stage reduction - Focus on basic gearbox plate design - Introduction to MKCAD and standard content</p> <p>Exercise 2: Two Stage Gearbox - Multiple reduction stages - More complex plate design - Part lightening techniques</p> <p>Exercise 3: Belt and Gear Transmission - Mixed power transmission types - Frame integration - Advanced layout sketching</p>"},{"location":"educators-guide/stage1/stage1b/#4-assessment-support","title":"4. Assessment &amp; Support","text":"<ul> <li>Review student work as they complete exercises</li> <li>Common issues to watch for:</li> <li>Improper gear/belt spacing</li> <li>Over-constrained shafts</li> <li>Poor organization of features/assemblies</li> <li>Missing considerations for manufacturing</li> <li>Provide feedback on best practices and design intent</li> </ul>"},{"location":"educators-guide/stage1/stage1b/#tips-for-success","title":"Tips for Success","text":"<ul> <li>Emphasize importance of layout sketches in power transmission design</li> <li>Encourage use of design calculators and references</li> <li>Have students explain their design choices</li> <li>Point out real examples of power transmissions from FRC robots</li> <li>Share common pitfalls and solutions</li> <li>Make connections to future mechanism designs</li> </ul> <p>The goal is to build strong fundamentals that will enable students to design more complex mechanisms in later stages. Focus on good practices and understanding rather than speed for now.</p> <p></p>"},{"location":"educators-guide/stage1/stage1c/","title":"Stage 1C - Practice Mechanisms","text":"<p>Stage 1C offers an excellent opportunity to help students develop and reinforce their CAD skills through focused practice exercises. This guide provides suggestions for effectively teaching these exercises in a classroom setting.</p>"},{"location":"educators-guide/stage1/stage1c/#learning-objectives","title":"Learning Objectives","text":"<p>Students who complete Stage 1C will:</p> <ul> <li>Apply fundamental CAD techniques learned in previous stages to model complete mechanisms </li> <li>Practice using COTS components and Featurescripts effectively</li> <li>Learn industry-standard organizational practices for assemblies and part studios</li> <li>Develop problem-solving skills through increasingly independent modeling tasks</li> </ul>"},{"location":"educators-guide/stage1/stage1c/#teaching-structure","title":"Teaching Structure","text":""},{"location":"educators-guide/stage1/stage1c/#progressive-independence","title":"Progressive Independence","text":"<p>Stage 1C gradually reduces guidance with each exercise, helping students transition from following detailed instructions to working more independently. The early exercises provide step-by-step instructions, while later ones give only high-level direction. This progression helps build student confidence.</p>"},{"location":"educators-guide/stage1/stage1c/#exercise-sequence","title":"Exercise Sequence","text":"<p>Break the exercises into manageable chunks across multiple class periods:</p> <ol> <li>Exercises 1-2 (Flat Intake &amp; Dead Axle Rollers): Heavily guided introduction to mechanism modeling</li> <li>Exercises 3-4 (Ball Shooter &amp; Telescoping Hook): Moderate guidance with increased complexity</li> <li>Exercises 5-6 (Flipped Gearbox &amp; Direction Swap): Limited guidance to build independence</li> <li>Exercises 7-8 (Vertical Rollers &amp; Indexer Centering): Minimal guidance for near-independent work</li> </ol>"},{"location":"educators-guide/stage1/stage1c/#teaching-tips","title":"Teaching Tips","text":""},{"location":"educators-guide/stage1/stage1c/#concept-reinforcement","title":"Concept Reinforcement","text":"<p>Before each exercise, review relevant concepts like: - Layout sketches and design intent - Assembly organization and mating - Use of COTS components and Featurescripts</p>"},{"location":"educators-guide/stage1/stage1c/#common-challenges","title":"Common Challenges","text":"<p>Watch for and address these frequent student difficulties: - Over-constraining assemblies - Disorganized feature trees - Inefficient modeling approaches - Poor design intent capture</p>"},{"location":"educators-guide/stage1/stage1c/#assessment-opportunities","title":"Assessment Opportunities","text":"<p>Monitor student progress through: - Completion of exercise requirements - Quality of modeling practices - Organization of assemblies and part studios - Independence in problem-solving - Ability to explain design decisions</p>"},{"location":"educators-guide/stage1/stage1c/#extension-activities","title":"Extension Activities","text":"<p>For advanced students who complete exercises early: - Challenge them to modify designs for different requirements - Have them create variations with different COTS components - Ask them to document their modeling process to share with peers</p>"},{"location":"educators-guide/stage1/stage1c/#success-indicators","title":"Success Indicators","text":"<p>Students are ready to move on when they can: - Complete mechanisms with minimal guidance - Organize their work professionally - Use COTS parts and Featurescripts effectively - Explain their modeling decisions - Troubleshoot common issues independently</p> <p>The key is maintaining a balance between structured guidance and independent practice while ensuring students develop good CAD habits. It might be a good idea to have students run through these twice as extra practice. They should be able to easily recreate these assemblies with high quality.</p> <p></p>"},{"location":"educators-guide/stage1/stage1d/","title":"Stage 1D - Design Methodology","text":"<p>Stage 1D introduces students to top-down design methodology through creating a swerve drivebase. This stage represents a significant shift from modeling individual mechanisms to understanding holistic robot design principles.</p>"},{"location":"educators-guide/stage1/stage1d/#learning-objectives","title":"Learning Objectives","text":"<p>Students who complete Stage 1D will: - Understand and apply top-down design methodology using layout sketches - Learn to use layout sketches to drive parametric part design - Practice integrating COTS components (swerve modules) into a larger assembly - Develop systematic approaches to complex mechanism design - Learn proper origin placement and reference geometry techniques</p>"},{"location":"educators-guide/stage1/stage1d/#teaching-structure","title":"Teaching Structure","text":""},{"location":"educators-guide/stage1/stage1d/#design-process-introduction","title":"Design Process Introduction","text":"<p>Begin with a thorough introduction to top-down design methodology: 1. Explain the concept of layout sketches and their importance 2. Demonstrate how layout sketches drive part geometry 3. Show examples of good vs poor design intent capture 4. Review the importance of consistent origin placement</p>"},{"location":"educators-guide/stage1/stage1d/#project-phases","title":"Project Phases","text":"<ol> <li>Layout Sketching</li> <li>Creating reference geometry</li> <li>Understanding drive layout requirements</li> <li> <p>Practicing parametric dimensioning</p> </li> <li> <p>Part Modeling</p> </li> <li>Deriving geometry from layout sketches</li> <li>Creating frame components</li> <li> <p>Modeling the bellypan</p> </li> <li> <p>Assembly Creation</p> </li> <li>Organizing assembly structure</li> <li>Integrating COTS components</li> <li>Proper constraint techniques</li> </ol>"},{"location":"educators-guide/stage1/stage1d/#teaching-tips","title":"Teaching Tips","text":""},{"location":"educators-guide/stage1/stage1d/#key-concepts-to-emphasize","title":"Key Concepts to Emphasize","text":"<p>Layout Sketches - Importance of fully defined sketches - Using construction geometry effectively - Creating parametric relationships - Proper dimension placement</p> <p>Origin Placement - Consistent origin location across documents - Using the Origin Cube properly - Importance for robot code integration</p> <p>Design Intent - Making designs parametric - Capturing mechanical relationships - Planning for future modifications</p>"},{"location":"educators-guide/stage1/stage1d/#common-challenges","title":"Common Challenges","text":"<p>Watch for these typical stumbling points: - Over-complicated layout sketches - Incorrect origin placement - Non-parametric modeling approaches - Disorganized assembly structure</p>"},{"location":"educators-guide/stage1/stage1d/#assessment-strategies","title":"Assessment Strategies","text":"<p>Monitor understanding through: - Quality of layout sketches - Parametric nature of models - Assembly organization - Design intent capture - Ability to modify designs efficiently (How hard is it to change frame perimeter)</p>"},{"location":"educators-guide/stage1/stage1d/#troubleshooting-guide","title":"Troubleshooting Guide","text":"<p>Common Issues and Solutions: - Layout sketch breaks when modified: Review constraint relationships - Parts don't update with layout changes: Check derived geometry setup - Assembly constraints fail: Review mating scheme and origin placement - Poor performance: Check assembly organization and feature tree structure</p>"},{"location":"educators-guide/stage1/stage1d/#success-criteria","title":"Success Criteria","text":"<p>Students demonstrate mastery when they can: - Create clear, parametric layout sketches - Model parts that update properly with layout changes - Organize assemblies efficiently - Explain their design decisions - Make modifications without breaking relationships</p>"},{"location":"educators-guide/stage1/stage1d/#implementation-tips","title":"Implementation Tips","text":"<p>Document Setup - Create template files with proper origin setup - Establish naming conventions - Set up standard folder structures</p> <p>Workflow Management - Break tasks into manageable chunks - Use checkpoints to verify progress</p> <p>Top-down design is core to FRC Design and CAD, these fundamentals will be expanded upon later in the course.</p> <p></p>"},{"location":"educators-guide/stage1/stage1e/","title":"Stage 1E - Subsystem Workflow","text":"<p>Stage 1E teaches students how to fully detail a drivetrain assembly by adding necessary components like battery mounting, electronics, and bumpers. This stage bridges the gap between basic modeling and creating manufacture-ready designs. This allows students to learn and practice the typical workflow of detailing a subsystem.</p>"},{"location":"educators-guide/stage1/stage1e/#learning-objectives","title":"Learning Objectives","text":"<p>Students who complete Stage 1E will: - Understand requirements for core robot systems (battery, electronics, bumpers) - Learn practical design considerations for component mounting - Practice creating complete, manufacture-ready assemblies - Develop systematic approaches to detailing assemblies - Apply FRC rules and requirements to designs</p>"},{"location":"educators-guide/stage1/stage1e/#teaching-structure","title":"Teaching Structure","text":""},{"location":"educators-guide/stage1/stage1e/#project-phases","title":"Project Phases","text":"<ol> <li>Battery Mounting</li> <li>Safety requirements</li> <li>Center of gravity considerations</li> <li>Mounting methods</li> <li> <p>Access requirements</p> </li> <li> <p>Electronics Layout</p> </li> <li>Core components overview</li> <li>Wiring considerations</li> <li> <p>Accessibility needs</p> </li> <li> <p>Bumper Design</p> </li> <li>Game manual requirements</li> <li>Mounting systems</li> <li>Material considerations</li> </ol>"},{"location":"educators-guide/stage1/stage1e/#teaching-tips","title":"Teaching Tips","text":""},{"location":"educators-guide/stage1/stage1e/#practical-considerations","title":"Practical Considerations","text":"<p>Emphasize real-world factors: - Maintenance access - Wire routing paths - Quick replacement needs - Competition considerations</p>"},{"location":"educators-guide/stage1/stage1e/#frc-specific-requirements","title":"FRC-Specific Requirements","text":"<p>Review relevant rules: - Battery mounting requirements - Electronics placement rules - Bumper specifications - Safety considerations</p>"},{"location":"educators-guide/stage1/stage1e/#design-validation","title":"Design Validation","text":"<p>Teach students to verify: - Component clearances - Access for maintenance - Rule compliance</p>"},{"location":"educators-guide/stage1/stage1e/#common-challenges","title":"Common Challenges","text":"<p>Address typical issues: - Overcrowded electronics layouts - Poor maintenance access - Bad mounting options</p>"},{"location":"educators-guide/stage1/stage1e/#assessment-strategies","title":"Assessment Strategies","text":"<p>Evaluate understanding through: - Practical accessibility - Assembly organization - Documentation quality - Design justification</p>"},{"location":"educators-guide/stage1/stage1e/#resources","title":"Resources","text":"<p>Provide access to: - FRC Game Manual - Electronics documentation - COTS component specs</p>"},{"location":"educators-guide/stage1/stage1e/#extension-activities","title":"Extension Activities","text":"<p>For advanced students: - Design alternative mounting solutions - Try out different battery positions - Compare bumper mounting methods</p>"},{"location":"educators-guide/stage1/stage1e/#success-indicators","title":"Success Indicators","text":"<p>Students demonstrate competency when they: - Meet all FRC requirements - Create serviceable designs - Provide adequate access to all critical components - Justify design decisions</p> <p>This framework helps students understand the practical aspects of robot design while maintaining focus on creating competition-ready solutions. Regular design reviews and practical considerations help ensure designs are both functional and compliant.</p> <p></p>"},{"location":"learning-course/","title":"FRC Design Learning Course","text":""},{"location":"learning-course/#frc-design-learning-course","title":"FRC Design Learning Course","text":"<p>Welcome to the design learning course, the main purpose and content of the website! Keep in mind that it's always a work in progress, so if you find any issues or have difficulty understanding something, please give us feedback!</p> <p>The purpose of the course is to take you from zero to being able to model a full robot. The content focuses on FRC-relevant features and tools, using engaging projects that not only introduce new CAD skills and practice old ones but also introduce engineering concepts. These projects gradually get less guided as you progress.</p> <p>Tip</p> <p>Despite how it looks, Onshape is quite different in its fundamentals from other CAD software. Start at Stage 0A if you're switching from another CAD software or new to CAD and Stage 1A if you already have some experience using Onshape. You will struggle with later stages if you don't have a solid grasp on the fundamentals of Onshape.</p> <p>Warning</p> <p>If you choose to skip to Stage 0, make sure to add MKCAD and the required featurescripts for the learning course.</p> <p>Warning</p> <p>Before starting, remember to take a look at the website feature guide to gain an understanding of the different features used throughout the learning course! </p> <p></p>"},{"location":"learning-course/#stage-0","title":"Stage 0","text":"<ul> <li>For people that haven't used CAD or Onshape before</li> <li>Introduction to CAD to read or skim</li> <li>Walkthrough to set up Onshape account and add necessary tools</li> <li>Guide on navigating Onshape</li> <li>Basic theory that helps develop a good mindset</li> </ul>"},{"location":"learning-course/#-stage-1-stage1-1a-onshapefundamentals-md-","title":"Stage 1","text":"<ul> <li>Learn the fundamentals of sketching, part design, multi-part modeling, and assemblies through Onshape Learning Courses and FRC-relevant exercises</li> <li>Learn about power transmission and modeling gearboxes</li> <li>Model a swerve drivebase</li> <li>Start learning top-down design workflow for FRC</li> </ul>"},{"location":"learning-course/#stage-2","title":"Stage 2","text":"<ul> <li>Learn about common mechanisms in FRC and model them</li> <li>Practice CAD skills until you're significantly more comfortable with Onshape</li> <li>Learn engineering concepts and mechanism design</li> <li>Learn layout sketches for different mechanisms</li> </ul>"},{"location":"learning-course/#-stage-3-stage3-3a-multidoc-ms-md-","title":"Stage 3 (Under Construction)","text":"<ul> <li>Practice full robot main layout sketches</li> <li>Replicate simple robots</li> <li>Practicing top-down workflow and integration</li> </ul>"},{"location":"learning-course/#stage-4-under-construction","title":"Stage 4 (Under Construction)","text":"<ul> <li>Master mechanism design</li> <li>Practice integration and workflow</li> <li>Master practices that optimize load time and make collaboration easier</li> <li>Study game history</li> <li>Learn strategic design</li> <li>Make more robots and mechanisms and get review and feedback</li> </ul>"},{"location":"learning-course/stage4/","title":"Stage 4: Next Steps","text":"<p>Welcome to stage 4, practically the last stage! In this stage, you'll focus on mastering design fundamentals to the point where they are natural. This means learning how to optimize your CAD to be more parametric, mastering best practices and workflow that makes your CAD faster and more easily collaborated on, and learning more about engineering design and strategic design. There aren't any specific steps or projects in this stage; it's a lot more open-ended, and can be seen more as a \"choose your own adventure\".</p> <ol> <li> <p>Work on your own projects and get feedback. This could be mechanisms you don't have practice with, robots for specific games, or just anything you're interested in. Practice your workflow, optimize your CAD to be more parametric, and learn new ways of doing things. Make sure to get design reviews and feedback from team members, mentors, or in the discord server. As you get better, your improvements will be more in speed gains, parametric CAD, and optimizing load times.</p> <p>Tip</p> <p>The \"design-review\" forum channel can be posted in to look for feedback with a more determined structure. Feel free to ask for more specific feedback.</p> </li> <li> <p>Examine and learn from examples of robots. Often the most important tool for learning is to look at examples of other robots. \"Steal from the best, invent the rest.\" Most things you'll ever need to design in a typical season have already been done in some form or another, and you can take easy inspiration from other teams while trying to improve it for your application. Open Alliance on ChiefDelphi is a great resource on the design and build process for many teams, and has a lot of public CAD.</p> </li> <li> <p>Learn more engineering design. Refer to the Design Handbook pages and the deep dives in the mechanism examples pages. This includes how to assess potential forces on parts of the robot, pick the right materials, design rigid structures, learn more about what parts are available to FRC teams and how to use them effectively, and at a top level, what goes into designing good mechanisms.</p> </li> <li> <p>Learn strategic design. This means learning how to set priorities and requirements for your robot. This means basing your design off of your game analysis, those priorities, and your team's capabilities. This means learning how to design simply but effectively. This means learning how to structure a build season schedule and tradeoffs based off of your priorities. There are many resources for this, including Karthik's Effective FIRST Strategies presentation, Team 1678's training material, and Team 2910's Pop-Up Presentations. Combine this with good engineering design knowledge and CAD skills and most any team can design and build an effective robot and do very well in competitions.</p> </li> </ol> <p></p>"},{"location":"learning-course/stage0/summary/","title":"Stage 0 Summary","text":"<p>Congratulations on completing Stage 0! </p> <p>You've been introduced to the idea of CAD and why we use it in FRC, helped you set up an Onshape account with useful tools, and fundamentals about navigating Onshape.</p> <p>You also learned the theory behind creating parts in feature-based CAD:</p> <ul> <li>Create a new sketch within a new part studio</li> <li>Define the sketch with constraints</li> <li>Transform the sketch into a 3D object with specified features</li> <li>Manipulate the part with additional features </li> <li>Repeat these steps until the part is complete</li> </ul> <p>All of these concepts, including the creation of parts and the assembly of those parts in assemblies, are close to universal in parametric CAD software.</p> <p>Remember: One \u201cpart studio\u201d can have multiple different parts. We won\u2019t focus on it for now, but keep it in mind!</p> <p>Now it's time to move on to Stage 1 where you'll start learning the software and doing exercises, practicing skills relevant to an FRC context. Good luck!</p> <p>Fill out this feedback form to give feedback for Stage 0 so we can collect data and get a better idea of how to improve the website!</p> <p></p>"},{"location":"learning-course/stage0/0A/cad-software/","title":"Introduction to CAD","text":""},{"location":"learning-course/stage0/0A/cad-software/#types-of-cad","title":"Types of CAD","text":"<p>There are many different kinds of CAD, usually designed for specific industries in mind. The kind of CAD an architect might use would be different from the kind of CAD engineers use. The tools required may be different as well.</p> <p>Engineers mostly use parametric feature-based CAD, which includes programs like Autodesk Inventor and Fusion, SolidWorks, and Onshape. These programs can be designed around different workflows, but usually have similar features. It's important to learn the workflow for a specific program; often, they aren't exactly transferrable.</p>"},{"location":"learning-course/stage0/0A/cad-software/#other-engineering-cad-software","title":"Other Engineering CAD Software","text":"<p>Although this guide uses Onshape, and the majority of FRC teams use Onshape due to its resources, teams may choose not to use it because of prior student and mentor experience and resources with another software, or a workflow has already been established that works very well for a team with a different software. Onshape is by no means common in the engineering industry, so mentors are more likely to be able to guide a team well using other softwares. Do note that it is very easy to learn Onshape if you have already used a different CAD software before. </p>"},{"location":"learning-course/stage0/0A/cad-software/#onshape","title":"Onshape","text":"<p>Depending on the circumstances, Onshape may not be the best fit for a team; however, this guide focuses on only Onshape. Much of the design process itself and many of the mechanism fundamentals and glossary still apply, no matter what CAD software you're using. If you choose to use a different software while going through the guide, be aware that the CAD workflow may be different and that you will have significantly less support. </p> Team 5940 is a high caliber team that models their robot in Onshape. <p></p>"},{"location":"learning-course/stage0/0A/what-and-why-CAD/","title":"Introduction to CAD","text":""},{"location":"learning-course/stage0/0A/what-and-why-CAD/#what-is-cad","title":"What is CAD?","text":"<p>CAD is an acronym for \"computer-aided design.\" It's a software tool used by engineers, manufacturers, architects, and many more designers in industry to bring their ideas to life. </p> <p>CAD is used to create a 3D model from various kinds of steps and tools to help prototype, manufacture, and market a product. Files can be sent to a machine to either print or cut material. Drawings can also be made and printed out to assist with manual machining and assembly. We use the CAD software Onshape for this guide and website. </p> <p>Note</p> <p>A quick intro to CAD and Onshape is provided in the Introduction to Parametric Feature-Based CAD official learning course, but it doesn't provide much relevant information for FRC.</p> Formula 1 racecars are an example of something that is CADed."},{"location":"learning-course/stage0/0A/what-and-why-CAD/#why-use-cad","title":"Why Use CAD?","text":"<p>CAD is the intermediary between an idea and a built product. Teams can iterate ideas before prototyping and manufacturing, and it helps cut down on prototyping time. Good CAD efficiency can help a team design a good robot in a timely manner, leaving room for software testing and drive practice.</p> <ol> <li> <p>Designing your robot in CAD allows you to make sure everything fits together perfectly. It is frustrating to realize you cut a part too short and need to recut an entirely new piece or when you need to drill random holes throughout your beautifully machined plates.</p> </li> <li> <p>While you may think your team is on the same page and has agreed upon a design, your whiteboard drawings may leave some room for interpretation. When you use CAD to model your design, everyone can see the end result and agree on a design and direction. </p> </li> <li> <p>Team members that were more heavily involved in the design process or ideation may know how the robot should function and how to fabricate it. This can leave them doing the bulk of the work. Using CAD can help those team members explain to other team members what they can to do to help build the robot. </p> </li> <li> <p>Newer team members that have not been involved in a robotics season before may have no idea what components and processes are needed to build a robot. CAD can be a great teaching tool to show those team members what is needed on the robot so they can help with the process too!</p> </li> <li> <p>The worst feeling is when you go to weigh your carefully constructed robot for the first time only to realize that it is 10 pounds overweight! You can measure your robot's size and weight in Onshape so you can make sure that it meets requirements. This gives you the opportunity to make changes before fabrication, such as using a pocketing feature to cut out excess material. </p> </li> <li> <p>CAD works like a digital blueprint and bill of materials of the robot. It allows you to figure out exactly what you need to order and make for the robot, and how it fits together.</p> </li> <li> <p>CAD skills are used in the real world all the time, when designing and testing anything from simple product design to large feats of engineering like planes or cars. Learning CAD with any CAD software can equip you with useful skills you can put on your resume, and it will allow you to learn other CAD software a little easier.</p> </li> </ol> <p></p>"},{"location":"learning-course/stage0/0B/MKCad/","title":"0B: Onshape Setup","text":""},{"location":"learning-course/stage0/0B/MKCad/#setting-up-mkcad","title":"Setting up MKCad","text":"<p>MKCad is an Onshape plugin that contains a large library of parts that are often useful in FRC.</p> <p>To install it, go to the MKCad App in the Onshape Appstore.</p> <p>Press \"Subscribe\", then \"Get for Free\". This will automatically add MKCad to your Onshape account.</p> <p>Note</p> <p>After subscribing, the MKCAD inserter won't show up in already open documents until you reload. This is a first-time thing though.</p> <p>Video Tutorial</p> <p>    Your browser does not support the video tag. </p> <p></p>"},{"location":"learning-course/stage0/0B/account-setup/","title":"0B: Onshape Setup","text":"<p>Tip</p> <p>Remember to take a look at the website feature guide to gain an understanding of the different features used throughout the learning course!</p>"},{"location":"learning-course/stage0/0B/account-setup/#registering-for-onshape","title":"Registering for Onshape","text":"<p>Onshape offers a free education license for students to use their software. It is highly recommended to use the education plan, as it allows for the creation of private documents, as well as other useful features.</p> <p>To start registering, go to the Onshape for Education page and select \"Create EDU ACCOUNT\" or click this link. Follow the slides below to finish registering.</p> <p></p>  Fill out the details in the sign up form.   On the next screen, select that you are a student and that you are in grade school.  Finally, fill the form with your school information. You may enter \"Robotics\" as the reason for using Onshape.  \u276e \u276f <p>Onshape will proceed to check your information (which may take some time), then send a verification email to activate your account. You'll be asked to set a password, then you'll enter your dashboard.</p>"},{"location":"learning-course/stage0/0B/account-setup/#account-setup","title":"Account Setup","text":"<p>The first time you enter Onshape, it will prompt you to set up your account, including the default units and mouse controls used when doing CAD. You can also set a profile picture and a nickname (we recommend keeping this as your real name).</p> <p>If your team uses Onshape, contact your mentor/design lead for access to the Onshape classroom/team. </p>"},{"location":"learning-course/stage0/0B/account-setup/#optional-onshape-educator-plan","title":"OPTIONAL: Onshape Educator Plan","text":"<p>Besides individual setup, if your team uses Onshape or are switching to it, one of your mentors or design leads should get the Educator plan and add all members to a \"classroom\". The Educator plan is free for FIRST teams and will make document management easier. It also provides a suite of features for all students added to the \"classroom\", such as simulation, release management, and classes/assignments. </p> <p>If you are interested, direct your design lead or mentors to read the ChiefDelphi post linked below for a better overview and walkthrough to set it up for your team.</p> <p>Onshape Educator Plan: What it Means for FRC Teams</p> <p></p>"},{"location":"learning-course/stage0/0B/featurescripts/","title":"0B: Onshape Setup","text":""},{"location":"learning-course/stage0/0B/featurescripts/#featurescripts","title":"Featurescripts","text":"<p>Featurescripts are custom features coded by members of the community, and are often handy tools that assist with the FRC design process. For now, follow the instructions below to install just the featurescripts you'll use in stage 1A. More thorough instructions for installing featurescripts, a list of all recommended featurescripts, and some troubleshooting tips are found on the featurescripts page.</p> <p>To get you started, lets install all the Featurescripts that you will utilize in Stage 1 and 2.</p> <ol> <li> <p>Open the document Julia's Featurescripts</p> <p>a. Click \"Custom Features\" </p> <p>b. Add the <code>Electronics Mounting</code>, <code>Extrude Individual</code>, <code>Gusset Generator</code>, <code>Shaft</code>, <code>Spacer</code>, and <code>Tube Converter</code> Featurescripts</p> </li> <li> <p>Add the <code>Origin Cube</code> Featurescript from the Origin Cube Featurescript Document</p> </li> <li> <p>Add the <code>Belt &amp; Chain Gen</code> Featurescript from the Belt &amp; Chain Gen Document</p> </li> <li> <p>Add the <code>Part Lighten</code> Featurescript from 2471's Featurescript Document (click the \"Lightening Gen\" folder when after clicking \"add custom features\")</p> </li> </ol> <p>Video Tutorial</p> <p>    Your browser does not support the video tag. </p> <p>Repeat this process for all the other Featurescript documents.</p> <p>Once you have set up your account and added MKCad and necessary featurescripts, you are ready for the next stage!</p> <p></p>"},{"location":"learning-course/stage0/0B/performance-tuning/","title":"0B: Onshape Setup","text":""},{"location":"learning-course/stage0/0B/performance-tuning/#performance-tuning","title":"Performance Tuning","text":"<p>After your initial account setup, Onshape will run a browser check to ensure compatibility. Depending on your browser, additional steps can be taken to improve performance.</p> <p>Tip</p> <p>You can test your current performance at the OnShape Compatibility Check Page.</p> <p>Note</p> <p>If the browser check fails, you may want to try a different browser. Currently, chromium browsers like Chrome, Edge, Opera, and Arc are the best supported browsers for Onshape, but Firefox usually works with no issues as well. Safari is not well supported.</p>"},{"location":"learning-course/stage0/0B/performance-tuning/#improving-chrome-performance","title":"Improving Chrome Performance","text":"<p>If you are using Chrome, You can try modifying the following settings to improve rendering speeds.</p> <ul> <li>First, type <code>chrome://settings/</code> in your search bar to navigate to chrome settings. Make sure that \"Use graphics acceleration when available\" is enabled. Relaunch chrome if you have updated it to enable it.</li> </ul> <p></p> <ul> <li>go to <code>chrome://flags/</code> and enable \"Override Software Rendering List\":</li> </ul> <p></p> <ul> <li>Finally, Try adjusting your ANGLE graphics backend:</li> </ul> <p></p> <p>Please note that performance will depend on your individual computer setup. We suggest the following process:</p> <ul> <li>Choose an ANGLE graphics backend: <code>chrome://flags/#use-angle</code></li> <li>Click the Relaunch button</li> <li>Check your performance</li> </ul> <p>Repeat these steps for each backend and use whichever is the most performant. Here are some examples all taken from the same machine.</p> The default configuration OpenGL Direct3D 9 Direct3D 11 Direct3D 11 on 12 \u276e \u276f <p>In the above example, Direct3D 11 narrowly beats out OpenGL, but that won't always be the case.</p>"},{"location":"learning-course/stage0/0C/document-navigation/","title":"0C: Navigating Onshape","text":""},{"location":"learning-course/stage0/0C/document-navigation/#navigating-documents","title":"Navigating Documents","text":"<p>An Onshape document is not a CAD file, but a container that holds data related to a project, including any number of part studios, assemblies, drawings, and other media/files. It can be versioned and linked to from other documents. There are two main types of environments in a document: part studios and assemblies.</p> General Document NavigationPart StudiosAssemblies <p>A document has some defined regions that stay generally consistent in both main environments.</p> <ul> <li>Document Toolbar: You can manage the document, navigate back to documents page (click logo), and view versions and history.</li> <li>Toolbar: Changes depending on the environment, but contains all the features you use to perform actions in Onshape. Most of these have keyboard shortcuts (full list in the help menu).</li> <li>Tab bar: Organizes different tabs in the document. Can be sorted into folders. Add new folders and tabs to the document by clicking the plus on the bottom left.</li> <li>Left Side (Feature/Part/Instance/Mate List): Breaks down how parts/assembly was made.</li> </ul> <p> </p> <p>The space in the middle is called the graphics area. You can interact with the model by selecting entities or rotating the view. </p> <p>Mouse Controls</p> <p> </p> <p>Selection</p> <p>Onshape has persistent selection, which means each left click on a face or entity adds it to a selection group. Clicking an entity again will deselect it, while clicking in the blank space or pressing the spacebar will deselect all entities.</p> <p>Measurement</p> <p>To measure lines or distances, select the entities you want to take the measurement of and the numbers will display next to the tape measure in the bottom right of the graphics area. Click the tape measure for more detailed measurements.</p> <p>One of the main differences between Onshape and other CAD systems is the part studio. </p> <p>A part studio is an environment where you can design and model one or more parts at a time and add robust relationships between them. You do this using a series of sketches and features. This helps build design intent between multiple parts easily without having to switch between different files. </p> <p>Part studios provide many different tools for designing, creating, and manipulating parts, most of which you'll learn through Stage 1. </p> <ul> <li>Dialogue Boxes: Each feature and sketch pops up a dialogue box with options to configure and confirm it</li> <li>Toolbars: The main toolbar contains all the tools you'll need to create parts, most of them with a keyboard shortcut for quick usage. <ul> <li>When editing sketches, the feature tools are replaced with sketch tools to assist in creating 2D geometry. </li> <li>Both toolbars have basic geometry creation and geometry alteration tools.</li> </ul> </li> </ul> <p>Note</p> <p>The part studio is for designing the parts, while an assembly is used for putting the parts together and defining motion (this means only model one of each part if there are duplicates and duplicate them in the assembly instead.)</p> <p>Assemblies are for positioning and establishing movement between parts. The main function for this \"mates\", which establish the degrees of freedom between parts. Parts can move freely in an assembly before their position/movement is defined with mates. The purpose of assemblies in Onshape is the same as in other CAD programs, but the workflow is significantly different.</p> <p>Info</p> <p>The assembly workflow will be taught through the learning center and exercises throughout stages 1 and 2.</p> <p>Using the assembly toolbar, you can:</p> <ul> <li>Insert parts and subassemblies</li> <li>Different kinds of mates (restrict different degrees of freedom)</li> <li>Special tools for movement and replication</li> </ul> <p>When using a mate:</p> <ul> <li>Every part and face generates mate connectors at smart spots<ul> <li>You can manually create mate connectors in part studios</li> </ul> </li> <li>Select two separate mate connectors</li> <li>Flip or rotate axis to get the part/assembly in the right orientation</li> <li>You can offset in a specific axis by distance or angle</li> </ul> <p></p>"},{"location":"learning-course/stage0/0C/documents/","title":"0C: Navigating Onshape","text":""},{"location":"learning-course/stage0/0C/documents/#documents-page","title":"Documents Page","text":"<p>Documents can be viewed and managed from the documents page. You can sort them with folders and labels. On the sidebar, you can switch between stuff owned by you and stuff owned by a classroom/team/organization, and a public search page which can be used to look through public Onshape files. In the top right corner of the page, you can access the app store, learning center, and account settings.</p> <p>You can create a document or folder or import CAD files from your computer using the \"Create\" dropdown button on the left.</p> <p></p> <p>You can complete the Navigating Onshape Course in the Onshape learning center to learn more about the documents page.</p>"},{"location":"learning-course/stage0/0C/documents/#customizing-your-account","title":"Customizing Your Account","text":"<ul> <li>Change default units and precision</li> <li>Change email notifications</li> <li>Change default view manipulation if you're more familiar with a different CAD software</li> <li>Use the subscriptions section to renew your student/educator subscription each year</li> </ul>"},{"location":"learning-course/stage0/0C/other-notes/","title":"0C: Navigating Onshape","text":""},{"location":"learning-course/stage0/0C/other-notes/#other-notes","title":"Other Notes","text":""},{"location":"learning-course/stage0/0C/other-notes/#organization-practices","title":"Organization Practices","text":"<p>One of the big reasons Onshape is desirable for FRC is its collaboration capabilities, but that means nothing when nobody can read or work with your CAD. Different subsystem leads will have to collaborate and view other separate subsystems. None of the easy communication and collaboration can be done without good organization and naming practices.</p> <p>Make it annoyingly clear what sketches and features do what. Name sketches and features, and try to use folders. Sort by parts or groups of parts (e.g. tubes, gussets, bellypan). The instance list in assemblies can also get very messy and slow down your workflow, so keep similar instances in folders. And finally, just make sure to name tabs. This will all make a big difference for the readability of your CAD by other people and yourself.</p>"},{"location":"learning-course/stage0/0C/other-notes/#versions-and-history","title":"Versions and History","text":"<p>Every action by every user is saved in the history, and can be rolled back to or created a version at. When assemblies are linked between documents, documents have to be versioned. This reduces loading times as well, since it's only referencing a single static version and not constantly attempting to update. Versions cannot be deleted, and branches can be created and merged for changes, similar to git.</p> <p></p>"},{"location":"learning-course/stage0/0D/theory/","title":"0D: Theory","text":"<p>As you probably know, CAD is a tool used to design parts digitally before they are manufactured. Most of our documentation will focus on FRC-specific CAD practice. However, to get started with Onshape, it\u2019s important to understand some basic theory.</p> <p></p> <p>Consider a basic 3D object, such as this cylinder. Every object you design in Onshape starts with a 2D sketch within a window called a part studio. Sketches are used to define a 2D profile, that is then manipulated with features. These features transform the 2D sketch, one change at a time, into a 3D object - by \u201cextruding\u201d or pulling the profile into 3D, revolving it around an axis, or by other methods. </p> <p></p>"},{"location":"learning-course/stage0/0D/theory/#starting-with-a-sketch","title":"Starting with a Sketch","text":"<p>  If you wanted to create this cylinder in Onshape, we would start by representing its profile in a 2D sketch. So what would this sketch look like for a cylinder? If we take the section from the plane on the top of the cylinder. In Onshape this is called the \u201cTop\u201d plane. We can see that this sketch forms a circle. </p> <p>Note</p> <p>We could represent the cylinder in other 2D ways, if we chose a different plane.</p>"},{"location":"learning-course/stage0/0D/theory/#making-the-leap-to-3d","title":"Making the leap to 3D","text":"<p>While in the sketch, we define the nature of the circle - its position in space and its diameter. When we bring the sketch into 3D, these characteristics are maintained - determining the final diameter and position of the cylinder within the part studio. It is important to completely define the characteristics sketches so that the characteristics of the part being designed are not arbitrary. </p> <p> But how do we transform this defined sketch into a 3D object? By using features. In this case, an \u201cextrude\u201d feature is used to extend the profile of the sketch into 3D space. Just like how we defined the sketch, we define the characteristics of this extrude. For example, we must specify a \u201cdepth\u201d or final \u201cheight\u201d for the cylinder. This is used to create the final geometry. There are many such settings we must specify when using features.</p> <p>Using a side profile of the cylinder, you may also use the \"revolve\" feature to create the cylinder. There are usually different paths you can take to modeling something, and the one you choose depends on the intent of the design.</p> <p>Note</p> <p>These concepts, using sketches and features to model shapes, are universal across most parametric CAD software.</p> <p>Additional sketches and features are used to add more complex geometry to parts or to create additional parts within the part studio.</p> <p>Note</p> <p>Features can also be used to modify existing geometry e.g. to round or chamfer corners; these don't require sketches.</p> <p></p>"},{"location":"learning-course/stage1/1A/assembly/","title":"1A: Onshape Fundamentals","text":""},{"location":"learning-course/stage1/1A/assembly/#assemblies","title":"Assemblies","text":"<p>Assemblies are where parts designed in the part studio get assembled together. This is where you truly define the position and motion of all the different parts of something. </p>"},{"location":"learning-course/stage1/1A/assembly/#learning-center-course","title":"Learning Center Course","text":"<p>Complete the following Onshape Learning Course:</p> <ul> <li>The Onshape Assemblies learning course introduces assemblies, mating parts together, and other useful assembly concepts.</li> </ul>"},{"location":"learning-course/stage1/1A/assembly/#assembly-tools","title":"Assembly Tools","text":"<p>As was introduced in the Onshape learning tutorials, when parts are inserted into an assembly, they free float. We can utilize a number of different assembly tools to constrain the motion of all the parts:</p> <ul> <li><code>Group</code>: Restricts the relative motion between a group of parts</li> <li><code>Fix</code>: Locks a part in place within the assembly (not recommended as it's not parametric)</li> <li><code>Mates</code>: Tools to constrain the degrees of freedom between parts using \"mate connectors.\" These connectors are automatically generated or manually created coordinate systems on parts. You can align the axes and apply offsets in any direction or rotation. Different mates constrain different degrees of freedom. Here are three commonly used mates:<ul> <li><code>Fasten</code>: Prevents any movement between two mate connectors, such as a bolt in a hole</li> <li><code>Revolute</code>: Allows rotational movement about the z-axis between two mate connectors (e.g. an arm pivot)</li> <li><code>Slider</code>: Enables linear movement along the z-axis between two mate connectors (e.g. an elevator)</li> </ul> </li> </ul> <p>Example of a Fasten Mate</p> <p>      Your browser does not support the video tag.    Using a fasten mate to secure a gusset to a tube. </p>"},{"location":"learning-course/stage1/1A/assembly/#best-practices","title":"Best Practices","text":"<p>The best practices for constraining an assembly, along with other assembly tools like replicate, pattern, and standard content, will be learned through projects and described in more detail in later stages. They are also outlined in the assembly best practices page.</p> <p>DO NOT MOVE PAST THIS POINT UNTIL YOU HAVE COMPLETED THE LEARNING COURSE ABOVE</p> <p></p>"},{"location":"learning-course/stage1/1A/exercise-setup/","title":"1A: Onshape Fundamentals","text":""},{"location":"learning-course/stage1/1A/exercise-setup/#practice-exercise-prerequisites","title":"Practice Exercise Prerequisites","text":"<p>Make a copy of the Stage 1A Exercises Document through the button below. Each exercise has a folder, a \"reference\" tab (a preview of what the final model should look like), and a tab or two for doing your exercise in. Solutions are also provided in the 1A Exercise Solutions Document to check your work afterwards. You do not need to make a copy of the solutions document.</p> <p> 1A Exercises Document (COPY THIS) 1A Exercise Solutions Document </p>"},{"location":"learning-course/stage1/1A/exercise-setup/#copying-a-document","title":"Copying a Document","text":"<p>Copy a document by hitting the \"Make a Copy to Edit\" button and saving it in your personal files. </p>          Your browser does not support the video tag.      Copying the 1A Exercises Document."},{"location":"learning-course/stage1/1A/exercise-setup/#tab-manager","title":"Tab Manager","text":"<p>You can navigate between the document tabs by accessing the tab manager or from the bottom navigation bar. </p>          Your browser does not support the video tag.      Accessing the Tab Manager. <p></p>"},{"location":"learning-course/stage1/1A/exercise1/","title":"1A: Onshape Fundamentals","text":""},{"location":"learning-course/stage1/1A/exercise1/#exercise-1-simple-box-tube","title":"Exercise #1: Simple Box Tube","text":"<p>For this exercise, you will be modeling a simple 2x1 with some holes in it. For this exercise, do not use any Featurescripts. </p>"},{"location":"learning-course/stage1/1A/exercise1/#box-tubes","title":"Box Tubes","text":"<p>In FRC, robot structures are typically constructed out of aluminum box tubing, similar to wood beams for a house. Aluminum box tubing is commonly found in 2\"x1\", 1\"x1\", and 2\"x2\" sizes with 1/8\" (thickwall) or 1/16\" (thinwall) wall thicknesses. Box tubing is typically referred to by its size, eg: 2x1, 1x1, and 2x2 (Spoken as \"two-by-one\", \"one-by-one\", and \"two-by-two\"). For the rest of the learning course, we will use this notation when referring to box tube.</p> Box Tube Example <p> 2x1 thinwall tube forming part of a robot structure. (Photo Credit: FRC 3647)  </p> <p></p>"},{"location":"learning-course/stage1/1A/exercise1/#instructions","title":"Instructions","text":"<p>Navigate to the \"Exercise #1 Box Tube\" tab in your copied document and follow the instructions in the slides to complete your first exercise.</p> 0. The final part. 1. Start by sketching a center rectangle on the top plane. Notice that we put the origin of the part at the center of the tube so that we can leverage the default geometry later on.  2. Extrude the rectangle symmetrically, 2\" tall.          Your browser does not support the video tag.        3. Shell the block to turn it into a 1/16\" wall tube.           Your browser does not support the video tag.        4. Add the top holes. Set the centerpoint of the hole to be vertical with the midpoint of the bottom line, then Mirror the hole across, using the front plane as the mirror line. We are able to use the front plane to mirror since we intelligently placed the origin at the center of the tube in step 1.           Your browser does not support the video tag.        5. Extrude the top holes to cut all the way through the tube.           Your browser does not support the video tag.        6. Add the side holes. Create the layout for the side holes by creating a center point rectangle and turning it into construction geometry. Again, having the origin at the center of the tube lets us place the center of the pattern at the center of the tube.  7. Extrude the side holes to cut all the way through the tube.           Your browser does not support the video tag.        8. Name the key sketches and part. You can set part appearances and materials by right clicking on the part instance. Set the material to be 6061 Aluminum. To see the mass of parts, use the <code>Display Mass Properties</code> Menu  9. Finished Part Studio.  \u276e \u276f <p>Note</p> <p>Some sketches and features have been renamed (i.e. \"Tube Profile\"). You can rename sketches and features by hovering over the name in the dialogue box and clicking the pencil icon, or right clicking a sketch or feature in the feature list and clicking \"rename\". </p> <p>Verification</p> <p>Make sure to have you and/or a more experienced member/mentor of your team review your CAD following the instructions on the previous page! Your box tube should weigh about 0.35 lbs. </p>"},{"location":"learning-course/stage1/1A/exercise1/#construction-geometry","title":"Construction Geometry","text":"<p>Notice how we utilized construction geometry to define the location of the holes on the 2\" face of the tube. Using construction geometry to assist with sketching makes your parts more parametric and betters conveys design intent compared to manually specifying the location of each hole with dimensions.</p> <p></p>"},{"location":"learning-course/stage1/1A/exercise2/","title":"1A: Onshape Fundamentals","text":""},{"location":"learning-course/stage1/1A/exercise2/#exercise-2-box-tube-and-gusset-joint","title":"Exercise #2: Box Tube and Gusset Joint","text":"<p>For this exercise, you will design two box tubes attached together with a gusset. This gusset will be created in the same part studio as the tubes that it is connecting!</p>"},{"location":"learning-course/stage1/1A/exercise2/#gussets","title":"Gussets","text":"<p>Aluminum box tubes are commonly connected together with 'gussets'. A gusset is a flat plate that, when attached to both tubes, helps create rigidity in the structure. </p> <p>Gusset Example</p> <p>  A gusset connecting two tubes on a robot.  <p></p>"},{"location":"learning-course/stage1/1A/exercise2/#featurescripts","title":"Featurescripts","text":"<p>Warning</p> <p>If you haven't already, please add MKCAD and the required featurescripts for the learning course.</p> <p>You will utilize the <code>Extrude Individual</code> and <code>Tube Converter</code> Featurescripts for this exercise. Do not use the <code>Gusset</code> Featurescript for this exercise.</p> <ul> <li> <p>The <code>Extrude individual</code> Featurescript enables you to extrude sketch regions without merging them. In this exercise, if you were to extrude the sketch of the tubes with the standard <code>Extrude</code> tool, only a single part would generate.</p> </li> <li> <p>The <code>Tube Converter</code> Featurescript condenses the steps of shelling, sketching and dimensioning holes, and extruding holes into a single, customizable feature to easily model tubes. </p> </li> </ul>"},{"location":"learning-course/stage1/1A/exercise2/#instructions","title":"Instructions","text":"Creating New Parts <p>When extruding a sketch in a part studio, you can decide whether to <code>Add</code> to existing geometry, or to create <code>New</code> geometry. <code>New</code> creates a new body, whereas <code>Add</code> will merge the feature with existing parts. Make sure that when you extrude your gusset, you tell Onshape to create a new part.  The different options for extruding </p> <p>Navigate to the \"Exercise #2 Gusset\" tab in your copied document and follow the instructions in the slides to complete the exercise.</p> 0. The finished parts. 1. Start by sketching the tubes on the right plane. Positioning the origin horizontally in the center of the part studio enables mirroring the vertical tube from the left to the right using the front plane. 2. Use the <code>Extrude Individual</code> Featurescript to extrude the blocks.  3. Use <code>Tube Converter</code> Featurescript to turn the blocks into 1/16\" wall tubes with a 0.5\" spacing pattern of 0.196\" holes. 4. Draw a triangle with construction geometry for the gusset.  5. Dimension the triangle to be 0.5\" away from the edges of the tube.  6. Use the <code>Offset</code> tool to offset the construction geometry 0.25\". This will be the outline of the gusset.  7. Use the <code>Sketch Fillet</code> tool to add a 0.25\" fillet to the three corners of the gusset.  8. Delete the three points left over from the fillet.  9. Use the <code>Use (Project/Convert)</code> tool to project the tube holes onto the gusset sketch.  10. Extrude the gusset to be 1/8\" thick. Select <code>New</code> as the extrude type to make the extrude a new part.  11. Name the key sketches and parts. Set the material to be 6061 Aluminum.  \u276e \u276f <p>Verification</p> <p>Make sure to have you and/or a more experienced member/mentor of your team review your CAD! Your parts should weigh a combined 0.27 lbs.</p> <p>In this exercise, you can begin to see the power of Featurescripts. What would have been a number of sketches, extrudes, and shells to create the tubes is packaged into a single, easy to use custom feature. </p> <p></p>"},{"location":"learning-course/stage1/1A/exercise3/","title":"1A: Onshape Fundamentals","text":""},{"location":"learning-course/stage1/1A/exercise3/#exercise-3-box-tube-frame","title":"Exercise #3: Box Tube Frame","text":"<p>For this exercise, you will create a simple frame and two gussets in the part studio, then create an assembly and mate together all the components.</p>"},{"location":"learning-course/stage1/1A/exercise3/#featurescripts","title":"Featurescripts","text":"<p>You will utilize the <code>Extrude Individual</code>, <code>Tube Converter</code>, and <code>Gusset</code> Featurescripts for this exercise.</p> <ul> <li>The <code>Gusset</code> Featurescript is an easy way to create simple gussets by selecting the locations of the holes the gusset should attach to. <ul> <li>Usually you will want to manually sketch a gusset because you want more control over the shape of it, a more complex shape, or to make it more parametric.</li> <li>Using the holes of tubes created by tube converter can cause sketches and features to break when the length of the tube changes</li> </ul> </li> </ul>"},{"location":"learning-course/stage1/1A/exercise3/#instructions","title":"Instructions","text":"<p>Navigate to the \"Exercise #3 Structure\" part studio tab in your copied document and follow the instructions in the slides to complete the exercise.</p> 0. Final assembly. 1. Start by sketching the tubes on the right plane. 2. Use the <code>Extrude Individual</code> Featurescript to extrude the blocks. 3. Use <code>Tube Converter</code> Featurescript to turn the blocks into 1/16\" wall tubes with a 0.5\" spacing pattern of 0.196\" holes. 4. Use the <code>Gusset</code> tool to create the top gusset by selecting the holes on the tube.  5. Use the <code>Gusset</code> tool to create the bottom gusset by selecting the holes on the tube.  6. Name the key sketches and parts. The materials will have already been set to 6061 Aluminum from the Featurescripts.          Your browser does not support the video tag.        7. Insert the parts into the assembly by directly clicking on the green checkmark. Then, <code>Group</code> all the parts together. Finally, <code>fix</code> the bottom tube in place.           Your browser does not support the video tag.        8. Copy and paste the gussets four times. Then, use the <code>Fasten</code> mate to attach the gussets to the tube.           Your browser does not support the video tag.        9. Some gussets may need to have their <code>Fasten</code> mate reoriented in order to properly line up.  10. Finished assembly.  \u276e \u276f <p>Verification</p> <p>Make sure to have you and/or a more experienced member/mentor of your team review your CAD! Your assembly should have 12 instances and weigh approximately 1.95 lbs.</p> <p>In this exercise, you were introduced to yet another highly useful Featurescript for creating gussets. Additionally, notice that we only model 1 of each type of gusset in the part studio. For the tubes, we choose to model all of the tubes even though the two vertical tubes are the same - this is to make assembly more parametric since the tube would otherwise be difficult to mate.</p> <p>It should be noted that while fixing the tube is not considered an assembly best practice for setting the origin of an assembly, it is sufficient for the purposes of these exercises.</p> <p></p>"},{"location":"learning-course/stage1/1A/exercise4/","title":"1A: Onshape Fundamentals","text":""},{"location":"learning-course/stage1/1A/exercise4/#exercise-4-climber-hook","title":"Exercise #4: Climber Hook","text":"<p>As you get more comfortable with modeling, we can begin to create more complex parts. For this exercise, you will create a climber hook and tube. Then, you will create the assembly and mate together the components.</p> <p>You will utilize the <code>Spacer</code> Featurescript for this exercise.</p>"},{"location":"learning-course/stage1/1A/exercise4/#instructions","title":"Instructions","text":"<p>Navigate to the \"Exercise #4 Climber Hook\" part studio tab in your copied document and follow the instructions in the slides to complete the exercise.</p> 0. Final assembly. 1. Start by sketching the tube on the right plane. 2. Use the <code>Tube</code> Featurescript to create a thin-wall 1\"x1\" tube with no holes. 3a. Start the climber hook sketch by drawing the construction geometry circle that represents the bar on which the hook will grab onto. The hole on the far right would be to attach a rope to pull the hook with.          Your browser does not support the video tag.        3b. Draw the outline of the hook. Pay attention to the sketch constraints used. To avoid adding unintended sketch relations, you can hold down the shift key while sketching to disable inferred sketch constraints.          Your browser does not support the video tag.        4. Use the <code>Linear Pattern</code> sketch tool to pattern the mounting holes.  5. Make the hook 3/16\" thick. Select <code>New</code> as the extrude type to make the extrude a new part.   6. Fillet the bottom two corners with a 0.25\" radius.          Your browser does not support the video tag.        7. Use the <code>Spacer</code> Featurescript to add a 0.5\" diameter spacer. Use the `Up to Face` end condition to make the spacer match the tube width.  8. Use the <code>Use</code> sketch tool to add the mounting holes to the tube.  9. Name the key sketches and parts. Set the material of the hook and spacer to 6061 Aluminum.  10. Finished assembly.  \u276e \u276f <p>Verification</p> <p>Make sure to have you and/or a more experienced member/mentor of your team review your CAD! Your assembly should have 5 instances and weigh approximately 0.56 lbs.</p> <p>In this exercise, you practiced more advanced sketching and were introduced to the <code>Spacer</code> Featurescript. </p> <p></p>"},{"location":"learning-course/stage1/1A/focusing-on-improvement/","title":"Focusing on Improvement","text":"<p>When going through the exercises throughout Stage 1 and 2, an intentional focus on improving specific skills and speeding up your workflow can help accelerate your learning and make the exercises more effective. </p>"},{"location":"learning-course/stage1/1A/focusing-on-improvement/#exercise-instructions","title":"Exercise Instructions","text":"<p>When doing an exercise, follow these steps:</p> OPTIONAL: Time Yourself <p>Optionally, start a stopwatch or timer or record yourself doing CAD. This can help you focus better, but also creates a better sense of awareness of what you're spending the most time on so you can focus on that in the future.</p> <ol> <li>Try to catch errors as you are modeling. This may be based on awareness built from prior reviews and experience.</li> <li>Get your CAD as close to finished as possible.</li> <li>Take a 5-minute break doing something else that isn't your project or on devices. Walking around, cleaning your room/shop, doing laundry, etc.</li> </ol>"},{"location":"learning-course/stage1/1A/focusing-on-improvement/#review-instructions","title":"Review Instructions","text":"<p>The review at the end is to catch the mistakes you didn't catch during your design process. As you build awareness, knowledge, and intuition, you will learn to focus on not making those mistakes again or finding them and fixing them while modeling.</p> <p>OPTIONAL: Have a Mentor Help Review</p> <p>Your student design lead or mentor, if available, can help review your exercise by asking the questions in the following instructions, alongside giving their own feedback. This is best done after your own self-review, though.</p> <p>It's important to start this early and be consistent to stop bad habits from forming!</p> <p>After doing your exercise and taking the 5-minute break, use the following instructions/template to self-review effectively:</p> <ol> <li> <p>Check your model without using the reference solution first to see if you missed anything or made any mistakes along the way (an offset is wrong, a wrong mate connector was used, you missed a part). </p> </li> <li> <p>If you catch an error, ask these questions:</p> <ul> <li>What caused you to make the error? </li> <li>Was this error made previously or multiple times? Are there any tendencies in your workflow that cause this error to happen?</li> <li>What can you do to make sure the error doesn't happen again?</li> </ul> OPTIONAL: Note Stuff Down <p>Get out a document or a sheet of paper or even use a discord message to write stuff down.</p> </li> <li> <p>Repeat step 2 and fix any errors/mistakes you find until you feel that the model is perfect to the best of your ability. </p> <ul> <li>You may not be able to find any mistakes; this is common when starting out, but as you gain more experience you'll be able to find more of your own mistakes.</li> </ul> </li> <li> <p>Now compare your model and feature tree with the reference in the provided Solutions Document for the section. </p> <ul> <li>Repeat steps 2 and 3, using the solution document as the reference.</li> <li>Add to the notes for each new error you find: why did you miss this mistake in your first self-review?</li> </ul> </li> <li> <p>Examine the best practices presented in the reference. Ask yourself what you need to improve on to improve the readability and parametricity of your CAD. This may include naming things, using folders, and using general recommended CAD practices outlined here.</p> Why Follow Best Practices? <p>If making your CAD parametric and naming things adds time to your CAD, why do it? There are several reasons, but it can be boiled down to making it easier and faster to go back and make changes, for both you and anyone else. In reality, most time spent doing CAD, especially for a robot, will be making changes or redoing things. </p> <p>You spend 5 minutes now to save hours in the future, so make it a habit!</p> </li> <li> <p>Final reflections:</p> <ul> <li>How did you feel about your workflow and your time spent? Were there any parts of your CAD process that felt particularly slow? Anything you struggled on?</li> <li>What caused you to struggle on those particular processes? Is there a certain lack of experience or knowledge that caused you to have difficulty there?</li> <li>What do you need to learn or practice to get better in those areas?</li> </ul> </li> <li> <p>During future exercises and projects, use this review to intentionally focus on the parts of your practices and workflow that need improvement.</p> </li> <li> <p>If available, have someone else review your CAD. This can make you aware of gaps in your knowledge and help you fill them.</p> </li> </ol> <p></p>"},{"location":"learning-course/stage1/1A/introduction/","title":"1A: Onshape Fundamentals","text":""},{"location":"learning-course/stage1/1A/introduction/#introduction","title":"Introduction","text":"<p>Welcome to Stage 1! Here, you'll engage in a series of Onshape exercises and projects designed to introduce and develop your CAD skills within an FRC context. </p> <p>In Stage 1A, there are 3 major sections: sketching and part design, multi-part part studios, and assemblies. Each section has a link to a learning course to learn the skills of each topic, then an exercise to help immediately apply those skills in an FRC context. </p> <p>Tip</p> <p>Remember to take a look at the website feature guide to gain an understanding of the different features used throughout the learning course!</p>"},{"location":"learning-course/stage1/1A/introduction/#learning-courses","title":"Learning Courses","text":"<p>Onshape's Learning Center provides free learning courses and articles covering everything from document navigation and sketching to advanced surface and sheet metal modeling. It's a valuable resource for both novice and seasoned users alike. We use a few selected courses to assist learning the fundamentals of doing CAD in Onshape, but the rest of the curriculum is project based.</p> <p>The structure of the courses includes some short videos and practice models, expected time is 2-4 hours.</p> <p>Warning</p> <p>The Onshape learning courses are important as they will teach you the interface and form a basic foundation for CAD skills. Unless you have a significant amount of prior experience using Onshape, you should not skip the learning courses as the exercises assume that you have an understanding of CAD basics.</p>"},{"location":"learning-course/stage1/1A/introduction/#split-screen","title":"Split Screen","text":"<p>The learning courses and exercises work better if you can see both the instructions and the Onshape document at the same time. Tabbing back and forth can lose a significant amount of time when going through the course. </p> <p>The recommended way of going through the course is using two screens, but if this isn't possible, split screen is an option that works. The toolbars in Onshape will be shrunk, but learning keyboard shortcuts can minimize the time loss this might cause.</p> <p></p> Example of split screen when doing the Onshape Learning Courses <p></p>"},{"location":"learning-course/stage1/1A/multi-body/","title":"1A: Onshape Fundamentals","text":""},{"location":"learning-course/stage1/1A/multi-body/#multi-part-modeling","title":"Multi-Part Modeling","text":"<p>Onshape is a software focused on a top-down design workflow using multi-part part studios. It allows you to create several different related parts in the same tab, all referencing each other, making the part creation for something like a subsystem easy.</p>"},{"location":"learning-course/stage1/1A/multi-body/#learning-center-course","title":"Learning Center Course","text":"<p>Complete the following Onshape Learning Course:</p> <ul> <li>The Multi-Part Part Studios course runs you through top-down design principles, sketching for multiple parts (layout sketches), and some more practical skills for working with multiple parts in a part studio.</li> </ul> <p>Check out this page to learn more about best practices for sub-documents. The following practice exercises will reinforce these concepts.</p> <p>Multi-Part Part Studio Example</p> <p>Notice how there's only one instance of each unique part within this part studio. The part studio resembles the completed product, as the parts are modeled relative to each other.   Example of a part studio </p> <p>DO NOT MOVE PAST THIS POINT UNTIL YOU HAVE COMPLETED THE LEARNING COURSE ABOVE</p> <p></p>"},{"location":"learning-course/stage1/1A/sketch-part-modeling/","title":"1A: Onshape Fundamentals","text":""},{"location":"learning-course/stage1/1A/sketch-part-modeling/#sketching-and-part-design","title":"Sketching and Part Design","text":"<p>Sketches and features are the building blocks you will use to create every 3D model in Onshape, so it's good to have a good grasp on the fundamentals.</p>"},{"location":"learning-course/stage1/1A/sketch-part-modeling/#learning-center-courses","title":"Learning Center Courses","text":"<p>Complete the following Onshape Learning Courses:</p> <ol> <li> <p>The Introduction to Sketching course runs you through different sketch tools, constraints, and a good sketch workflow.</p> </li> <li> <p>The Part Design Using Part Studios course runs you through creating different parts with a variety of features.</p> </li> </ol> <p>With a good understanding of both of these, you can create almost any part you want to. The following sections are all about integrating design intent into the process and learning how to design a whole project with multiple pieces.</p> <p>Keyboard Shortcuts</p> <p>Most sketch tools and feature tools have keyboard shortcuts available. Learning and using these can help speed up your workflow a ton. If you don't know the keyboard shortcut though and can't find the tool, use the shortcut <code>alt+c</code> to bring up the search bar and type the name of the tool you're looking for.</p> <p>Help Center Pages</p> <p>For future reference without having to go through the learning center, sketch basics, sketch tools, feature basics, and feature tools are all covered in text form in the help center. </p> <p>DO NOT MOVE PAST THIS POINT UNTIL YOU HAVE COMPLETED THE TWO LEARNING COURSES ABOVE</p> <p></p>"},{"location":"learning-course/stage1/1A/summary/","title":"1A: Onshape Fundamentals","text":""},{"location":"learning-course/stage1/1A/summary/#summary","title":"Summary","text":"<p>Congratulations on completing Stage 1A! Remember, practice is essential \u2013 the more CAD models you create, the more proficient and efficient you'll become. Using keyboard shortcuts can significantly accelerate your CAD workflow. Be attentive to best practices to avoid developing any bad habits. Keep up the good work!</p> <p>Here is a quick summary of what you have achieved in 1A:</p> <ul> <li>Learned how to use the Onshape interface and basic sketching and modeling features with the Onshape Learning Center courses</li> <li>Learned how to model basic FRC structures</li> <li>Learned how to use the <code>Gusset</code>, <code>Extrude Individual</code>, <code>Tube Converter</code>, and <code>Spacer</code> Featurescripts</li> <li>Learned how to assemble basic models using <code>Group</code> and <code>Fasten</code></li> <li>Learned about leveraging default geometry to enable easy symmetry with intelligently placed origins</li> </ul> <p>In stage 1B, you will be introduced to power transmissions, which enable your robot to move and score. </p> <p>Make sure to fill out our simple feedback form for 1A so we can collect data and get a better idea of how to improve the website!</p> <p></p>"},{"location":"learning-course/stage1/1B/belts/","title":"1B Power Transmissions","text":""},{"location":"learning-course/stage1/1B/belts/#belts-and-pulley-basics","title":"Belts and Pulley Basics","text":"<p>Timing belt and pulley drives are mechanical systems used to transmit motion and power between rotating shafts using flexible belts and pulleys. The system consists of two main components: the belt, which is a flexible loop made of a material like rubber, and the pulleys, which are wheels with grooves that the belt wraps around. As one pulley rotates, it drives the belt, which in turn drives the other pulley, transferring motion and power from one shaft to another.</p> A belt and pulley transmission. (Image Source: ReCalc) <p>In order to change the torque and speed from the input to the output, different sized pulleys must be used. The mechanical advantage for belt transmissions, similar to gears, is based on the ratio between the number of teeth of the output pulley to the number of teeth of the input pulley. Note that unlike gears, pulleys will spin in the same direction.</p>"},{"location":"learning-course/stage1/1B/belts/#types-of-belt","title":"Types of Belt","text":"<p>Like gears, belts also have a pitch. The pitch is defined as the distance between each tooth on the belt. In FRC, this is typically 5 mm. The pitch length of the belt is then the pitch (5 mm) multiplied by the number of teeth. Belts will always have an integer number of teeth so the pitch length will be a multiple of 5mm.</p> <p>For example, an 80T belt will have a length of 400 mm.</p> <p>Belts also come in various widths. In FRC, you will typically use either 9 mm or 15 mm wide belts.</p>"},{"location":"learning-course/stage1/1B/belts/#modeling-belt-transmissions","title":"Modeling Belt Transmissions","text":"<p>To model belts, you will need two featurescripts, the <code>Origin Cube</code> Featurescript and the <code>Belt &amp; Chain Gen</code> Featurescript. In order for the 'Belt &amp; Chain Gen' Featurescript to create the belt, it needs the pitch diameter of at least two pulleys or sprockets and a correct center to center distance, both of which will use the functions from the <code>Origin Cube</code> featurescript.</p> <p>Note</p> <p>The Origin Cube also has additional functionality for robot and mechanism assemblies that will be discussed in later stages. You can also check out these practices on the assembly best practices page. The Origin Cube feature must be the first feature in all part studios from here on out in order for the functions to be available.</p> <ol> <li> <p>Insert the <code>Origin Cube</code> feature using the <code>Origin Cube</code> Featurescript. The exercises in 1B do not require the cube generated by the feature so we will uncheck it.  Origin Cube Feature Options </p> </li> <li> <p>In your layout sketch, draw two circles to represent pulley pitch diameters. Dimension the circles using the <code>#PulleyPD_5mm(# of teeth)</code> function.</p> <ul> <li><code>#PulleyPD_5mm(n)</code>: Calculates the pitch diameter of a 5 mm pitch pulley with <code>n</code> teeth.</li> <li>Ex: <code>#PulleyPD_5mm(18)</code> returns the pitch diameter of an 18T 5mm pitch pulley.</li> </ul> <p>Tip</p> <p>This is typically done in your layout sketch because distances between shafts connected by belts will be driven by the center-to-center distance for the closest belt size.</p> </li> <li> <p>Draw the center line to connect the pulleys and set your target c-c distance. In this example, our target c-c distance is 5\". Make sure all sketch entities are construction. Optionally connect the circles with tangent lines. Confrm the sketch.         Your browser does not support the video tag.      </p> </li> <li> <p>Use the <code>Belt &amp; Chain Gen</code> Featurescript to generate a 3D model of the belt. The reference plane mate connector sets the location of the centerline of the belt. You can modify the selected mate connector to offset the location of the belt. You can also choose to generate belt teeth, but this will significantly increase rebuild time and is not recommended.         Your browser does not support the video tag.      </p> </li> <li> <p>The <code>Belt &amp; Chain Gen</code> Featurescript will return the closest whole number belt size and the pitch length. Assuming that you only stock belts in 5T increments, the next closest belt size is 80T.  </p> </li> <li> <p>Modify the c-c dimension to use the <code>#BeltCTC_5mm()</code> function to get an exact c-c distance for the 80T belt. Checking the <code>Show Expressions</code> box enables you to see the belt pitch, pulley tooth counts, and belt tooth count.</p> <ul> <li><code>#BeltCTC_5mm(n1, n2, n3)</code>: Calculates the c-c distance of a <code>n1</code> tooth 5 mm pitch belt connecting pulleys with tooth count <code>n2</code> and pulley with tooth count <code>n3</code>.</li> <li>Ex: <code>#BeltCTC_5mm(80,18,36)</code> returns the center distance for an 80T 5 mm pitch belt connecting an 18T pulley to a 36T pulley.</li> </ul> <p>      Your browser does not support the video tag.    </p> Capturing Design Intent <p>Before the advent of these two Featurescripts, designers would need to use online calculators, such as ReCalc, to calculate c-c distances. However, this method does not capture design intent as it relies on copy-pasting a calculated value into the layout sketch.</p> <p> Design intent is captured in the top sketch but not the bottom. </p> </li> <li> <p>The <code>Belt &amp; Chain Gen</code> feature automatically updates and we can see that the belt tooth count is correct (80T) and the pitch length is a multiple of 5 mm, meaning that the belt tooth count is exact and not being rounded.  </p> </li> </ol> <p></p>"},{"location":"learning-course/stage1/1B/chain/","title":"1B: Power Transmissions","text":""},{"location":"learning-course/stage1/1B/chain/#chain-and-sprocket-basics","title":"Chain and Sprocket Basics","text":"<p>Roller chain and sprocket drives are very similar to belt and pulley transmissions. They consist of two main components: a chain, which is a series of interconnected links, and sprockets, which are toothed wheels that mesh with the chain. As the sprockets rotate, they engage with the chain, causing it to move and transmit power from one shaft to another. Bikes are an everyday object that use chain to transmit power. Chains excel at transmitting high force over long distances.</p> A simple animation of chain and sprocket. Notice that the sprockets will spin in the same direction. <p>In order to change the torque and speed from the input to the output, different sized sprockets must be used. The mechanical advantage for chain transmissions, similar to gears and pulleys, is based on the ratio between the number of teeth of the output sprocket to the number of teeth of the input sprocket. Similar to pulleys, the sprockets will spin in the same direction.</p>"},{"location":"learning-course/stage1/1B/chain/#types-of-chain","title":"Types of Chain","text":"<p>The two commonly used sizes of roller chain in FRC is #25 and #35 chain, with 0.25\" and 0.375\" pitch respectively. For chain, the pitch is the length of each link. The pitch length of the chain is then the pitch (0.25\" or 0.375\") multiplied by the number of links. Try to use an even number of links to avoid the use of a \"half-link\" which is weaker than a full-link. This means your chain pitch length should be a multiple of 0.5\".</p> <p>Additionally, the chain clearance diameter describes the diameter of the sprocket with the chain wrapped around it. The following equation can be used:</p> <p><code>Clearance Diameter = PD + Pitch</code></p> <p>Below is an illustration of the pitch, pitch diameter, outside diameter, and chain clearance diameter of a sprocket.</p> Illustration of chain sprocket diameter measures. (Image source: WCP) <p>In FRC, #25 chain is most commonly used as it is strong yet relatively lightweight. #35 is sometimes used on very high torque transmissions, but it is heavy and bulky. </p>"},{"location":"learning-course/stage1/1B/chain/#modeling-chain-transmissions","title":"Modeling Chain Transmissions","text":"<p>The modeling workflow for chain is the exact same as for belts in the previous page. You will need the pitch diameter of the two sprockets and a correct center-to-center distance.</p> <p>Utilize the <code>Origin Cube</code> Featurescript function to dimension the pitch diameters of two sprockets on points you want connected with a chain. </p> <ul> <li><code>#SprocketPD_25(n)</code>: Calculates the pitch diameter of a #25 pitch sprocket with <code>n</code> teeth.<ul> <li>Ex: <code>#SprocketPD_25(16)</code> returns the pitch diameter of an 16T #25 pitch sprocket.</li> </ul> </li> </ul> <p>Generate a 3D model of the chain with the same <code>Belt &amp; Chain Gen</code> Featurescript that you used for belts, check the chain link count that it generates, then  go back to the sketch and dimension your center-to-center distance using that chain link count to get the correct center-to-center distance. Use the following Origin Cube function: </p> <ul> <li><code>#ChainCTC_25(n1, n2, n3)</code>: Calculates the c-c distance of a <code>n1</code> link #25 pitch chain connecting sprocket with tooth count <code>n2</code> and sprocket with tooth count <code>n3</code>.<ul> <li>Ex: <code>#ChainCTC_25(80,16,48)</code> returns the center distance for an 80 link #25 pitch chain connecting a 16T sprocket to a 48T sprocket.</li> </ul> </li> </ul>"},{"location":"learning-course/stage1/1B/chain/#chain-tensioners","title":"Chain Tensioners","text":"<p>One difficulty when designing with chain is that it will physically stretch as it is used. This means the distance between each link will slightly increase, making the overall chain longer in a non-insignificant way. Loose chain can be difficult to fix if the chain transmission is not designed with chain tensioning in mind. Although you will not be learning about chain tensioning methods quite yet, you should keep this idea in the back of your mind. </p> <p>In Stage 2, different chain tensioning methods are introduced in the context of different types of robot mechanisms. The Design Handbook page also dives deeper into this topic.</p> <p>Example of Chain Tensioning</p> <p> A \"turnbuckle\" chain tensioner. The turnbuckle acts as a variable-length link in the chain that can be adjusted to keep the chain tight. (Photo Credit: FRC 1538) </p> <p></p>"},{"location":"learning-course/stage1/1B/exercise1/","title":"1B: Power Transmissions","text":""},{"location":"learning-course/stage1/1B/exercise1/#practice-exercises","title":"Practice Exercises","text":"<p>Time to practice! Start by make a copy of the Stage 1B Exercises Document through the button below, just like you did with the Stage 1A Exercises Document. Each exercise has a folder, a \"reference\" tab (a preview of what the final model should look like), and a tab or two for doing your exercise in. Solutions are also provided in the 1B Exercise Solutions Document to check your work afterwards.</p> <p>1B Exercises Document (COPY THIS) 1B Exercise Solutions </p>"},{"location":"learning-course/stage1/1B/exercise1/#exercise-1-simple-gearbox","title":"Exercise 1: Simple Gearbox","text":"<p>In this exercise, you will be CADing and assembling a simple single stage gearbox. The goal of this exercise is to introduce how to model a very simple gear transmission. Additionally, you will learn how to use the the <code>Shaft</code> Featurescript, <code>Replicate</code> tool, MKCad parts library, and part configurations.</p> <p>Warning</p> <p>As this is the first exercise where MKCAD is being used, please be sure you have it added by following the tutorial in Stage 0! MKCAD is a parts library for FRC used for inserting COTS components into assemblies.</p> <p>Note</p> <p>Exercise 1 adds hardware (bolts and nuts) to the CAD models. You can read more about hardware standards on the Design Handbook page.</p>"},{"location":"learning-course/stage1/1B/exercise1/#layout-sketches","title":"Layout Sketches","text":"<p>A layout sketch is a sketch that captures the geometry of a design without specifying the exact details.  They are like the framing of a house\u2014it defines the overall structure and relationships between key components, but doesn't include the finishing details like walls or paint.  Keeping the key dimensions in a layout sketch makes it easy to adjust when needed. We will utilize layout sketches for almost all designs moving forward.</p>"},{"location":"learning-course/stage1/1B/exercise1/#part-studio-instructions","title":"Part Studio Instructions","text":"<p>Navigate to the \"Exercise #1 Part Studio\" tab in your copied document and follow the instructions in the slides to complete the part studio.</p> 0. Finished Part Studio.  1. Begin by creating the layout sketch for the gearbox. Draw the pitch circles for the 60T and 12T gears. Set the pitch circles tangent to constrain the center-to-center distance between the gears. Constrain the centers of the two gears to be vertical.  2. Add the outline of the motor, a 2.5\" diameter circle, around the 12T gear that the motor is attached to. The layout sketch is now finished.    3. Create a new sketch for the motor plate. Using the layout as the reference, draw a 1.125\" hole for the bearing and a 0.8\" hole for the motor boss (the nub that sticks out from the motor). Note that depending on your manufacturing processes and tolerances, you may need to draw your bearing holes slightly larger or smaller than nominal (1.125\").   4. Add two mounting holes for the motor. A good practice to constrain the holes is to draw and dimension a bolt circle, then draw the holes for the bolts on the bolt circle. This constrains the distance of the holes from the center of the motor with a single dimension. The bolt circle for the motor we are using is 2\".    5. Add the four bolt holes for connecting the two plates. Use a center rectangle to create the construction geometry so that only two dimensions are required to constrain the holes.      6. Using centerpoint arcs, lines, and the sketch mirror tool, draw the outline for the plate around the holes and motor outline. The intelligent placement of the origin along the vertical line of symmetry allows you to use the right plane to mirror the plate outline.   7. Extrude the motor plate to be 1/4\" thick.   8. Use the <code>Spacer</code> Featurescript to add a round 3/8\" diameter, 5/8\" long spacer.   9. Create the outer plate sketch on the face of the spacer. Use the <code>Use</code> sketch tool to copy the geometry and holes of the motor plate, but add a round cutout at the top. 10. Extrude the outer plate to be 1/4\" thick.          Your browser does not support the video tag.        11. Use the <code>Shaft</code> Featurescript to model the output shaft. Follow the settings used. You can learn more about the shaft retention property on the Design Handbook page.   12. Finished part studio. Name the key sketches and parts. Set the material of the plate and spacers to 6061 Aluminum. The shaft has its material automatically determined from the <code>Shaft</code> Featurescript. \u276e \u276f"},{"location":"learning-course/stage1/1B/exercise1/#assembly-instructions","title":"Assembly Instructions","text":"<p>When putting together the assembly, you may need to use the \"Lock Mate Inferences\" functionality to properly mate the motor pinon. Watch the following video to learn how:</p> Locking Mate Inferences when Mating Assemblies <p>To lock mate inferences when you see the one you want to select, hold the <code>Shift</code> key when mousing. This is particularly useful for mating the motor pinion gear.       Your browser does not support the video tag.    Using Shift key to lock mate inferences while mating.</p> <p>Navigate to the \"Exercise #1 Assembly\" tab in your copied document and follow the instructions in the slides to complete the exercise.</p> 0. Final assembly.          Your browser does not support the video tag.         1. Insert the part studio into the assembly and fix the gearbox plate. Group mate the two plates together and then mate the spacer to the motor plate. Then, use the <code>Replicate</code> tool to replicate the spacer and its associated mate onto the other spacer locations.           Your browser does not support the video tag.         2. Assemble the bearings and shaft using parts from the MKCad App.          Your browser does not support the video tag.         3. Assemble the motor and motor pinion gear using parts from the MKCad App. You will need to use mate inference locking to fasten the motor to the motor pinion: See the above drop down to learn how.           Your browser does not support the video tag.         4. Assemble the shaft spacer and gear using parts from the MKCad App. Configurable parts will have a blue grid icon in the instance list. Notice how you were able to change the tooth count of the gear from 40T to 60T after mating it. Using configurable components like this makes your models more parametric since you can change the component without needing to re-insert and mate.           Your browser does not support the video tag.         5. Assemble the shaft retention bolts using the MKCad app parts.           Your browser does not support the video tag.         6. Assemble the motor bolts, gearbox bolts, and nuts using the Onshape Standard Content and MKCad app parts. When inserting Onshape Standard Content, you can use the snap mode to automatically add the mates when inserting or insert the component and then manually mate it.  7. Finished assembly. Make sure to sort your parts into folders and name your replicate features.  \u276e \u276f <p>Verification</p> <p>Make sure to have you and/or a more experienced member/mentor of your team review your CAD! Your assembly should have 19 Instances and weigh approximately 2.3 lbs.</p>"},{"location":"learning-course/stage1/1B/exercise1/#configurable-parts","title":"Configurable Parts","text":"<p>In this exercise you made your first gearbox. In doing so, you also used part configurations - a powerful tool that allows for variations of the same part. The gears that you inserted from MKCad were configurable - you were able to easily change the tooth count of the gear without needing to inserting a new component. Try and use configurable parts when they are available to make your models more parametric.</p> <p></p>"},{"location":"learning-course/stage1/1B/exercise2/","title":"1B: Power Transmissions","text":""},{"location":"learning-course/stage1/1B/exercise2/#exercise-2-two-stage-gearbox","title":"Exercise 2: Two Stage Gearbox","text":"<p>In this exercise, you will be CADing and assembling a two stage gearbox. The goal of this exercise is to practice modeling more advanced gearboxes. You will also learn how to use the <code>Part Lighten</code> Featurescript used for lightening parts.</p>"},{"location":"learning-course/stage1/1B/exercise2/#part-studio-instructions","title":"Part Studio Instructions","text":"<p>Navigate to the \"Exercise #2 Part Studio\" tab in your copied document and follow the instructions in the slides to complete the part studio. </p> 0. Final assembly. 1a. Create the layout sketch for the gearbox. Start by drawing the 2nd stage, which is a 20T gear to a 50T gear. 1b. Draw the first stage, which is a 12T motor pinion gear to a 50T gear. 1c. Draw the outline of the motors as a 2.5\" diameter circle. This is the finished layout sketch for the gearbox. 2. Create a new sketch to draw the profile of the plate. Add the bearing holes, which are 1.125\" diameter holes, as well as the motor boss holes, which are 0.8\". Also add the motor mounting holes. You can utilize the <code>Mirror</code> sketch tool to mirror the geometry from the left side to the right side.  3. Extrude the plate to be 1/4\" thick. 4. Use the <code>Spacer</code> Featurescript to create the gearbox spacer.           Your browser does not support the video tag.        5. Use the <code>Shaft</code> Featurescript to create the first stage shaft.  6. Use the <code>Shaft</code> Featurescript to create the output shaft. 7. Create a sketch on the face of the plate and draw the lines for the pocketing ribs.           Your browser does not support the video tag.        8. Use the <code>Part Lighten</code> Featurescript to pocket the plate by selecting the ribs created by the previous sketch.  9. Finished part studio. Name the key sketches and parts. Set the material of the plate and spacers to 6061 Aluminum.  \u276e \u276f"},{"location":"learning-course/stage1/1B/exercise2/#assembly-instructions","title":"Assembly Instructions","text":"<p>Next, navigate to the \"Exercise #2 Assembly\" tab in your copied document and follow the instructions in the slides to complete this exercise. </p> 0. Final assembly.          Your browser does not support the video tag.        1. Insert the part studio into the assembly and fix only the gearbox plate. Mate the spacer to the plate. Then, use the <code>Replicate</code> tool to replicate the spacer and its associated mate onto the other spacer locations.  2. Copy the gearbox plate and mate it into place.  <li>          Your browser does not support the video tag.        3. Assemble the bearings and shafts using parts from the MKCad App.  </li> <li>          Your browser does not support the video tag.        4. Assemble the motor and motor pinion gear using parts from the MKCad App.  </li> <li>          Your browser does not support the video tag.        5. Assemble the shaft spacers and gears using parts from the MKCad App.  </li> <li>          Your browser does not support the video tag.        6. Assemble the shaft retention bolts, motor bolts, gearbox bolts, and nuts using the Onshape Standard Content and MKCad app parts.  </li> 7. Finished assembly. Make sure to sort your parts into folders and name your replicate features.  \u276e \u276f <p>Verification</p> <p>Make sure to have you and/or a more experienced member/mentor of your team review your CAD! Your assembly should have 27 instances.</p> <p>In this exercise, you practiced more complex gearbox modeling and mating together larger assemblies. </p> <p></p>"},{"location":"learning-course/stage1/1B/exercise3/","title":"1B: Power Transmissions","text":""},{"location":"learning-course/stage1/1B/exercise3/#exercise-3-belt-and-gear-transmission","title":"Exercise 3: Belt and Gear Transmission","text":"<p>In this exercise, you will be modeling a two stage gearbox that uses gears and belts. This gearbox will also include elements like frame and gussets, which you previously learned in Stage 1A. The goal of this exercise is to continue to ramp up your modeling skills. Always make sure to fully define your sketches and keep your feature and instance trees organized.</p>"},{"location":"learning-course/stage1/1B/exercise3/#part-studio-instructions","title":"Part Studio Instructions","text":"<p>Navigate to the \"Exercise #3 Part Studio\" tab in your copied document and follow the instructions in the slides to complete the part studio for this exercise.</p> 0. Final part studio. 1. Draw the tube profiles for the frame. There is a an 1/8\" gap between the slanted tube and the vertical tube to allow for assembly tolerances.  2. Use the <code>Extrude Individual</code> Featurescript to extrude the tube profiles. 3. Use the <code>Tube Converter</code> Featurescript to convert the rectangles into hole patterned 1x1 thin-wall tube (1/16\" thick wall). 4. Use the <code>Gusset</code> Featurescript to add a corner gusset between the lower two tubes. 5. Create the gearbox layout sketch on the outer face of the bottom tube. Begin by drawing the two gears, a 60T and 20T gear. The 60T gear is the output, and we would like to constrain it to a specific location given by the 2\" and 4.5\" dimensions. 6. Next, draw the 5mm pitch 12T and 36T pulleys. Use a line to connect the two pulleys. Use the <code>#PulleyPD_5mm()</code> function to calculate the pitch diameters of the pulleys. Also space the 36T pulley to be 0.25\" from the vertical tube. This step fully constrains the location of the gears. 7. Add the belt c-c to the layout sketch for a 60T HTD5 belt using the <code>#BeltCTC_5mm()</code> function. 8. Optionally draw two tangent lines to connect the two pulley circles. This represents the belt. 9. Finally, sketch a 2.5\" circle for the motor. Space the motor to be 1/8\" away from the slanted tube. The layout sketch is now fully defined. 10. Create the plate sketch on the outer face of the bottom tube. Begin by drawing the two 1.125\" diameter bearing holes. Add a 0.95\" for the bearing boss instead of the standard 0.8\" so that the 12T pulley on the motor can fit through the hole to assist with real life assembly. This will become more clear when you create the gearbox assembly. 11. Add a 2\" bolt circle for the motor with a circular pattern. Constrain the center of the top left hole to be coincident with the center line between the pulleys (coincident uses an infinite extension of the line)  12. Add the tube mounting holes for the plate. Note that the holes reference the edges of the tube and not the holes on the tube. This is to make the model more parametric, as changes in the tube can change the locations of the holes and break the gearbox plate sketch. 13. Draw the outline for the plate using centerpoint arcs and tangent lines. Space the bottom of the plate 0.25\" from the edge of the pitch circle for the 60T gear.  14. Add two holes for spacers. The construction circles represent the 3/8\" diameter spacer. The top hole is tangent with the left edge of the plate and tangent with the 2.5\" motor circle. 15. Extrude the plate to be 1/4\" thick. 16. On the opposite side, create a sketch for the inner plate. Utilize the <code>Use</code> sketch feature to copy over common geometry (holes, outline). Do not copy the motor holes, as there will be a cutout on the inner plate for the body of the motor. 17. Finish the outline of the plate by adding an arc for the motor cutout. 18. Extrude the inner plate to be 1/4\" thick. 19. Add a 3/16\" radius fillet on the two edges for the motor cutout. The radius is selected to match the 3/8\" diameter spacer. 20. Model the 3/8\" diameter spacer. The <code>Up to Face</code> end condition can be utilized to keep the spacer length parametric.          Your browser does not support the video tag.        21. Use the <code>Belt &amp; Chain Gen</code> Featurescript to create a model of the belt. The pitch of the belt is 5mm and the width is 9mm. Offset the reference plane by 0.5\" so that the belt does not collide with the plate. Optionally turn on teeth modeling - note that this option will significantly increase rebuild time. Notice that the <code>Belt &amp; Chain</code> Featurescript also calculates the pitch length of the belt which allows us to verify that we calculated the correct C-C in step 7 and 8.  22. Use the <code>Shaft Generator</code> Featurescript to create the 1st stage shaft. Note that this length is simply an estimate. While you could calculate the length of the shaft based on the components that will go on it, it is often easier to create the assembly then measure what the shaft length should be and update accordingly. 23. Use the <code>Shaft Generator</code> Featurescript to create the output shaft. 24. Optionally pocket the plates. To begin, create a sketch on the outer face of the motor plate and draw lines to create the struts. 25. Use the <code>Part Lighten</code> Featurescript to add the pocketing by selecting the previous sketch. Use 0.15\" wide ribs and 0.26\" tool diameter.  26. Create a sketch on the inner plate and draw the strut lines. You can utilize the <code>Use</code> sketch feature to copy over strut lines from the motor plate pocketing sketch. 27. Use the <code>Part Lighten</code> Featurescript to add the pocketing by selecting the previous sketch. Again, use 0.15\" wide ribs and 0.26\" tool diameter.  28. Finished part studio. Name the key sketches and parts. Set the material of the plate and spacers to 6061 Aluminum. The tube, gusset, and shafts should have their material automatically set already.  \u276e \u276f"},{"location":"learning-course/stage1/1B/exercise3/#assembly-instructions","title":"Assembly Instructions","text":"<p>Now that you've completed the part studio, navigate to the \"Exercise #3 Assembly\" tab in your copied document and follow the instructions in the slides to finish this exercise.</p> 0. Final assembly.          Your browser does not support the video tag.        1. Insert the part studio into the assembly and fix only the bottom tube. Use the group mate on the tubes, plates, and gusset. Copy the gusset and mate it to the other side of the tube. Next, mate the spacer to the plate and use the <code>Replicate</code> tool to replicate the spacer.           Your browser does not support the video tag.        2. Assemble the bearings and shafts using parts from the MKCad App. Use the <code>Replicate</code> tool to replicate the bearing.          Your browser does not support the video tag.        3. Assemble the 36T pulley, belt, motor, and motor pinion pulley using parts from the MKCad App. Notice that the motor pinion is offset 1/16\" from the bottom of the shaft to better align with the belt. Additionally, notice that the belt requires only a single fasten mate since its orientation was determined by how it was modeled in the part studio.          Your browser does not support the video tag.        4. Assemble the shaft spacers and gears using parts from the MKCad App. Notice that this time we used a pocketed gear for the 60T gear. Pocketed gears are the same as normal gears except they have some material removed to save weight.           Your browser does not support the video tag.        5. At this point, you have all of the core components assembled and can update the length of the first stage shaft. Copy the measured shaft length and update the part studio accordingly. It is recommended to round up to the nearest 0.01\" for manufacturability.           Your browser does not support the video tag.        6. Assemble the shaft retention bolts using MKCad app parts.          Your browser does not support the video tag.        7. Assemble the motor bolts, gearbox bolts, and nuts using the Onshape Standard Content and MKCad app parts          Your browser does not support the video tag.        8. Assemble the gusset rivets using the MKCad app parts. 9. Finished assembly. Make sure to sort your parts into folders and name your replicate features.  \u276e \u276f <p>Verification</p> <p>Make sure to have you and/or a more experienced member/mentor of your team review your CAD! Your assembly should have 31 instances.</p> <p>In this exercise, you modeled a fairly complex gearbox that was integrated with some frame elements. At this point, you should be begin to feel comfortable with the sketching and extrude tools. You should also familiarize yourself with all the options present in the Featurescripts that you have used up until this point by playing around with different settings. </p>"},{"location":"learning-course/stage1/1B/exercise3/#parametric-modeling","title":"Parametric Modeling","text":"<p>To get a feel for how parametric your model is, you can try and change certain key dimensions in the layout sketches, such as the length of the tubes, angle of the tubes, length of the belt, and the size of the gears. Play around with which modifications will update smoothly and which require additional fixes in the CAD.</p> <p>You may also be curious as to how things like the hole sizes, materials, etc were selected in each of these designs. You are encouraged to learn more by browsing the Design Handbook pages which contain in-depth information on a wide range of topics, or by discussing with your team and or other students and mentors on the DDS Discord.</p> <p></p>"},{"location":"learning-course/stage1/1B/gears/","title":"1B: Power Transmissions","text":""},{"location":"learning-course/stage1/1B/gears/#power-transmissions","title":"Power Transmissions","text":"<p>In FRC, the three most common types of power transmissions are gears, chain and sprocket, and belt and pulley. Although they all achieve the same end result of changing speed and torque, they each excel in different situations. In the following sections you'll be introduced to each of them and how to model them.</p> <p>Note</p> <p>Gears, sprockets, and pulleys all follow profile standards that specify how big the teeth are. This means that the ratio between the number of teeth and diameter of the part is a constant. There are different profile standards, but only parts of the same profile can be meshed or used together.</p>"},{"location":"learning-course/stage1/1B/gears/#gear-basics","title":"Gear Basics","text":"<p>Gears are mechanical devices with teeth that mesh with each other to transmit motion or power between rotating shafts. They're like wheels with teeth that fit together, allowing them to transfer torque, change speed, and change direction of rotation. </p> A simple animation of two gears meshing. Notice that meshed gears will spin in opposite directions. <p>In order to change the torque and speed from the input to output, different sized gears must be used. Remember that the ratio is related to the number of teeth of the gears. Teeth will always mesh together one by one, but the number of teeth per revolution is different for different sized gears, causing a difference in angular speed even if the surface speed of the gear is the same. Click through the following slides to see a visualization of different gear ratios.</p> <p>Changing Speed and Torque with Gears</p> 1. A 12T gear drives an 84T gear. The gear ratio is 84:12, which can be simplified to 7:1. The torque is increased by 7x while the speed is reduced to 1/7 of the original speed. (Image source: WCP) 2. A 48T gear drives an 24T gear. The gear ratio is 24:48, which can be simplified to 1:2. The torque is reduced to 1/2 of the original torque while the speed is increased by 2x. (Image source: WCP) 3. If the same size gears are used, there is no change in speed and torque. However, the direction of the rotation is flipped if there is an even number of gears from input to output. If there is an odd number of gears, the direction remains the same. (Image source: WCP) \u276e \u276f"},{"location":"learning-course/stage1/1B/gears/#center-to-center-calculation","title":"Center to Center Calculation","text":"<p>To calculate how far apart to space the gears, you can use the following formula to calculate the center-to-center distance:</p> <p><code>CC = 0.5*PD1 + 0.5*PD2</code></p> <p>Where <code>PD1</code> and <code>PD2</code> are the Pitch Diameters of the two gears. The Pitch Diameter (PD)  is the size of the imaginary circle that passes through the center of the gear teeth. The pitch diameters of two gears should be tangent in order for the gears to properly mesh. The equation for PD is as follows:</p> <p><code>PD = (# of teeth) / DP</code></p> <p>Where DP stands for diametral pitch. For now, you can assume it to always be 20. If you're curious, you can learn more about this in the Design Handbook pages.</p> Illustration of a gear's pitch diameter and outer diameter. (Image source: WCP)."},{"location":"learning-course/stage1/1B/gears/#modeling-gear-transmissions","title":"Modeling Gear Transmissions","text":"<p>When modeling, an easy way to set the center-to-center distance between two gears is to draw two circles sized to the gears' pitch diameters and then set the two circles to be tangent to each other. For example, if you need to mesh a 20T gear and a 60T gear, you can draw a <code>20/20 = 1\"</code> and a <code>60/20 = 3\"</code> circle and add a tangent constraint between the two circles. </p> Modeling gear C-C distance by constraining two pitch diameter construction circles tangent. The diameters of the circle are calculated by dividing the tooth count by DP, which is 20 in this case. <p>It's recommended to input the pitch diameter fraction (Eg: <code>(60/20)\"</code>) rather than the calculated pitch diameter (Eg: Only inputting <code>3\"</code> as the dimension) so that you can easily see what the circle represents (a gear, sprocket, or pulley) and how many teeth it has. </p> <p>Tip</p> <p>You can show the expression that a dimension was evaluated from by checking the <code>Show Expression</code> checkbox on the sketch menu. The result will look like the previous image, which allowed you to easily see that the two gears were a 20T and 60T gear, both 20 DP.</p> <p></p>"},{"location":"learning-course/stage1/1B/introduction/","title":"1B: Power Transmissions","text":""},{"location":"learning-course/stage1/1B/introduction/#introduction","title":"Introduction","text":"<p>So far the models you have created are all structural components, but this is only half of what makes up a robot. In order to make our robots move and score, motors that generate rotational motion are typically utilized. In Stage 1B, you'll be introduced to modeling basic power transmissions. Power transmissions include the motors, bearings, shafts, gears, belts, and chains that are used to transform rotational motion from a motor to do just about anything. </p> <p>In this stage, you'll focus on the fundamentals of power transmissions, with an emphasis on how to model them in CAD. The process of selecting motors and calculating power transmission ratios will be explored later in Stage 2 of the guide with multiple different mechanisms.</p>"},{"location":"learning-course/stage1/1B/introduction/#examples","title":"Examples","text":"<p>Take a look below at some examples of different types of power transmissions found in robots.</p> <p>Examples of Power Transmissions in Robots</p> <p>Power Transmission Examples  Belt and gear power transmission to spin intake rollers. (Photo Credit: FRC 3647)   Gear and chain power transmission to pivot the intake. (Photo Credit: FRC 3647)   Belt and gear power transmission to spin shooter wheels. (Photo Credit: FRC 3647)  Gear and chain power transmission to rotate a small arm. (Photo Credit: FRC 3647)  Gear and chain power transmission to rotate a large arm. (Photo Credit: FRC 3647) \u276e \u276f </p> <p>In this stage, there are exercises designed to practice modeling simple power transmissions in the form of stand alone gearboxes. In stage 2, you will begin to model power transmissions integrated within mechanisms.</p> <p></p>"},{"location":"learning-course/stage1/1B/motors/","title":"1B: Power Transmissions","text":""},{"location":"learning-course/stage1/1B/motors/#motors","title":"Motors","text":"<p>Motors spin! They transform electrical energy supplied by the robot battery into rotational motion. From intaking to climbing to driving, just about anything on your robot can be moved with the right motor(s).</p> Some of the motors available for use in FRC."},{"location":"learning-course/stage1/1B/motors/#cim-class-motors","title":"CIM Class Motors","text":"<p>In FRC, a number of different motor options are available, all with different advantages and use cases. The most common type of motor found in modern FRC is the \"CIM class\" motor. This includes the CIM, Mini-CIM, VEXpro Falcon 500, WCP Kraken x60, REV NEO, and REV NEO Vortex. While each of the CIM class motors have different speeds and power, they have two traits in common for modeling:</p> <ul> <li>The motors' outer diameters can be represented with a 2.5\" diameter circle (some are slightly smaller at 60mm/2.362\").</li> <li>The motors have anywhere from 2 to 11 holes for mounting, but all are on a 2\" diameter bolt circle (See below image). The holes are #10-32 threaded, as #10-32 is the hardware standard for FRC COTS parts.</li> </ul> Mounting holes for CIM class motors are on a 2\" diameter bolt circle. All of the holes are 1\" away from the center of the motor. <p>All of the exercises for this stage will use CIM class motors. </p> <p></p>"},{"location":"learning-course/stage1/1B/shafts-bearings/","title":"1B: Power Transmissions","text":""},{"location":"learning-course/stage1/1B/shafts-bearings/#shafts-and-bearings","title":"Shafts and Bearings","text":""},{"location":"learning-course/stage1/1B/shafts-bearings/#shafts","title":"Shafts","text":"<p>Shafts transmit rotational power along an axis, with hex shafts being the most common in FRC. These hexagonal shafts, typically in 1/2\" and 3/8\" diameters (measured from flat to flat), may sometimes have rounded corners, known as \"rounded hex\" or \"Thunderhex.\"</p>"},{"location":"learning-course/stage1/1B/shafts-bearings/#bearings","title":"Bearings","text":"<p>Bearings allow shafts to spin independently of plates and/or things to spin independently of shafts. Standard hex shafts use 1/2\" hex bearings, while rounded hex shafts can use round bearings for easier assembly.</p> A 1/2\" rounded hex bearing (Left) and 1/2\" rounded hex shaft (Right) (Image Source: WCP)"},{"location":"learning-course/stage1/1B/shafts-bearings/#example","title":"Example","text":"<p>Example of a Shaft Spinning in a Bearing</p> <p> A spinning shaft in bearings </p>"},{"location":"learning-course/stage1/1B/shafts-bearings/#bushings","title":"Bushings","text":"<p>Bushings are a cheap and low friction alternative to bearings and are used with metal shafts such as shoulder bolts, hex shafts, and round tube, mainly to save space. They are made out of a self-lubricating material such as bronze or acetal/delrin and typically used in applications with relatively low RPM, such as for pivots and linkage joints. </p> A Bronze Bushing (Image Source: WCP)"},{"location":"learning-course/stage1/1B/shafts-bearings/#modeling","title":"Modeling","text":"<p>The easiest and most parametric way to model shafts is to use the <code>Shaft</code> Featurescript, which you learn how to use in the following exercises. </p> <p>For bearings, insert your desired bearing from the MKCad app.</p> <p></p>"},{"location":"learning-course/stage1/1B/summary/","title":"Summary","text":""},{"location":"learning-course/stage1/1B/summary/#summary","title":"Summary","text":"<p>Congratulations on completing Stage 1B! Keep up the good work! Remember that practice and review are key - the only way to get better is to model more.</p> <p>Here is a quick summary of what you have achieved in stage 1B:</p> <ul> <li>Learned about speed, torque, and mechanical advantage</li> <li>Learned the basics of motors, bearings, shafts, gears, chain and sprockets, and belt and pulleys</li> <li>Learned how to model basic power transmissions</li> <li>Learned how to use the <code>Belt &amp; Chain Gen</code>, <code>Shaft</code>, and <code>Part Lighten</code> Featurescripts</li> <li>Learned how to use the <code>Origin Cube</code> FRC functions Featurescript for chain and belt c-c's</li> <li>Learned how to insert Standard Library components and mate bolts and nuts</li> <li>Learned how to use the <code>Replicate</code> tool</li> <li>Learned how to insert models into assemblies using the MKCad parts library</li> </ul> <p>Again, it should be noted that Stage 1B is a very basic introduction to modeling power transmissions and some details were glossed over. Stage 2 will introduce how to design power transmissions - selecting motors and calculating optimal ratios. </p> <p>In stage 1C, you will be practicing the skills you've learned so far by modeling a number of different mechanisms. These mechanisms will focus on introducing some COTS parts, refining CAD skills, and introducing more useful Onshape tools to use when modeling. </p> <p>Make sure to fill out our simple feedback form for 1B so we can collect data and get a better idea of how to improve the website!</p> <p></p>"},{"location":"learning-course/stage1/1B/torque-speed/","title":"1B: Power Transmissions","text":""},{"location":"learning-course/stage1/1B/torque-speed/#torque-and-speed","title":"Torque and Speed","text":"<p>When designing power transmissions, there are two interlinked quantities that we are trying to modify: torque and speed. Torque refers to the rotational force applied to an object, while speed denotes how quickly that object rotates. In FRC, the unit used for speed is typically Rotations Per Minute (RPM). The units used for torque is typically Newton-Meters (Nm).</p> <p>Torque and Speed</p> <p>Speed and torque are inversely related in mechanical systems. This means that as one increases, the other decreases, and vice versa. For example, if speed is decreased by 4x, torque is increased by 4x. This is because of the principle of conservation of energy: the output energy is the same as the input energy (ignoring losses like friction), so if speed is reduced through mechanical means, torque must increase.</p>"},{"location":"learning-course/stage1/1B/torque-speed/#mechanical-advantage","title":"Mechanical Advantage","text":"<p>Many mechanical systems use the principle of the conservation of energy to convert energy from one form to another to produce either larger forces or faster speeds. Mechanical advantage is the ratio of output force to input force in a system, whether it's a lever, screw, gears, or pulley, mechanical advantage is used to quantify how the force changes.</p> <p>The ratio between the number of teeth of the input and output gear/sprocket/pulley system represents the mechanical advantage of that system. This is also called the gear ratio, and is the key to understanding how to achieve a needed torque or speed from the specified torque and speed of a given motor.</p> <p>Gear ratio is typically written in the form <code>n1:n2</code>. Since torque and speed are interlinked quantities, the ratio can be understood from the perspective of torque or speed. From the perspective of torque, <code>n1</code> is the output torque for <code>n2</code> input torque. From the perspective of speed, <code>n1</code> is the speed of the input for <code>n2</code> speed of the output. </p> <p>Example</p> <p>A system has a gear ratio of 4:1. This means the output torque is 4x the input torque and that the output speed is 1/4 the input speed.</p> <p>For a single stage transmission (only two transmission components), <code>n1</code> is the size of the driven component for <code>n2</code> size of the driving component.</p>"},{"location":"learning-course/stage1/1B/torque-speed/#ratio-applications","title":"Ratio Applications","text":"<p>An arm mechanism needs very low RPM but a lot of torque to control efficiently, so a large reduction of speed might be used to increase torque. This depends on the weight and length of the arm, but can be 30:1 up to even 200:1. </p> <p>Shooter wheels or intake rollers often have little to no reduction, and in some cases may even need to go faster than the motor's free speed. In this case, an upduction can be be used to increase the speed, but the output torque gets lower as a consequence. Upductions typically don't get much higher than 1:2 due to the available motors already having a high speed, low torque output. A 1:2 upduction would double the speed and halve the torque of the input.</p> <p>Tip</p> <p>For situations that require higher speed and higher torque than what a single motor can provide, add more motors.</p> <p></p>"},{"location":"learning-course/stage1/1C/exercise-overview/","title":"1C: Practice Mechanisms","text":""},{"location":"learning-course/stage1/1C/exercise-overview/#exercise-overview","title":"Exercise Overview","text":"<p>Make a copy of the Stage 1C Exercises Document through the button below. Each exercise has a folder, a \"reference\" tab (a preview of what the final model should look like), and a tab or two for doing your exercise in. Solutions are also provided in the 1C Exercise Solutions Document to check your work afterwards. You do not need to make a copy of the solutions document.</p> <p> 1C Exercises Document (COPY THIS) 1C Exercise Solutions Document </p> <ul> <li> <p></p> </li> <li> <p></p> </li> </ul> Two of the exercises in this section <p>Each exercise should take from around an hour to a few hours to complete depending on your experience.</p> <p>As you progress through the exercises, the level of guidance will gradually decrease. This is to help transition you from more guided exercises to projects that have little more than the parts to be added and the reference model, as will be the norm for the rest of Stages 1 and 2. While you should reference the solutions document to ensure your model and modeling methods are correct, try to avoid blindly copying the model later in the exercises.</p>"},{"location":"learning-course/stage1/1C/exercise-overview/#focusing-on-improvement","title":"Focusing on Improvement","text":"<p>The primary goal of this stage is to get you enough practice with CAD and modeling in the context of FRC where you won't need guidance in every step that you do. </p> <p>Focus on refining your CAD techniques and following best practices such as fully constraining your sketches, learning and practicing keyboard shortcuts, modeling in a way that captures design intent, and naming your features and parts. </p> <p>Customizing Keyboard Shortcuts</p> <p>If the default for a keyboard shortcut doesn't work for you, you can rebind it by going to your account page, going to <code>Preferences</code>, and scrolling down to find the keyboard shortcuts.</p> <p>For example: you can rebind the keyboard shortcut for renaming something (the default is <code>shift+n</code>) to something easier, like <code>shift+r</code>, to make your workflow faster.</p> <p>Following the self-review guidelines outlined in this page while going through these exercises will help you target the specific skills and practices you need to improve on.</p> <p>If you find that you still struggle without guidance on the later exercises, feel free to try and model more small mechanisms of your choice, making sure to get feedback on them from more experienced members/mentors of your team or the Discord Server.</p> <p></p>"},{"location":"learning-course/stage1/1C/exercise1/","title":"1C: Practice Mechanisms","text":""},{"location":"learning-course/stage1/1C/exercise1/#exercise-1-flat-intake","title":"Exercise 1: Flat Intake","text":"<p>In this exercise, you will be modeling a sort of flat game piece manipulator. This mechanism features live-axle compliant wheels, a belt reduction, and tube plugs.</p>"},{"location":"learning-course/stage1/1C/exercise1/#tube-plugs","title":"Tube Plugs","text":"<p>Tube plugs are a great way to build simple and robust structures. Many vendors including WCP, REV, Andymark, and Last Anvil offer in various tubing sizes. They can be used to connect plates to the open face of tubes or to connect tubes to each other without the use of a gusset.</p> Tube Plugs <ul> <li> <p></p> </li> <li> <p></p> </li> </ul> <p> Tube plugs can be used to create gusset-less tube to tube (left) and tube to plate (right) connections. (Photo Credits: FRC 4414, FRC 9442) </p> <p>This exercise also introduces you to the use of the the <code>Assembly Mirror Featurescript</code>. Make sure to add this to your Featurescripts if you have not already. </p> <ul> <li>This featurescript generates allows you to mirror the position of a duplicate part in the assembly. </li> <li>This is often useful so you can avoid creating a duplicate part in the part studio (to preserve the Bill of Materials) and keep the assembly parametric.</li> <li>The featurescript takes a part and a mirror plane and generates a pair of mate connectors to simulate an mirror in the assembly.</li> <li>In the assembly, you simply have to copy the part and mate it to the mate connector on the other side. Show mate connnectors by pressing the <code>k</code> key.</li> </ul>"},{"location":"learning-course/stage1/1C/exercise1/#part-studio-instructions","title":"Part Studio Instructions","text":"<p>Navigate to the \"Exercise #1 Part Studio\" tab in your copied document and follow the instructions in the slides to complete the part studio for this exercise.</p> 0. Final Part Studio. 1. Create the layout sketch on the Right plane. Begin by sketching the tube profiles.  2. Using the Origin Cube functions you learned previously, sketch the pulleys and belt. This is a 5mm pitch 12T to 30T transmission with a 70T belt.  3. Finish the layout sketch by sketching a 60 mm circle to represent the motor and a 2\" circle for the intake wheel.          Your browser does not support the video tag.        4. Create the tube sketch plane by using an offset mate connector reference. 5. Sketch the tubes by tracing over the layout sketch. There should be no dimensions in this sketch. 6. Extrude the lower and use tube converter to turn it into a thin-wall 1x1 with a 0.5\" hole spacing pattern. We will create the upper tube in a later step.   7. Create the plate sketch on the outside face of the 1x1 tube. Begin by sketching the bearing hole and motor bore hole. 8. Sketch the 2\" bolt circle for mounting motor. You can utilize the Origin Cube variable for a #10-32 clearance hole by typing <code>#10_32</code> into the dimension and selecting the <code>#Clearance_Fit_10_32</code> variable. Use a <code>Circular pattern</code> to pattern the hole sketch. Although we pattern the hole 6 times, we set three of them to construction geometry as we only need 3. Set the left most hole to be coincident with the centerline between the pulleys.  9. Sketch the mounting holes by using a linear pattern. The tube holes are 0.196\" in diameter (A #10-32 \"close fit\") so we will use the same size for the plate. 10. Finish the plate sketch by drawing the plate outline around the sketch features. 11. Extrude the plate to be 1/4\" thick. 12. Create the pocketing sketch on the outside face of the plate. Sketch ribs to connect the mounting points. 13. Use the <code>Part Lighten</code> Featurescript to pocket the plate. We use 3/16\" rib and wall thickness, and 0.26\" tool diameter. 14. You may have noticed in the previous step that the pocketing created some unsightly bumps along the outside contour as a result of the mounting holes. We will make these edges smooth with a simple trick in the next slide.  15. Open the pocketing sketch and sketch two lines spaced exactly half the pocketing wall thickness away from the outer edge of the mounting hole (NOT the center of the circle). In our case, this would be half of 3/16\". This \"tricks\" the Part Lighten Featurescript by creating an extra rib where the bumps would have been. 16. Edit the <code>Part Lighten</code> feature to include the two new ribs. The pocketed part should no longer have the bumps.  17. To create a reference for extruding the upper tube, we use the <code>Mirror</code> feature to mirror the plate across the Right plane. Since we do not want to actually use this component in the assembly, we can change the color of the part and add <code>zREF</code> to the part name so that it will appear at the very bottom of the part list when inserting parts in the assembly. 18. Using the tube sketch we created earlier in the part studio, we can now extrude the upper tube profile up to the mirrored plate's inside face. This ensures that the upper tube is parametric to changes in intake width. 19. Convert the solid into a 2x1 thin-wall tube with 0.5\" hole pattern spacing.  20. Sketch and extrude the 0.125\" thick polycarbonate plate on the top face of the bottom tube. It will have a mounting hole in each corner and be spaced away from the edges of the 1x1 tube by 0.125\". 21. Model the roller shaft with the <code>Shaft</code> Featurescript. You can estimate the length first and then adjust it once you create the assembly. 22. Model the belt using the <code>Belt &amp; Chain Gen</code> Featurescript. Use a mate connector offset from the plate's bearing hole as the reference plane and offet by 3/8\". Select the layout sketch pulley PDs to use as the guides.          Your browser does not support the video tag.        23. Use the Assembly Mirror Featurescript (you can add this using the link above the slides). The featurescript will generate a mate connector at the origin of the selected part, and another at the center of the virtually mirrored part. The usage of these two mate connectors will become clear when we create the assembly. 24. Finish the part studio by naming your features and organizing them into folders. Assign the part materials accordingly. \u276e \u276f"},{"location":"learning-course/stage1/1C/exercise1/#assembly-instructions","title":"Assembly Instructions","text":"<p>Next, navigate to the \"Exercise #1 Assembly\" tab in your copied document and follow the instructions in the slides to complete this exercise. </p> 0. Final assembly.          Your browser does not support the video tag.        1. Insert all of the part studio components, except for the zREF part, and group the plates, tubes, and shaft with the origin cube. Fasten the cube to the origin.          Your browser does not support the video tag.        2. Copy the side plate and use the mate connectors generated by the <code>Assembly Mirror</code> Featurescript to fasten the plate into place. The location of the \"mirrored\" plate is fully parametric as the mate connectors generated by the Featurescript will automatically update when changes to the plate occur.           Your browser does not support the video tag.        3. Insert the upper tube plugs and make a copy of the lower tube. Fasten all the components to their correct locations. 4. Insert the motor and roller pulleys and fasten them into place.           Your browser does not support the video tag.        5. Fasten the belt to the roller pulley. Double check that the motor pulley is properly lined up with the belt.          Your browser does not support the video tag.        6. Insert and fasten the Configurable Spacer Stack and flex wheel. The spacer stack is a configurable assembly that will automatically calculate the optimal stack of spacers to fill a gap. While this functionality is not used for this exercise, it will be very useful in later exercises. When fastening the Spacer Stack assembly, make sure to select the pre-generated mate connectors on each end and NOT the spacer body.           Your browser does not support the video tag.        7. Use the <code>Linear Pattern</code> feature to pattern the spacer and wheel.          Your browser does not support the video tag.        8. Copy the Spacer Stack and modify it to be 0.5\" long, then fasten it into place to finish the roller. 9. Insert, fasten, and replicate 3/16\" rivets from MKCad to attach the plate to the lower tube. 10. Insert, fasten, and replicate 0.5\" long #10-32 bolts from the Standard Content Library for attaching the the tube plug on the upper tube.  10. Insert, fasten, and replicate 1/2\" long 10-32 boltwashers from MKCad for shaft retention. 11. Insert, fasten, and replicate 0.5\" long #10-32 bolts from the Standard Content Library for attaching the motor. 12. Insert, fasten, and attach 1.5\" long #10-32 bolts from the Standard Content Library for attaching the polycarb panel. Also add #10-32 thin jam nuts from MKCad Library. 13. Finish your assembly by organizing the parts into folders and naming your replicates. \u276e \u276f <p>Verification</p> <p>Make sure to have you and/or a more experienced member/mentor of your team review your CAD! Your assembly should have 32 instances.</p>"},{"location":"learning-course/stage1/1C/exercise1/#parametric-modeling","title":"Parametric Modeling","text":"<p>Some of the steps we took to complete this exercise could have been simplified. For instance, we didn\u2019t necessarily need to use the Assembly Mirror feature for the plate. We didn\u2019t need to use an \u201cUp to face\u201d extrude for the upper tube. </p> <p>However, we practice these techniques because, while they may marginally increase modeling time upfront, they can save significant amounts of time when going back and editing. CAD is an iterative process \u2014 your models and designs won\u2019t be perfect the first time around, so making your model easier to modify and more robust to changes (e.g., changing the width of this intake) will save you time and effort in the long run. As you use best practices, they\u2019ll become second nature.</p> <p>Tweaking Your Model</p> <p>Try playing around to get a feel for what things are and aren't parametric in exercise 1. You can try changing things like the width, length, tube positions, or gear ratio. Which dimensions are easy to change and which are difficult? Which dimension changes cause rebuild or assembly error?</p> <p></p>"},{"location":"learning-course/stage1/1C/exercise2/","title":"1C: Practice Mechanisms","text":""},{"location":"learning-course/stage1/1C/exercise2/#exercise-2-dead-axle-rollers","title":"Exercise 2: Dead Axle Rollers","text":"<p>In this exercise, you will be modeling some dead axle rollers. To spin things, whether it be rollers, wheels, or even arms, two types of axles can be utilized: \"live\" and \"dead\" axles. </p>"},{"location":"learning-course/stage1/1C/exercise2/#live-and-dead-axle-rollers","title":"Live and Dead Axle Rollers","text":"<p>You'll learn more about live and dead axle design in Stage 2, but for now, all you need know is that live axle means we power the shaft to spin our mechanism, whereas with dead axle, we directly power the spinning component. For live axle, the shaft spins on fixed bearings, while for dead axle, the bearings are on the spinning component. Take a look at the visual below to better understand.</p> Live vs Dead Axle Rollers <p> Section view of a dead axle (left) and live axle (right) roller. The dead axle roller sits on bearings and needs to be directly powered (in this case, through the integrated pulley). The live axle roller is powered from a pulley farther down the hex shaft. </p> <p>This exercise introduces you to the use of the Configurable Rollers Document. The assembly instruction slides have you copy this link to insert the rollers.</p>"},{"location":"learning-course/stage1/1C/exercise2/#part-studio-instructions","title":"Part Studio Instructions","text":"<p>Navigate to the \"Exercise #2 Part Studio\" tab in your copied document and follow the instructions in the slides to complete the part studio for this exercise.</p> 0. Final Part Studio. 1. Start the layout sketch on the Right Plane. Sketch the hole for a bearing and four #10-32 clearance holes on a 2\" bolt circle.  2. Sketch the pulleys and belt paths for the first two rollers. You will use 5mm pitch 24T pulleys. We subtract 0.015\" from the calculated c-c distance to decrease the friction that results from linking together multiple belts.  3. Add the pulley and belt path for the 3rd roller. 4. Sketch 2\" construction circles to represent the rollers, which are 2\" OD.  5. Sketch the pulleys and belt path for the motor. Since the motor transmission will also utilize a 24T pulley, we can reutilize the same pulley PD sketch from the first roller. The motor pulley will be a 12T pinion. 6. Sketch the OD of the Kraken motor, which is 60 mm. 7. Create the plate sketch by using an offset mate connector from the layout sketch as the origin entity. Select the motor pulley and offset by 12\". 8. Sketch the plate outline. Pay attention to the sketch constraints in the solutions document. We offset the curve on the top right 0.25\" away from the belt to that it is fully covered by the plate. 9. Add the holes for the mounting point by using the <code>Use</code> feature and selecting the layout sketch entities to convert over. 10. Sketch the motor bore and #10-32 clearance holes for motor mounting. Note that we only use 3 out of 6 of the patterned mounting holes, the rest are left as construction geometry. Also sketch the #10-32 clearance holes for the dead axle shafts.  11. Extrude the plate to be 1/4\" thick.           Your browser does not support the video tag.        12. Add the 9 mm wide HTD 5mm belts. Use the plate as the reference plane and select the pulley PDs from the layout sketch.  13. Your belt tooth count and pitch length should match the solution document. The two 70T belts have a pitch length slightly less than 350 mm since we subtracted 0.015\" from the c-c's in the layout.  14. Use the Assembly Mirror Featurescript to add a mate connector for mating the opposite side plate. There is no reason to use a part mirror since the two plates will be identical and we have no need to reference the other plate in the part studio.  15. Finish the part studio by naming your features and organizing them into folders. Assign the plate material to be polycarbonate.  \u276e \u276f"},{"location":"learning-course/stage1/1C/exercise2/#assembly-instructions","title":"Assembly Instructions","text":"<p>Next, navigate to the \"Exercise #2 Assembly\" tab in your copied document and follow the instructions in the slides to complete this exercise. </p> 0. Final assembly.          Your browser does not support the video tag.        1. Insert the parts from the part studio and group the plate with the Origin Cube. Fasten the Origin Cube to the origin. We leave the belts un-grouped since they should be fastened to the pulleys.           Your browser does not support the video tag.        2. Copy the plate and fasten the plate's mate connector to the mate connector generated by the <code>Assembly Mirror</code> Featurescript.          Your browser does not support the video tag.        3. Insert the Configurable Roller assembly from the link at the top of this page.                    Follow the settings exactly as described to generate a 24\" wide, 2\" OD roller with 24T HTD 5mm pulleys on each end.                    The length specified is the effective length meaning the distance between the plates, not the length of the roller itself.          Your browser does not support the video tag.        4. Copy the roller assembly two more times and fasten them to the plate. Make sure you select the entire roller assembly when you copy, otherwise it will only copy one of the roller parts instead of the entire roller assembly.          Your browser does not support the video tag.        5. Fasten the belts to their respective pulleys.          Your browser does not support the video tag.        6. Using MKCad, insert a 3/8\" OD, 1\" long spacer that we will use for mounting the motor. Fasten it to the plate and then replicate it.          Your browser does not support the video tag.        7. Insert the Kraken motor and mate it to the spacers. While in most cases we wouldn't care to align the motor exactly with the mounting holes, since we are mounting to spacers, we need to align it properly. To do so, use a revolute and a cylindrical mate.                    Also insert and fasten the motor pulley. 8. Insert a 1.5\" long, #10-32 button head bolt for the motor. Fasten one instance and replicate the other two. 9. Insert a 3/4\" long, #10-32 button head bolt for the roller shafts. Fasten one instance and replicate the other 5. 10. Finish your assembly by organizing the parts into folders and naming your replicates. \u276e \u276f <p>Verification</p> <p>Make sure to have you and/or a more experienced member/mentor of your team review your CAD! Your assembly should have 17 instances.</p>"},{"location":"learning-course/stage1/1C/exercise2/#minimizing-unique-part-count","title":"Minimizing Unique Part Count","text":"<p>You may have noticed that the 3rd roller has a 24T pulley on both ends despite there only being a belt connected to one end.  While the configurable roller does allow you to choose no pulley for the end with no belt, it can be advantageous to still keep the pulley in situations like this to reduce the number of unique parts.  By doing so, all three rollers are identical, making part tracking and spare parts easier.</p> <p></p>"},{"location":"learning-course/stage1/1C/exercise3/","title":"1C: Practice Mechanisms","text":""},{"location":"learning-course/stage1/1C/exercise3/#exercise-3-ball-shooter","title":"Exercise 3: Ball Shooter","text":"<p>Starting with exercise 3, the instruction slides will only provide part-by-part instructions and key details.  For exact feature details, you should refer to the exercise solutions document.  This is to prepare you for later exercises that are gradually less guided.</p> <p>In this exercise, you will be modeling a very simple 2.5\" ball shooter.  This mechanism features 3D-printed pulleys, a 3D-printed ramp, and nut strips. Be sure to pay attention to layout sketches when modeling. </p>"},{"location":"learning-course/stage1/1C/exercise3/#3d-printed-pulleys","title":"3D-printed Pulleys","text":"<p>Thus far, you've only utilized COTS pulleys in your assemblies.  However, 3D-printed pulleys are a fantastic alternative since they are cheaper, readily available (assuming you have a 3D printer), and highly customizable.</p> <p>3D-printed pulleys can easily be generated using pulley generators, such as the one included in MKCad. Close attention must be paid to the shaft interface however. 3D-printed hex profiles can easily strip out, so a metal insert (Available from vendors like WCP or Thrifty Bot) should be used to better transfer torque. Take a look below at some examples of 3D-printed pulleys with different types of inserts. </p> 3D-printed Pulley Inserts <p> 3D-printed pulleys with hex insert for hex shaft (left), SplineXS insert for Kraken motors (center), and pinion gear insert for NEO/CIM motors (right).  </p> <p>Warning</p> <p>Since 3D-printed pulley bores are easily worn out, you should try to always use a metal insert or a pinion gear insert. A cheap alternative to buying COTS inserts is to order them from a laser cutting service like Fabworks. In large quantities (~20 pieces), they only cost around $1 each.</p>"},{"location":"learning-course/stage1/1C/exercise3/#nut-strips","title":"Nut Strips","text":"<p>Nut strips are a very versatile structural component often used to connect perpendicular plates or a plate to a tube. Vendors like WCP, REV, and Last Anvil carry nut strips in 6\" long segments with either #10-32 or #8-32 tapped holes. These nut strips are very robust and can be easily cut to any length. In the exercise you just completed, the nut strips would allow you to easily mount the shooter onto any surface.</p> Nut Strips <p> Nut strips can be used to connect a plate to a tube or a plate to a perpendicular plate. (Photo Credits: FRC 4414) </p>"},{"location":"learning-course/stage1/1C/exercise3/#part-studio-instructions","title":"Part Studio Instructions","text":"<p>Navigate to the \"Exercise #3 Part Studio\" tab in your copied document and follow the instructions in the slides to complete the part studio for this exercise.</p> 0. Final Part Studio. 1. Create the layout sketch on the Right plane. Begin by sketching the 4\" shooter wheel, 2\" feeder wheel, and the ball path.  2. On the right plane, create a new sketch with the belts, pulleys, and motors. The bottom most construction line defines the bottom of our shooter. 3. Using a mate connector offset 1.375\" from the layout sketch plane as the sketch plane, sketch the side plate. Use a circular pattern to sketch the #10-32 clearance holes around the shooter hood.  4. Extrude the plate as 1/4\", then mirror it across the Right plane. We use a mirror because the opposite side plate is the same except for an extra cutout for the motors. 5. On the mirrored plate, create a sketch to provide clearance for the motors. Sketch a 2.5\" diameter slot connecting the two motor centers to use as the clearance cutout. 6. Model the shooter wheel and feeder wheel shaft. You can estimate the length or offsets first and then correct it after completing the assembly. 7. Model the large 3D print that goes in between the plates. There should only be three dimensions you need to sketch, all other entities should be defined by the layout or plate geometry. Use an \"Up to face\" extrude to ensure that the width is parametric.          Your browser does not support the video tag.        8. Use the <code>Fillet All Edges</code> Featurescript to add a 3/16\" radius fillet to all of the 3D-printed part edges. To select the face of the part, you can utilize the <code>Isolate</code> tool, which will make all other components that are not currently selected transparent or hidden. 9. Add the HTD 5mm pitch belts. Double check that the pitch length is a multiple of 5 mm to ensure that the belt has an integer number of teeth.          Your browser does not support the video tag.        10. Add a mate connector on the layout sketch for fastening the feeder wheel. Set the owner of the mate connector to the feeder shaft. This mate connector marks the center point between the two plates and will help with assembly. 11. Repeat the same steps as before to add a mate connector to the shooter wheel shaft. Make sure you select the shooter wheel shaft as the mate connector owner. 12. Finish the part studio by naming your features and organizing them into folders.  \u276e \u276f"},{"location":"learning-course/stage1/1C/exercise3/#assembly-instructions","title":"Assembly Instructions","text":"<p>Next, navigate to the \"Exercise #3 Assembly\" tab in your copied document and follow the instructions in the slides to complete this exercise. </p> 0. Final assembly. 1. Insert all the part studio components. Group all the components except for the shafts and belts. Fasten the Origin Cube to the origin.          Your browser does not support the video tag.        2. Insert and fasten 4.5\" long nut strips from the MKCad app. Pay close attention to which side is fastened to the plate\u2014the nut strip holes on adjacent sides are staggered. 3. Insert and fasten the two NEO motors. Insert, fasten, and replicate the bearings.           Your browser does not support the video tag.        4. Insert and configure the feeder pulley to be 24T with 1/2\" Hex w/WCP insert.                    Using a 1/16\" spacer, fasten it to the feeder bearing.                    Then, fasten the belt to the pulley and the motor pulley to the belt.                    Finally, use the <code>Isolate</code> tool to fasten the 8mm NEO shaft to 1/2\" hex adapter.          Your browser does not support the video tag.        5. Insert and configure the shooter pulley to be 36T with a WCP 1/2\" hex insert.                    configure the motor pulley to be 18T with a 12T 20DP gear insert.                    Using a 1/16\" spacer, fasten the shooter pulley to the shooter bearing.                    Then, fasten the belt to the pulley and the motor pulley to the belt.                    Finally, use the <code>Isolate</code> tool to fasten the 12T motor pinion. 6. Fasten the shafts to the pulleys.           Your browser does not support the video tag.        7. Insert and fasten the shooter and feeder wheels to the shaft centering mate connectors.                      Fastening the wheels to these mate connectors ensures that the wheels are centered on the mechanism. 8. Insert and fasten the 4\" SDS Flywheel to the other side of the shooter.           Your browser does not support the video tag.        9. Use the Measure tool to measure the gaps between the bearings and the wheels.                    Then, use the Configurable Spacer Stack to fill the gaps on the sides of the wheels with spacers.                    The Configurable Spacer Stack will automatically calculate the number of COTS spacers required to fill the specified length. 10. Repeat the previous steps to fill the shafts.                    You can choose to uncheck the spacer boxes of spacers that are not used in the calculated spacer stack to clear the red error that appears on the Spacer Stack assembly.                    Make sure to mate the spacer stack using the generated mate connectors so that if you update the desired length the mates will not break.  11. Insert, fasten, and replicate all of the required fasteners. 12. Finish your assembly by organizing the parts into folders and naming your replicates. You can also insert and position the ball to visualize it.  \u276e \u276f <p>Verification</p> <p>Make sure to have you and/or a more experienced member/mentor of your team review your CAD! Your assembly should have 44 instances.</p>"},{"location":"learning-course/stage1/1C/exercise3/#isolate-hide-and-make-transparent","title":"Isolate, Hide, and Make Transparent","text":"<p>The Isolate tool hides all other parts except the selected ones, helping focus on specific components.  The Hide tool removes the selected parts from view, while Make transparent allows you to see through the selected parts without removing it, useful for accessing obscured components. </p> <p>Rather than deleting or moving parts, you should use these tools to access the parts you need for your task. If you hide parts, don't forget to un-hide them for the next person!</p> <p>Isolate, Hide, and Make Transparent</p> <p>      Your browser does not support the video tag.    Isolate parts, hide parts, or make parts transparent to help with assembly.  </p> <p>Keyboard Shortcuts</p> <p>Just like most other tools and constraints in Onshape, hide/show has a nice keyboard shorctut combination. Hover over a part with your cursor or select it and press <code>y</code> to hide it. Hover over the same space and press <code>shift+y</code> to unhide the part.</p> <p></p>"},{"location":"learning-course/stage1/1C/exercise4/","title":"1C: Practice Mechanisms","text":""},{"location":"learning-course/stage1/1C/exercise4/#exercise-4-telescoping-hook","title":"Exercise 4: Telescoping Hook","text":"<p>In this exercise, you will be modeling a telescoping climber. This mechanism features WCP GreyT telescoping bearing blocks and REV MAXPlanetary mounting gearbox plates. Be sure to pay close attention to hook and gearbox sketches when modeling. </p>"},{"location":"learning-course/stage1/1C/exercise4/#leveraging-cots-components","title":"Leveraging COTS Components","text":"<p>Using COTS components is crucial in a time-constrained build season.  Even if you have the capability to fabricate every part, relying on COTS parts allows you to spend your time on more important tasks\u2014like refining designs or testing.  This helps ensure your time is spent where it makes the most impact, rather than on re-inventing parts that are already readily available.</p> Exercise 4 COTS Components <ul> <li> <p></p> </li> <li> <p></p> </li> </ul> <p> The telescoping bearing blocks have complex geometry that would be difficult and time consuming to manufacture for most teams.               The REV MAXPlanetary is an easy way to get a large gearbox reduction without the need for a custom gearbox. (Photo Credits: WCP, REV) </p>"},{"location":"learning-course/stage1/1C/exercise4/#part-studio-instructions","title":"Part Studio Instructions","text":"<p>Navigate to the \"Exercise #4 Part Studio\" tab in your copied document and follow the instructions in the slides to complete the part studio for this exercise.</p> 0. Final Part Studio. 1. Begin by creating a side profile sketch of the telescope tubes on the right plane. 2. Use two extrudes to create the solid bodies for the tubes. Then, use the Tube Converter Featurescript to convert the solid bodies into two thin-wall tubes with no hole pattern. 3. Add the holes for the WCP bearing blocks to the inner and outer tubes. The dimensions are from WCP's documentation. 4. Model the crush block at the top of the inner tube. You will add the holes that go through the crush block after you model the hook. 5. Sketch the hook. Pay attention to the sketch relations in the solution document. 6. Extrude the hook. Then, extrude the mounting holes to cut through the tube and the crush block. Also add the hook spacer.          Your browser does not support the video tag.        7. Model the hook 3d printed spacer. With sketch imprinting enabled, we only need to draw the line for where the 3d printed block starts. There is no need to use the <code>Use</code> feature to copy the hook profile into the sketch. 8. Sketch the gearbox mounting plate on the outside of the tube. There should be a small 0.01\" gap between the 3/8\" clamping spacers and the tube to make sure that the gearbox can be assembled properly. The 13.75 mm construction circle represents the rounded hex spool. The #10-32 tapped hole allows for a bolt to thread into the plate and sit flush with the inside of the outer tube to lock the gearbox in place without interfering with the inner tube. 9. Sketch the pull down string by creating a line tangent to the rounded hex spool. Note that we will use this line to create a sweep of the rope, therefore this line cannot be construction geometry. 10. Extrude the plate, then add half depth pockets. The pockets should leave 1/16\" of material on the bottom. The half-depth pocketing allows the contact face between the gearbox plate and tube to be solid. The plate should be mirrored to generate the opposite hand version on the other side of the tube. 11. Add a 10-32 clearance hole for the bolt that is threaded into the gearbox plate. Also model the gearbox spacer and the shaft. 12. Model the rope by creating an 3 mm circle on the end of the vertical line from the gearbox. Then, sweep the circle along the vertical line from the gearbox to create a model of the rope.  13. Finish the part studio by naming your features and putting them into folders. Also assign materials according to the reference design.  \u276e \u276f"},{"location":"learning-course/stage1/1C/exercise4/#assembly-instructions","title":"Assembly Instructions","text":"<p>Next, navigate to the \"Exercise #4 Assembly\" tab in your copied document and follow the instructions in the slides to complete this exercise. </p> 0. Final assembly.          Your browser does not support the video tag.        1. Insert the climber components and group only the base stage components together to the Origin Cube. This is because the inner stage moves relative to the base stage, so we cannot group them together. 2. Fasten the inner stage components together.  3. Insert and fasten the WCP GreyT telescope bearing blocks from the WCP GreyT telescope document.          Your browser does not support the video tag.        4. Use two <code>Slider</code> mates to constrain the inner stage. By using two slider mates, one for the bottom and one for the top, the inner stage motion constraint is parametric to length changes in the base stage. We do not need to explicitly specify a travel length.  5. Fasten the spacer and replicate it. Insert and fasten the shaft bearing to the plate and shaft. Note that we only require one bearing on the plate since the MAXPlanetary gearbox has another bearing at its output as we do not want to overconstrain the shaft. 6. Insert and fasten the MAXPlanetary gearbox from MKCad. We use the 90 degree output with a 25:1 gear ratio. 7. Insert, fasten, and replicate all of the required fasteners. 8. Close up of the bolt used to pin the gearbox in place. This bolt keeps the gearbox from sliding up and down. 9. Finish your assembly by organizing the parts into folders and naming your replicates. \u276e \u276f <p>Verification</p> <p>Make sure to have you and/or a more experienced member/mentor of your team review your CAD! Your assembly should have 27 instances.</p>"},{"location":"learning-course/stage1/1C/exercise4/#section-views","title":"Section Views","text":"<p>Section views are a helpful tool that allow you to reveal the internal features of a part or assembly by slicing through it along a specified plane. You can select a plane, planar face, cylinder, cone, or mate connector to use as the sectioning plane. You can also choose to include or exclude specific parts from the section view.</p> <p>Creating a Section View</p> <p>      Your browser does not support the video tag.    Creating a section view to get a better view of the pinning bolt. </p> <p></p>"},{"location":"learning-course/stage1/1C/exercise5/","title":"1C: Practice Mechanisms","text":"<p>Starting with exercise 5, only an outline of the design process and key details will be provided to you. This is to prepare you for stage 2, where the exercises are less guided.</p> <p>Focus on capturing design intent and maintaining best practices in your part studios and assemblies. Follow the workflow of the solution document.</p>"},{"location":"learning-course/stage1/1C/exercise5/#exercise-5-flipped-gearbox","title":"Exercise 5: Flipped Gearbox","text":"<p>In this exercise, you will be modeling a two motor, two-stage flipped gearbox. These types of gearboxes are referred to as \"flipped\" because the output shaft points in the opposite direction as the input motors.  This style of gearbox can be desired in some situations to meet packaging constraints.</p>"},{"location":"learning-course/stage1/1C/exercise5/#part-studio-instructions","title":"Part Studio Instructions","text":"<p>Navigate to the \"Exercise #5 Part Studio\" tab in your copied document and refer to the solution document to complete the part studio for this exercise. The following instruction slides only provide a general outline and some key details.</p> 0. Final Part Studio. 1. Start by modeling the tube that the gearbox mounts on. 2. Create the layout sketch on the tube face. Remember to only include essential information in the layout sketch. In this case, only the gear PD's and motor OD's are required.  3. Sketch the outer plate. We only require two bolts to hold the motor on and choose the two holes that form a line perpendicular to the c-c line between the motor pinion and the gear. This ensures that the motor bolts will be accessible at all times. 4. When sketching the inner plate, verify that there is clearance between the motor and the inner plates. Pay close attention to the tangency of all the edges so that the plate contour is smooth. 5. Model the shafts and pocket the gearbox plates. For the shafts, you can first estimate how long they need to be and then set them to the correct length after you complete the assembly. \u276e \u276f"},{"location":"learning-course/stage1/1C/exercise5/#assembly-instructions","title":"Assembly Instructions","text":"<p>Next, navigate to the \"Exercise #5 Assembly\" tab in your copied document and refer to the solution document to complete the assembly for this exercise. The following instruction slides only provide a general outline and some key details.</p> 0. Final assembly. 1. Add the frame, gearbox plates, gearbox spacer, and shafts to the assembly. Like before, group mate the rigid components with the Origin Cube and mate the Origin Cube to the assembly origin. 2. Insert and fasten the motors and bearings. 3. Insert and fasten the power transmission components, which includes the gears, pinions, spacers, and sprocket.  4. Finally, insert and replicate all the required fasteners. 5. We use a single 1/2\" spacer rather than two 1/4\" spacers on each side of the gear to reduce part count. In real life, it's much easier to assemble if there's only one spacer, and centering the gear between the bearings has no tangible benefit.           Your browser does not support the video tag.        6. Check that the motors do not interfere with the inner plate with the <code>Check Interference</code> tool. 7. To finish the assembly, organize your components into folders and name your replicates. \u276e \u276f <p>Verification</p> <p>Make sure to have you and/or a more experienced member/mentor of your team review your CAD! Your assembly should have 30 instances.</p>"},{"location":"learning-course/stage1/1C/exercise5/#interference-detection","title":"Interference Detection","text":"<p>Catch errors in the CAD rather than in real life! Always double and triple check your CAD models for mistakes like interferences. An extra 10 minutes verifying the correctness of your CAD can save you hours of rework if an erroneous part slips through and is fabricated.</p> <p>Interference Detection</p> <p>If an interference is detected with the Check Interference tool, it will highlight the intersected volumes in red.  Interference between a motor and plate detected by the Check Interference tool. </p> <p></p>"},{"location":"learning-course/stage1/1C/exercise6/","title":"1C: Practice Mechanisms","text":""},{"location":"learning-course/stage1/1C/exercise6/#exercise-6-direction-swap","title":"Exercise 6: Direction Swap","text":"<p>In this exercise, you will be modeling a power transmission with a direction swap gear.  This mechanism features features a 1:1 gear transmission that inverts the direction of the motor, which can be useful when you want two different shafts to be powered by the same motor but spin in opposite directions. Be sure to pay attention to the layout and plate sketches when modeling. </p>"},{"location":"learning-course/stage1/1C/exercise6/#3d-printed-cots-and-custom-aluminum-spacers","title":"3D Printed, COTS, and Custom Aluminum Spacers","text":"<p>So far, you've used both custom spacers generated with the <code>Spacer</code> Featurescript as well as COTS 3/8\" OD spacers from the MKCad library (the WCP Aluminum Spacers). There are pros and cons to using COTS or custom spacers that you should discuss with your team.</p> <p>3D printed spacers are a fantastic option for teams with 3D prints, they are cheap and easy to fabricate.  If you want to use aluminum spacers but do not have access to machinery to cut them (e.g. a lathe), COTS aluminum spacers can be a good option as they can also be pre-stocked. However, they can be pricy and only come in certain lengths, though you can easily get around this by designing for standard spacer lengths.</p> Spacer Stock <p> Spacers can be 3D printed (left), purchased as COTS pre-cut spacers (center), or fabricated in-house from spacer stock (right). (Image Source: WCP) </p> <p>When modeling, it is recommended to use the <code>Spacer</code> Featurescript for spacers that you will fabricate in house (e.g. 3D printing or using round tube stock) and use the configurable MKCad spacer part for COTS spacers. This helps make it clear which parts are custom and which are COTS.</p>"},{"location":"learning-course/stage1/1C/exercise6/#part-studio-instructions","title":"Part Studio Instructions","text":"<p>Navigate to the \"Exercise #6 Part Studio\" tab in your copied document and refer to the solution document to complete the part studio for this exercise. The following instruction slides only provide a general outline and some key details.</p> 0. Final Part Studio. 1. Begin by creating the layout sketch on the right plane.  2. Using a mate connector offset 0.5\" from the Right plane as the sketch plane, sketch the plate.                    Pay close attention to the clearances used to define the edges of the plate.                   The location of the two spacers to the left of the motor are driven by the tangency between the 3/8\" OD spacer and the 2.5\" motor clearance circle.          Your browser does not support the video tag.        3. Use a <code>Driven Dimension</code> to show the distance between the left gear and the spacer and verify that there is enough clearance. A driven dimension, as opposed to a driving dimension, just reports the distance between the selected elements and is faded gray to indicate that it does not define the sketch geometry. 4. Mirror the plate across the Right plane and add the motor cutout. 5. If you choose to not use COTS spacers, you can use the <code>Spacer</code> Featurescript to create the plate spacer. 6. Model all of the shafts and belts. You should be feeling very comfortable using the <code>Shaft</code> and <code>Belt &amp; Chain Gen</code> Featurescripts at this point. 7. Pocket the two plates. Since the plates are identical apart from the motor cutout, you can use same sketch to pocket both plates. Only create one sketch with the ribs. 8. Finish the part studio by naming your features and organizing them into folders. Assign the part materials accordingly. \u276e \u276f"},{"location":"learning-course/stage1/1C/exercise6/#assembly-instructions","title":"Assembly Instructions","text":"<p>Next, navigate to the \"Exercise #6 Assembly\" tab in your copied document and refer to the solution document to complete the assembly for this exercise. The following instruction slides only provide a general outline and some key details.</p> 0. Final assembly. 1. Add the part studio parts to the assembly. Like before, group mate the rigid components with the Origin Cube and mate the Origin Cube to the assembly origin. 2. Fasten the spacer to the plate and replicate it. 3. Insert, fasten, and replicate the bearings. Also insert the 2\" flex wheel and Kraken motor from MKCad. 4. Insert and fasten the pulleys pulleys and spacers. Use the Configurable Spacer Stack from MKCad for all the spacers.                    For the pulleys, you can utilize 3D printed HTD pulleys from the MKCad library with 1/2\" hex inserts.                   Also fasten the belts into place.  5. Insert, fasten, and replicate all of the required fasteners. 6. When replicating the plate bolts, flip the mounting side for this bolt so that the nut does not hit the belt.  7. To finish the assembly, organize your components into folders and name your replicates. \u276e \u276f <p>Verification</p> <p>Make sure to have you and/or a more experienced member/mentor of your team review your CAD! Your assembly should have 38 instances.</p>"},{"location":"learning-course/stage1/1C/exercise6/#driving-and-driven-dimensions","title":"Driving and Driven Dimensions","text":"<p>In sketches, driving dimensions define and control the geometry, appearing black and editable.  Driven dimensions,on the other hand, are light gray and reflect existing geometry without altering it, useful for maintaining design intent like keeping a specific clearance or thickness. </p> <p>To toggle between them, right-click the dimension and select \"Driving/Driven\" from the context menu\u2014useful when a new dimension would over-constrain the sketch or when you need to inspect geometry without changing it.</p> <p>Switching Between Driving and Driven Dimensions</p> <p>      Your browser does not support the video tag.    Switch a dimension from driving to driven and vice versa by right-clicking the dimension. Notice that the driven dimension will update based on other features. </p> <p></p>"},{"location":"learning-course/stage1/1C/exercise7/","title":"1C: Practice Mechanisms","text":""},{"location":"learning-course/stage1/1C/exercise7/#exercise-7-vertical-rollers","title":"Exercise 7: Vertical Rollers","text":"<p>In this exercise, you will be modeling some vertical rollers. This mechanism features the Configurable Rollers assembly and a 3D printed motor spacer. Be sure to pay attention to the layout sketch and assembly mating when modeling. </p>"},{"location":"learning-course/stage1/1C/exercise7/#3d-printing-to-reduce-part-count","title":"3D Printing to Reduce Part Count","text":"<p>3D printing can be used to create spacer blocks.  Rather than using multiple spacers to connect two components, we can opt to use a 3D printed block that combines all of the spacers into a single part, which can help reduce part count and make assembly easier. If you have a 3D printer, this can be a good option.</p> 3D Printed Spacer Block <p> Multiple spacers can be combined into single 3D printed block to reduce part count.  </p>"},{"location":"learning-course/stage1/1C/exercise7/#part-studio-instructions","title":"Part Studio Instructions","text":"<p>Navigate to the \"Exercise #7 Part Studio\" tab in your copied document and refer to the solution document to complete the part studio for this exercise. The following instruction slides only provide a general outline and some key details.</p> 0. Final Part Studio. 1. Begin by creating the layout sketch on an offset mate connector 3\" above the origin.                    We subtract 0.015\" from each of the belt c-c's to reduce friction since we are linking multiple belts in series.          Your browser does not support the video tag.        2. Use the <code>Mirror</code> sketch tool to create a right hand reference for the rollers and tube location. Use the distance between the roller pairs to drive the roller locations.  3. Extrude the bottom plate. Then, create the top plate offset 5\" from the bottom plate.                      Pay close attention to the plate sketches in the solution document.                      Note that the 1x1\" tube plug requires a 4 holes spaced 3/8\" apart from each other in a square pattern.  4. Sketch, extrude, then tube convert the thin-wall 1x1 tube. 5. Model the the 3D printed motor spacer block and extrude it to be 1\" long. 6. Model the belts. The calculated pitch length is slightly under a multiple of 5 mm since we subtracted 0.015\" from each c-c. 7. Use the <code>Assembly Mirror</code> Featurescript to create a reference mate connector for the 1x1 tube. This will be used in the assembly for mating. 8. Finish the part studio by naming your features and organizing them into folders. Assign the part materials accordingly. \u276e \u276f"},{"location":"learning-course/stage1/1C/exercise7/#assembly-instructions","title":"Assembly Instructions","text":"<p>Next, navigate to the \"Exercise #7 Assembly\" tab in your copied document and refer to the solution document to complete the assembly for this exercise. The following instruction slides only provide a general outline and some key details.</p> 0. Final assembly. 1. Add the part studio parts to the assembly. Like before, group mate the rigid components with the Origin Cube and mate the Origin Cube to the assembly origin.          Your browser does not support the video tag.        2. Copy the 1x1 tube and fasten the Assembly Mirror mate connectors together. 3. Insert four 1x1 tube plugs and fasten them into place on the 1x1 tubes.                     Then, copy and fasten the rest of the frame pieces on the right hand side. 4. Insert the Configurable Roller assembly from the link at the top of this page.                   Set the overall roller length to 5\" and use 24T pulleys on each end. Duplicate and fasten the roller assembly into place.                   Then, insert and fasten the motor and motor pulleys. Also fasten the left hand side belts into place.           Your browser does not support the video tag.        5. Copy and fasten the right hand side belts.                    Note that you will need to flip the fasten mate in order for the belt to line up correctly. 6. Insert, fasten, and replicate all of the required fasteners.  7. To finish the assembly, organize your components into folders and name your replicates. \u276e \u276f <p>Verification</p> <p>Make sure to have you and/or a more experienced member/mentor of your team review your CAD! Your assembly should have 37 instances.</p> <p></p>"},{"location":"learning-course/stage1/1C/exercise8/","title":"1C: Practice Mechanisms","text":""},{"location":"learning-course/stage1/1C/exercise8/#exercise-8-indexer-centering","title":"Exercise 8: Indexer Centering","text":"<p>In this exercise, you will be modeling a centering indexer for 9.5\" diameter balls, similar to 1678's 2022 indexer. This mechanism features belts, chain, gear, and tube crush blocks. Be sure to pay attention to the plate sketches when modeling. </p>"},{"location":"learning-course/stage1/1C/exercise8/#crush-blocks","title":"Crush Blocks","text":"<p>3D-printed crush blocks can be used to reinforce thin-walled tubing in assemblies where bolts pass through without a plate.  Since the strength of bolts comes from their clamping force, without anything to support the thin walls, the tube can collapse before achieving proper clamping force.  Crush blocks distribute the load, allowing for full clamping force while maintaining the tube\u2019s structural integrity.</p> <p>Alternatively, a \"crush plate\" can also be utilized to distribute the fastener force to achieve a similar effect as a crush block.</p> <p>In this exercise, you will use a configurable 3D printed crush block.</p> Crush Blocks and Crush Plates <p> A 3D printed crush block (left) and crush plate (right). Crush plates tend to work well for the middle of the tubes where it may be difficult to insert a crush block. </p>"},{"location":"learning-course/stage1/1C/exercise8/#part-studio-instructions","title":"Part Studio Instructions","text":"<p>Navigate to the \"Exercise #8 Part Studio\" tab in your copied document and refer to the solution document to complete the part studio for this exercise. The following instruction slides only provide a general outline and some key details.</p> 0. Final Part Studio. 1. Begin by creating the layout sketch on the top plane.                   Just like with the previous exercise, we define the distance between the rollers by mirroring the indexer wheel.                   We add 0.016\" to the chain c-c to account for stretch in the chain.   2. Model the thin-wall 2x1 tubes with Extrude Individual and Tube Converter. 3. Model the top plates and bottom plates.                    The top plates can be modeled in the same sketch since they are on the same plane.                   Pay close attention to the plate constraints in the solution document. 4. Pocket the plates using the <code>Part Lighten</code> featurescript.                    Recall that you can select an entire sketch to automatically select all the ribs.          Your browser does not support the video tag.        5. Model the #25 chain using the <code>Belt &amp; Chain Gen</code> Featurescript. 6. Model the 5mm HTD belt. 7. Model the shafts. 8. Finish the part studio by naming your features and organizing them into folders. Assign the part materials accordingly. \u276e \u276f"},{"location":"learning-course/stage1/1C/exercise8/#assembly-instructions","title":"Assembly Instructions","text":"<p>Next, navigate to the \"Exercise #8 Assembly\" tab in your copied document and refer to the solution document to complete the assembly for this exercise. The following instruction slides only provide a general outline and some key details.</p> 0. Final assembly. 1. Add the part studio parts to the assembly. Like before, group mate the rigid components with the Origin Cube and mate the Origin Cube to the assembly origin.  2. Insert, fasten, and replicate the 2\" long, 3/8\" OD plate spacers.                  Insert, fasten, and replicate the 1.5\" long, 3/8\" OD motor spacers.                 Copy and fasten the bottom gear plate to the 2\" spacer.                 Insert, fasten, and replicate the 1/2\" rounded hex shaft bearings.          Your browser does not support the video tag.        3. Insert, fasten, and replicate the 3D printed crush blocks from the document linked at the top of this page. 4. Insert and fasten the motor, motor pulley, 48T 3D printed HTD pulley with 1/2\" hex insert, 30T gears, and configurable spacer stacks fro MKCad. Fasten the belt to the pulley. Also fasten the shafts.          Your browser does not support the video tag.        5. Insert and fasten the chain sprockets. Then, fasten the chain to the sprocket.          Your browser does not support the video tag.        6. Insert and fasten the 6\" Omni-wheels from this document and MAXHubs from MKCad. 7. Insert, configure, and fasten the Configurable Spacer Stack to fill the gap on the wheel shaft. 8. Insert, fasten, and replicate all of the required fasteners.  9. To finish the assembly, organize your components into folders and name your replicates. \u276e \u276f <p>Verification</p> <p>Make sure to have you and/or a more experienced member/mentor of your team review your CAD! Your assembly should have 63 instances.</p> <p></p>"},{"location":"learning-course/stage1/1C/introduction/","title":"1C: Practice Mechanisms","text":""},{"location":"learning-course/stage1/1C/introduction/#introduction","title":"Introduction","text":"<p>Welcome to stage 1C! In this stage, you will be modeling a number of different mechanisms to practice your CAD skills and execution of small details. You will be introduced to new COTS parts and Onshape tips and tricks along the way to help your workflow.</p> <p>Because these mechanisms are designed specifically to help practice skills and introduce concepts, they are modeled out-of-context of a full robot.  While these mechanisms do include some good design techniques, they are not necessarily complete systems. The models are strictly for CAD practice and not recommended for use on real robots.</p>"},{"location":"learning-course/stage1/1C/introduction/#layout-sketches","title":"Layout Sketches","text":"<p>Make sure to use a layout sketch for each mechanism, like the ones introduced in the Stage 1B exercises. Layout sketches are helpful at any scale, letting you define key dimensions in a single sketch, which makes it easy to adjust when needed.</p> <p>Tip</p> <p>Add the components that drive the design to the layout sketch (i.e. power transmission, game piece path, rollers, etc.) while keeping specific part details in their own sketches and features (i.e. a separate sketch for the bearing holes and plate outline, to be extruded).</p> Exercise 1 side view. Notice how the layout sketch drives the geometry of the mechanism. Exercise 1 layout sketch. Notice that only key geometry details are included in the layout sketch. \u276e \u276f <p>Note</p> <p>The concept of layout sketches will be expanded upon later when you start to use them in the context of a robot.</p>"},{"location":"learning-course/stage1/1C/introduction/#maintaining-consistent-origins","title":"Maintaining Consistent Origins","text":"<p>As mentioned in previous sections of Stage 1, you should maintain a consistent origin between your part studio and assembly. You will use the <code>Origin Cube</code> Featurescript to achieve this. Make sure that the origin cube is always the first feature in any part studio. The below slides provide a demonstration of how to use the origin cube.</p> Place the Origin Cube featurescript as the first feature in the part studio. Model your mechanism.          Your browser does not support the video tag.        Insert the part studio into the assembly with the green checkmark. Group all static parts together with the Origin Cube part, then fasten the mate connector on the Origin Cube to the origin of the assembly. \u276e \u276f <p>Following these steps will allow the origin of the assembly to be tied to a part that will never change or disappear. The position of the other parts relative to the origin cube will consistent with the part studio, even when things are changed in the part studio. This will be particularly useful for flexible assemblies, such as an arm or elevator, in stage 2 and beyond.</p> <p></p>"},{"location":"learning-course/stage1/1C/summary/","title":"1C: Practice Mechanisms","text":""},{"location":"learning-course/stage1/1C/summary/#summary","title":"Summary","text":"<p>Congratulations on completing Stage 1C! Keep up the good work!</p> <p>Here is a quick summary of what you have learned and achieved in 1C:</p> <ul> <li>The use of layout sketches for various small-scale mechanisms</li> <li>The use of the Origin Cube to maintain a consistent origin</li> <li>Configurable components including the Configurable Rollers document and Configurable Spacer Stack</li> <li>COTS parts such as tube plugs, nut strips, telescope bearing blocks, and REV MAXPlanetary gearboxes</li> <li>The difference between live and dead axle rollers and how to use them</li> <li>Various ways of powering mechanisms with motors</li> <li>The use of 3D-printed pulleys, spacers, crush blocks, and crush plates</li> <li>How to use section views, driven dimensions, interference detection, isolate, hide, and make transparent</li> </ul> <p>Using keyboard shortcuts can significantly accelerate your CAD workflow. Be attentive to best practices to avoid developing any bad habits.</p> <p>Remember, practice is essential \u2013 the more CAD models you create, the more proficient and efficient you'll become. As mentioned in the introduction of 1C, if you feel you need more practice, try and model more small mechanisms of your choice, making sure to get feedback on them from more experienced members/mentors of your team or the Discord Server.</p> <p>In stage 1D, you will begin to learn the workflow for top-down robot modeling and begin modeling a drivetrain for your last project in Stage 1.</p> <p>Make sure to fill out our simple feedback form for 1C so we can collect data and get a better idea of how to improve the website!</p> <p></p>"},{"location":"learning-course/stage1/1D/adding-components/","title":"1D: Design Methodology - Simple Swerve Drivebase","text":""},{"location":"learning-course/stage1/1D/adding-components/#adding-more-components","title":"Adding More Components","text":"<p>When you model more parts in the part studio, you can insert them into the assembly in a similar to fashion to before. Hit insert and immediately click on the green checkmark. Then, edit the initial <code>Group</code> you made and add the part to the group. By doing this, you ensure that added parts will always stay in the same place it was modeled in the part studio.</p> <p>Let's add a gusset to connect the 2\"x2\" tube to the 2\"x1\" tube.</p>"},{"location":"learning-course/stage1/1D/adding-components/#instructions","title":"Instructions","text":"<p>Start by navigating to the <code>Drivetrain</code> Part Studio in the <code>Drivetrain</code> folder. Follow the instructions in the slides to add the gusset.</p> 0. Finished drivetrain assembly. 1. Add the gusset for the crosstube with the <code>Gusset</code> Featurescript.          Your browser does not support the video tag.        2. Insert the gusset into the assembly and add it to the <code>Group</code>. 3. Copy the gusset and mate it to the other side.           Your browser does not support the video tag.        4. Edit the replicate feature to add rivets to the gusset.  4. Finished drivetrain assembly. \u276e \u276f <p>Make sure you sort the instances in your assembly into folders (i.e. frame, swerve modules) and name any patterns and replicates used. This will help you locate components in the assembly later down the line.</p> <p>Verification</p> <p>Make sure to have you and/or a more experienced member/mentor of your team review your CAD! </p> <p>Your assembly should weigh approximately 37.2lbs.</p> <p>Your tab manager should have the following tabs and folder:  </p>"},{"location":"learning-course/stage1/1D/adding-components/#level-of-detail","title":"Level of Detail","text":"<p>It should be noted that while modeling every detail of the robot hardware (bolts, rivets, nuts) is beneficial for purchasing and real life assembly purposes, it isn't strictly necessary. Time is a precious resource, especially during build season, so you should spend it on what will give you the biggest return.</p> <p>More details about best practices for Onshape assemblies are included on the Assembly Best Practices Page.</p> <p></p>"},{"location":"learning-course/stage1/1D/assembly-modeling/","title":"1D: Design Methodology - Simple Swerve Drivebase","text":""},{"location":"learning-course/stage1/1D/assembly-modeling/#assembly","title":"Assembly","text":"<p>Now that the part studio is finished, you can create the drivetrain assembly. </p> <p>Just like with the practice exercises in the previous stage, after inserting and grouping all of the parts, you should fasten the origin cube to the origin of the assembly. This aligns the part studio origin and assembly origin.</p>"},{"location":"learning-course/stage1/1D/assembly-modeling/#instructions","title":"Instructions","text":"<p>Start by creating a new assembly tab called <code>Drivetrain Assembly</code> in the <code>Drivetrain</code> folder. Follow the instructions in the slides to complete the assembly.</p> 0. The assembly. 1. Add the part studio parts to the assembly. Like before, group mate the rigid components with the Origin Cube and mate the Origin Cube to the assembly origin.          Your browser does not support the video tag.        2. Insert the MK4i module from the MKCad app into the assembly and mate it into place.           Your browser does not support the video tag.        3. Use the <code>Circular Pattern</code> assembly tool to finish assembling the modules.  4. Insert, fasten, and replicate the 3/16\" rivet from MKCad onto the bellypan holes. For the replicate feature, you can use \"Select edges on face\" rather than \"Select individual edges\" since we want all of the holes to have a rivet. 5. To finish the assembly, organize your components into folders and name your replicates. \u276e \u276f"},{"location":"learning-course/stage1/1D/assembly-modeling/#replicate-tool","title":"Replicate Tool","text":"<p>The <code>Replicate</code> tool is a very powerful tool for duplicating parts in assemblies. <code>Replicate</code> works by creating a copy of the selected parts, and duplicates the selected mate onto the selected geometry. Note that the selected geometry must exactly match the origin mate geometry, eg: the hole diameter must be the same for replicate to copy a rivet. </p> <p>In your assembly, you use the select the face for replicate to apply to. What this does is identify all geometry that matches the original mate and then copy the selected components and mate to those matching locations on the selected face. If you want to replicate onto only specific holes, you can change the drop-down menu to \"Match Individual Edges\".</p> <p>Match Individual Edges for Replicate</p> <p> </p> <p></p>"},{"location":"learning-course/stage1/1D/introduction/","title":"1D: Design Methodology - Simple Swerve Drivebase","text":""},{"location":"learning-course/stage1/1D/introduction/#introduction","title":"Introduction","text":"<p>So far, you've worked on CAD fundamentals through courses and FRC-relevant exercises, but haven't done anything within a larger context. In this stage, you'll dive right into designing for a real robot. In this project, you will be designing a swerve drivebase while being introduced to a design workflow that will be applied to all future projects. </p> <ol> <li>Learn the basics of top-down design and layout sketching</li> <li>Model a swerve drivebase using COTS swerve modules</li> <li>Create a top-level assembly and insert a pre-modeled mechanism (1678's 2023 elevator and manipulator) </li> </ol> <p>Even if you've already modeled a drivetrain the past, this guide serves as an excellent introduction to the top-down layout sketch design methodology.</p> The swerve drivebase that you will be modeling with a pre-modeled scoring mechanism. <p></p>"},{"location":"learning-course/stage1/1D/layout-sketch/","title":"1D: Design Methodology - Simple Swerve Drivebase","text":""},{"location":"learning-course/stage1/1D/layout-sketch/#drivetrain-layout-sketches","title":"Drivetrain Layout Sketches","text":"<p>To begin, you will be creating a layout sketch of the drivetrain. This will dictate the size and position of the drive tubes. The layout will be drawn from the side and top view of the drivetrain. For your swerve drivebase, you will make it 26\"x26\".</p>"},{"location":"learning-course/stage1/1D/layout-sketch/#instructions","title":"Instructions","text":"<p>Start by creating a new Onshape Document called <code>Stage 1D Robot</code> and within it, a new part studio called <code>Main Layout Sketch</code>. Then, use the <code>Origin Cube</code> Featurescript to create an origin cube. Follow the instructions in the slides to complete the layout sketch.</p> 0. The final layout sketch. 1. Draw the side profile of the drivetrain on the Right Plane. We place the tube 1.75\" from the ground, which is the offset from the ground to the bottom of the tube for the MK4i modules.                    Then, draw the wheel clearance box, which represents the area that the wheel takes up.                    For the MK4i modules, the box is 4.625\" wide.          Your browser does not support the video tag.        2. Create the top layout sketch by using the bottom mate connector on the vertical line of the side layout. Utilizing auto-generated mate connectors for sketch planes is a very useful tool to have. Press the \u201cTop\u201d button on the view cube to get a top view.          Your browser does not support the video tag.        3. Sketch the top outline of the drive base. Make the rectangle a square and set the side length equal to the length of the side layout tube. This ensures that the size of the top layout always matches the side layout, which makes the design parametric. Notice that the sketch is fully defined despite having no sketch dimensions. 4. To sketch the tubes, draw a square 1\" smaller than the previous square.                    This will represent the four 2\"x1\" tubes that make up the outer frame.                    Then, draw the top profile of the 2\"x2\" tube.                   At the bottom right corner, draw two lines, each offset by 4.25\" from the edge.                    This is the required offset for MK4i modules. Other modules will differ          Your browser does not support the video tag.        5. To apply the cutout for all four tubes, we use the <code>Circular Pattern</code> sketch tool to copy the lines to all four corners.                    For a  <code>Circular Pattern</code> we first define the number of instances and then the axis of rotation. 6. Finally, name your sketches and organize them into folders in the feature tree. Your sketches should all be fully defined. \u276e \u276f <p>As previously explained, this method of top-down modeling is extremely powerful as it enables you to capture the most important dimensions all in one place. However, you should be careful to not over-detail layout sketches. You will be practicing layout sketches all throughout Stage 2, and use them in Stage 3 alongside multi-document practices to design a whole robot.</p> <p></p>"},{"location":"learning-course/stage1/1D/part-modeling/","title":"1D: Design Methodology - Simple Swerve Drivebase","text":""},{"location":"learning-course/stage1/1D/part-modeling/#deriving-layout-sketches-and-part-modeling","title":"Deriving Layout Sketches and Part Modeling","text":"<p>Now that you have created the layout sketch, you can begin modeling the individual parts. The critical dimensions of the parts, such as the length of the tubes, will be driven by the layout sketch. This way, the tubes will automatically update with any changes in the size of the drivebase in the layout sketch.</p>"},{"location":"learning-course/stage1/1D/part-modeling/#instructions","title":"Instructions","text":"<p>Start by creating a new folder tab in your Document called <code>Drivetrain</code>. Then, create a new part studio called <code>Drivetrain</code> within the <code>Drivetrain</code> folder. Follow the instructions in the slides to complete the part studio. Remember that the Origin Cube should be the first feature in your part studio.</p> 0. The part studio. 1. Start by inserting the origin cube. Then, use the <code>Derived</code> tool to insert the layout sketches you previously drew from the Main Layout Sketch part studio. This feature will automatically update if changes are made to the layout sketch. 2. Use the <code>Extrude Individual</code> and <code>Tube Converter</code> Featurescripts to model the tubes. The 2\"x1\" tubes should be 1/8\" wall for strength, while the 2\"x2\" tube can be 1/16\" wall. 3. Start with one corner of the bellypan. The corner is cut out to create room for the swerve module.           Your browser does not support the video tag.        4. Use the <code>Fillet</code> sketch tool to add a 1\" radius sketch fillet on the two internal corners of the cutout.           Your browser does not support the video tag.        5. Next, use the <code>Circular Pattern </code> sketch tool to pattern the other three corners. Extrude the bellypan to be 1/8\" thick. 6. Use the <code> Fillet All Edges</code> Featurescript to add a 0.25\" radius fillet to the remaining edges on the bellypan by selecting the bottom face of the bellypan. 7. Add the mounting holes for the bellypan. Use a mix of <code>Linear Pattern</code> and <code>Circular Pattern</code> to pattern the 0.196\" rivet holes. You should only need to model 2 seed instances, one for the edges holes and one for the 2x2 holes.          Your browser does not support the video tag.        8. Extrude the holes into the bellypan. If the sketch is correctly drawn, you should not need to select each individual hole. 9. Finally, name your sketches and organize them into a folder in the feature tree. Additionally, set the material of the bellypan to Aluminum 6061 and name your parts. \u276e \u276f"},{"location":"learning-course/stage1/1D/part-modeling/#derived-feature","title":"Derived Feature","text":"<p>In this section, you were introduced to the <code>Derived</code> feature. This feature is extremely powerful and can be used to import parts from one part studio into another to enable references for modeling. However, you must be careful to not overuse this function as it can significantly slow down your part studios.</p>"},{"location":"learning-course/stage1/1D/part-modeling/#feature-tree-organization","title":"Feature Tree Organization","text":"<p>At this point, you should be feeling more and more comfortable with Onshape modeling and using Featurescripts. Always make sure to clean up your feature tree while working to keep it organized and easy to use. You can more learn about feature tree organization on the Feature Tree Best Practices page.</p> <p></p>"},{"location":"learning-course/stage1/1D/project-overview/","title":"1D: Design Methodology - Simple Swerve Drivebase","text":""},{"location":"learning-course/stage1/1D/project-overview/#project-overview","title":"Project Overview","text":"<p>In this stage, you will be designing a swerve drivebase. A drivebase is the mobile platform on which all our other mechanisms are designed around and attached to. With the advent of reliable COTS swerve, designing a swerve drivebase has been made significantly easier and has become the most commonly used competitive drivetrain in FRC. </p> <p>A swerve drivebase is composed of four swerve modules. Each module has two motors: one for spinning the wheel and one for steering it. This enables the robot to translate in any direction independent of the rotation of the robot. In this project, we'll be using SDS MK4i modules. There are many other COTS options available, each with their own advantages and tradeoffs. </p> Stage 1D swerve drivebase project. <p>As with previous exercises, the finished project is available for reference. If you need help, please feel free to ask on the Discord!</p> <p>1D Drivebase Reference</p>"},{"location":"learning-course/stage1/1D/project-overview/#drivebase-frame","title":"Drivebase Frame","text":"<p>As was introduced in Stage 1A, robot structures are typically constructed out of aluminum box tubing. The drivebase is no exception to this. Most teams will opt to design their box tubing with a standard 0.5\" spacing pattern of 0.196\" diameter holes. This enables modularity and allows for easy integration of many COTS components like gussets.</p> <p>Box tubing extrusions can be purchased at most metal suppliers, but many FRC vendors including WCP, TTB, and REV sell box tubing with pre-cut hole patterns which can significantly reduce manufacturing time and equipment requirements.</p> <p></p>"},{"location":"learning-course/stage1/1D/summary/","title":"1D: Design Methodology - Simple Swerve Drivebase","text":""},{"location":"learning-course/stage1/1D/summary/#summary","title":"Summary","text":"<p>Congratulations on completing Stage 1D! Keep up the good work!</p> <p>Here is a quick summary of what you have achieved in 1D:</p> <ul> <li>Learned about top-down robot design methodology and layout sketches</li> <li>Learned how to use the derive feature to drive part studios using layout sketches</li> <li>Learned how to use the origin cube to mate together top level assemblies</li> <li>Learned how to model a simple swerve drivetrain</li> </ul> <p>In Stage 1E, you will continue to detail the swerve drivebase you just created and practice the workflow for adding components to a subsystem.</p> <p>Make sure to fill out our simple feedback form for 1D so we can collect data and get a better idea of how to improve the website!</p> <p></p>"},{"location":"learning-course/stage1/1D/top-down-design/","title":"1D: Design Methodology - Simple Swerve Drivebase","text":""},{"location":"learning-course/stage1/1D/top-down-design/#top-down-design-methodology","title":"Top Down Design Methodology","text":"<p>When designing a model in CAD, there are two high level strategies that can be employed: top-down and bottom-up. Top-down design employs high level, low detail sketches to dictate the design, and then refining details and components within that framework. Conversely, bottom-up design involves creating individual components or parts separately and then assembling them to form the final product. </p> <p>Top-down design offers a holistic approach, allowing for better system integration, consistency, and is more parametric. Bottom-up design offers flexibility and independence in designing individual parts. In FRC robot design, top-down approach is favored as system integration is often the most challenging aspect. Top-down ensures that the robot architecture dictates part design.</p>"},{"location":"learning-course/stage1/1D/top-down-design/#main-layout-sketch","title":"Main Layout Sketch","text":"<p>To achieve this, a main layout sketch is utilized. Sometimes these are also referred to as \"master\" sketches. The main layout sketch is a series of sketches that capture the major dimensions of each mechanism, field element interactions, and robot size constraints. Then, the main layout sketch(es) are inserted into each mechanism's part studio and the individual components are then modeled around the imported layout sketch. More information on layout sketches can be found on the Layout Sketch Best Practices page.</p> Example Main Layout Sketch <p> Example of robot main layout sketches. Each mechanism has a number of layout sketches that capture the important details. (Photo Credit: FRC 3647) </p>"},{"location":"learning-course/stage1/1D/top-down-design/#origin-placement-and-origin-cube","title":"Origin Placement and Origin Cube","text":"<p>To fully utilize layout sketch top-down design, we must choose a unified origin for all part studios. Utilizing the same origin as the main layout sketch across all part studios and assemblies is twofold:</p> <ol> <li>The origin will always be a consistent central point you can reference. This helps keep things parametric too.</li> <li>To unify the robot CAD and robot software origin point. By having the same origin in CAD and code, the robot can be seamlessly exported to AdvantageScope and camera transformations more easily measured. </li> </ol> <p>Note</p> <p>Although definitions may vary from team to team, the origin of an FRC robot is typically defined as the center of the drivebase, on floor level.</p> <p>To achieve this, we use the <code>Origin Cube</code> Featurescript which generates a transparent 2\" cube at the origin and provides several useful constants and functions that have already been used in previous stage.</p> <p>The Origin Cube will become very useful later on for assembly mating but for now all you need to remember is that the Origin Cube should be the first feature in all part studios. You can read more about the Origin Cube on the assembly best practices page.</p> <p></p>"},{"location":"learning-course/stage1/1D/top-level-assembly/","title":"1D: Design Methodology - Simple Swerve Drivebase","text":""},{"location":"learning-course/stage1/1D/top-level-assembly/#top-level-robot-assembly","title":"Top Level Robot Assembly","text":"<p>Now that you have a drivebase, you can create a top level robot assembly. The top level robot assembly is the highest in the assembly hierarchy. Organizing the assemblies in this way keeps thing organized from both a CAD assembly and real life assembly standpoint. </p> <p>You will create a top level robot assembly to go with your drivebase. The mechanism you'll be adding is the scoring mechanism from 1678's 2023 robot. The scoring mechanism CAD can be accessed from here:</p> <p>1678 2023 Scoring Mechanism Document</p>"},{"location":"learning-course/stage1/1D/top-level-assembly/#instructions","title":"Instructions","text":"<p>Start by, creating a new assembly tab above the <code>Main Layout Sketch</code> part studio and name it <code>Top Level Robot Assembly</code>. Follow the instructions in the slides to complete the top level robot assembly.</p> 0. Finished top level robot assembly.          Your browser does not support the video tag.        1. Insert the drivetrain assembly and fasten the origin cube to the assembly origin. You may need to unhide the origin cube to mate it.          Your browser does not support the video tag.        2. Insert the 1678 2023 scoring assembly by pasting the scoring mechanism link into the <code>Insert</code> menu textbox. Then, fasten its origin cube to the assembly origin. You may need to hide the drivetrain's origin cube to access the origin of the assembly for mating. 3. Finished top level assembly.  \u276e \u276f <p>Verification</p> <p>Your tab manager should now look like this:  </p> <p>That's all there is to the top level robot assembly! The use of the origin cube makes it very easy to mate together assemblies. In later stages you will explore how to create flexible assemblies (arms, elevators, etc) with the origin cube. If you are interested, you can get a sneak peek here.</p> <p></p>"},{"location":"learning-course/stage1/1E/battery-mounting/","title":"1E: Subsystem Workflow - Detailing the Drivebase","text":""},{"location":"learning-course/stage1/1E/battery-mounting/#battery-mounting","title":"Battery Mounting","text":"<p>Ensuring that your robot\u2019s battery does not fall out of your robot is critical for successful robot operation. While it may seem obvious, even veteran teams sometimes get this wrong.  Successful battery mounting can be broken down into two components: good battery placement and a robust battery holder.</p>"},{"location":"learning-course/stage1/1E/battery-mounting/#battery-placement","title":"Battery Placement","text":"<p>Batteries are heavy: the FRC robot battery weighs a whopping 13 lbs. Since the battery is so heavy, you need to place it as low as possible to keep your robot\u2019s center of gravity low to prevent tipping over. Most teams will typically use the bellypan to support their battery as this is the lowest location on the robot. </p>"},{"location":"learning-course/stage1/1E/battery-mounting/#battery-holder","title":"Battery Holder","text":"<p>A strong strap is needed to secure the battery to its mount, preventing it from dislodging during hard collisions. A good option is to use a 1\u201d or 2\u201d wide buckle strap, which can be purchased and cut to size from most stores. FRC vendors like WCP also sell battery mounting accessories including battery holders and straps.</p> <p>Example</p> <p> Securely strapped battery in a robot. (Photo Credit: FRC 1538) </p> <p></p>"},{"location":"learning-course/stage1/1E/electronics/","title":"1E: Subsystem Workflow - Detailing the Drivebase","text":""},{"location":"learning-course/stage1/1E/electronics/#electronics-mounting","title":"Electronics Mounting","text":"<p>To make wiring the robot and later inspecting the wiring easier, enough space should be left around each electrical component. You should work with your electrical teammates to determine the best location for the various control system parts. Teams typically try to mount their electronics on the bellypan, permitted there is space. </p> <p>Example</p> <p> Example layout of various different electronic components on a bellypan. (Photo Credit: FRC 3647) </p>"},{"location":"learning-course/stage1/1E/electronics/#electronic-components","title":"Electronic Components","text":"<p>A list of typical electrical components found on FRC robots is provided below, as well as a recommended mounting location. Again, mounting locations are highly dependent on the rest of your robot, make sure to always coordinate with your electrical team to decide what is best.</p> <p>FRC Electrical Components</p> Component Function Suggested Location Image REV Power Distribution Hub (PDH) or  CTRE Power Distribution Panel (PDP) Distributes power to all other components Bellypan Main Breaker Is used to turn on/off the robot and protect electronics from events with extremely high current drawn Somewhere easily accessible and close to the PDH and Battery RoboRIO Central controller for all robot operations Bellypan Integrated motor controller (eg: Falcon 500, Kraken X60) Powers and controls the  integrated motor No electrical mounting required Discrete motor controller  (eg: Spark Max, Talon SRX) Required to power and control some motors  (eg: NEO, CIM) Near the controlled motor  or on the bellypan Robot Radio Allows the robot to establish wireless connections to the field or driver station Follow Vivid Hosting's radio mounting guidelines. Robot Signal Light (RSL) Indicates whether the robot is on and enabled/disabled Somewhere easily visible Inertial Measurement Unit (IMU) Used to determine robot heading and acceleration Close to the center is best practice (on Bellypan or VHB tape to attach to RoboRIO) Voltage Regulator Module Can be used for custom circuits Bellypan Pneumatics Hub Controls pneumatic components Bellypan <p></p>"},{"location":"learning-course/stage1/1E/exercise1/","title":"1E: Subsystem Workflow - Detailing the Drivebase","text":""},{"location":"learning-course/stage1/1E/exercise1/#exercise-battery-holder","title":"Exercise: Battery Holder","text":"<p>In the reference design, the battery is placed horizontally on the bellypan. It is secured with a 2\" wide strap that wraps around the battery and bellypan to secure it. </p>"},{"location":"learning-course/stage1/1E/exercise1/#instructions","title":"Instructions","text":"<p>Add a battery holder to your drivetrain. You can take inspiration from the following instructions slides. </p> 0. Finished battery holder w/ mounting holes, strap cutout in bellypan, and strap. 1. Layout of battery and battery mount plate. To fit the battery with 1/16\u201d radius fillets on the inner corners, the cutout should be around 6.705\u201d x 7.225\u201d. 2. 1/8\" thick aluminum is a good option for this plate. Also add a 3/8\" diameter spacers to connect to the bellypan. 3. Add the mounting holes and cut out for the battery strap on the bellypan.  4. Optionally model the battery strap. 5. Optionally pocket the battery holder. 0.2\" wide ribs are recommended.  6. Insert the battery holder, spacers, and battery into the assembly. Don't forget to organize your feature tree, name your parts, assign part materials, and organize your assembly file tree. \u276e \u276f <p></p>"},{"location":"learning-course/stage1/1E/exercise2/","title":"1E: Subsystem Workflow - Detailing the Drivebase","text":""},{"location":"learning-course/stage1/1E/exercise2/#exercise-mounting-electronics","title":"Exercise: Mounting Electronics","text":"<p>In the reference design, the Power Distribution Hub (PDH), main breaker, and RoboRIO are mounted onto the bellypan. The <code>Electronic Mounting</code> Featurescript can be very useful for generating the mounting holes for electronics. If you cannot accurately manufacture mounting holes for electronics, VHB tape (which comes in the Kit of Parts) can be a good option for robustly securing your electronics.</p>"},{"location":"learning-course/stage1/1E/exercise2/#bellypan-mounting-instructions","title":"Bellypan Mounting Instructions","text":"<p>Add mounting for some electronic components to your drivetrain. You can take inspiration from the following instructions slides. </p> 0. Finished mounted electronics. 1. Draw box outline for PDH and RoboRIO. Also add the outline and holes for the main breaker. (The `Electronic Mounting` Featurescript does not support mounting holes for the main breaker at this time unforunately).                Your browser does not support the video tag.              2. Use the <code>Electronic Mounting</code> Featurescript to add the PDH and RoboRIO mounting holes. Optionally override the hole size for the PDH to be 5/32\u201d diameter, which will allow the mounting bolt to screw directly into the bellypan. 3. Insert the electronics from the MKCad parts library and fasten them. The Pigeon IMU can be fastened to the RoboRIO. \u276e \u276f <p>Simplified Models</p> <p>It is recommended to use the Simplified electronics models to improve assembly performance. You can read more about simplified models on the Assembly Best Practices Page. Simplified swerve module models can also be used to reduce lag. </p>"},{"location":"learning-course/stage1/1E/exercise2/#robot-signal-light-rsl","title":"Robot Signal Light (RSL)","text":"<p>Every robot is also required to have a Robot Signal Light (RSL). An easy location to mount the RSL is on the side of the drive frame. Typically, only one RSL is required and needs to be \u201ceasily visible while standing 3 ft. (~ 100 cm) away from at least one side of the ROBOT\u201d. Be sure to check the latest game manual rules for the most up to date RSL mounting rules.</p> <p>Add mounting for an RSL to your Stage 1D drivetrain. You can take inspiration from the following image. </p> RSL mount constructed out of 1/8\" thick polycarbonate plate. The mounting hole for the RSL is 1\u201d in diameter. The RSL model can be found in the MKCad App."},{"location":"learning-course/stage1/1E/exercise2/#radio","title":"Radio","text":"<p>Each robot is also required to have a radio. The radio should be mounted on the robot following Vivid Hosting's radio mounting guidelines.</p> <p></p>"},{"location":"learning-course/stage1/1E/exercise3/","title":"1E: Subsystem Workflow - Detailing the Drivebase","text":""},{"location":"learning-course/stage1/1E/exercise3/#exercise-bellypan-pocketing","title":"Exercise: Bellypan Pocketing","text":"<p>Some teams may choose to pocket their bellypan to reduce weight and make wiring easier. A pocketed bellypan can save around 3-4 lbs. However, this will add significant machining time if you are manufacturing the bellypan yourself or increase cost if you are purchasing the bellypan from a fabrication service (eg: Fabworks). You should carefully consider the tradeoffs with your team.</p>"},{"location":"learning-course/stage1/1E/exercise3/#instructions","title":"Instructions","text":"<p>If you choose to pocket your bellypan for your drivetrain, you can follow the instructions in the slides which utilize the <code>Vent</code> Featurescripts. You could also use the <code>Lighten</code>, or <code>Part Lighten</code> Featurescripts to pocket the bellypan. While the workflow may vary slightly between each Featurescript, the general idea is the same. A diamond pattern is recommended for strength and ease of modeling.</p> 0. Pocketed bellypan.  1. Draw two perpendicular lines that are offset 45 degrees from vertical.  2. Linear pattern the lines until they completely cover the bellypan. These will be the ribs for the bellypan. 3. Offset the outline of the bellypan 0.5\u201d. 4.  Connect any islands that might result from mounting holes being too far from a rib. One way to fix this is to add a slot connecting the island to a rib. 5. Use a pocketing Featurescript to pocket the bellypan. Recommended settings are 0.15\u201d wide ribs and 3/16\u201d tool radius. \u276e \u276f <p></p>"},{"location":"learning-course/stage1/1E/exercise4/","title":"1E: Subsystem Workflow - Detailing the Drivebase","text":""},{"location":"learning-course/stage1/1E/exercise4/#exercise-bumpers","title":"Exercise: Bumpers","text":"<p>Bumper construction is described in each year\u2019s FRC game manual. Typically, it is required to be two 2.5\u201d diameter pool noodles backed by a 5\u201d tall 3/4\" thick plywood sheet. Refer to the latest game manual for the most up to date bumper rules. Bumper cutout and ground clearance rules will vary from year to year.</p>"},{"location":"learning-course/stage1/1E/exercise4/#bumper-model","title":"Bumper Model","text":"<p>It is recommended to place the bumpers in a new part studio and assembly to keep your feature and assembly trees organized. The minimum level of detail should be a block model of the bumper. Some teams may opt to model the bumper wood, bumper wood holes, angle brackets for the bumper wood, and other details to assist with manufacturing. You should communicate with the rest of your team members to determine the level of detail that is required. </p>"},{"location":"learning-course/stage1/1E/exercise4/#instructions","title":"Instructions","text":"<p>Add bumpers to your drivetrain. You can take inspiration from the following instructions slides.</p> 0. Finished bumpers assembly inserted into drivetrain assembly.  1. Create a new sketch in the Main Layout Sketch part studio with the bumper profile. A 3/4\" ground clearance and 1/4\" gap between the bumper and frame is recommended. 2. Create a new part studio in the drivetrain folder for the bumpers. Insert the Origin Cube and derive the drivetrain and bumper sketches from the Main Layout Sketch. 3. Sweep the bumper profile along the edges of the drivetrain top layout sketch to create the block model of the bumpers. 4. Optionally add a fillet on the corners. Size it according to how your team wraps the bumper pool noodles. 5. Optionally model the wood for the bumpers. This can be useful for manufacturing purposes. 6. Create a bumper assembly in the drivetrain folder and insert all the components. Don\u2019t forget to group all the components and mate the origin cube mate connector to the origin. 7. Insert the bumper assembly into the drivetrain assembly. \u276e \u276f <p>Keeping the bumper part studio and assembly separate from the drivetrain keeps the drivetrain feature tree cleaner and allows for easier hiding/showing of the bumpers in the top level assembly since you can show and hide the entire bumper assembly at once.</p> <p></p>"},{"location":"learning-course/stage1/1E/exercise5/","title":"1E: Subsystem Workflow - Detailing the Drivebase","text":""},{"location":"learning-course/stage1/1E/exercise5/#exercise-bumper-mounting","title":"Exercise: Bumper Mounting","text":"<p>Similar to battery mounting, good bumper mounting is often overlooked. While a robust bumper mounting system won\u2019t win you any matches, a poor bumper mounting system can certainly lose you a match. Poor bumper mounting can lead to bumper damage, long bumper swap time, or even lead to your bumpers falling off.</p> <p>In the reference design, the threaded stud bumper mounting system is implemented. </p> <p>Threaded Stud Bumper Mounting System</p> <p> Section view of the threaded stud bumper mount system. The threaded stud is attached to the bumper wood and the nut holds the bumpers tight against the frame. </p>"},{"location":"learning-course/stage1/1E/exercise5/#instructions","title":"Instructions","text":"<p>Add your desired bumper mounts to your drivetrain. You can take inspiration from the following instructions slides.</p> 0. Finished bumper mounts.  1. Model the bumper mount. This part should be 3/16\u201d thick aluminum. The threaded stud falls into the slot. 2. Add the pocket for the nut that screws onto the threaded stud. This nut keeps the bumpers tight with the frame. The pocket secures the nut and prevents the bumper from lifting up. 3. Optionally pocket the mount. 0.15\" wide ribs and 1/8\" tool radius are recommended.  4. Insert the mount and add it to the <code>Group</code>. Copy three more mounts and mate them onto the drivetrain assembly. If your team runs multi piece bumpers (eg: two C shaped bumpers) you may need to add more mounts to secure the bumpers. 5. Finished bumper mounts in drivetrain assembly. \u276e \u276f <p></p>"},{"location":"learning-course/stage1/1E/introduction/","title":"1E: Subsystem Workflow - Detailing the Drivebase","text":""},{"location":"learning-course/stage1/1E/introduction/#introduction","title":"Introduction","text":"<p>In the previous sections, you've learned the fundamentals of modeling parts and power transmissions and learned the top-down design workflow.  In Stage 1E, you will practice those modeling techniques by adding the rest of the necessary components to the drivebase you began modeling in Stage 1D.  This will help you get comfortable with the typical workflow of a modeling an entire subsystem while keeping things simple.</p>"},{"location":"learning-course/stage1/1E/introduction/#subsystem-workflow","title":"Subsystem Workflow","text":"<p>The typical workflow when modeling a subsystem involves the following:</p> <ol> <li>Create the layout sketches in your layout sketch part studio</li> <li>Derive the layout sketch into the part studio</li> <li>Create the basic structure of your mechanism based on the layout sketch (plates, tubes, etc.)</li> <li>Insert the basic structure into the assembly, group, fasten to the origin, and finish creating the structure</li> <li>Insert the assembly into the top-level robot assembly</li> <li>Go back and add different components to finish detailing the subsystem.</li> </ol> <p></p>"},{"location":"learning-course/stage1/1E/project-overview/","title":"1E: Subsystem Workflow - Detailing the Drivebase","text":""},{"location":"learning-course/stage1/1E/project-overview/#project-overview","title":"Project Overview","text":"<p>So far, you\u2019ve done the main layout sketches and modeled the frame and bare bellypan. </p> Stage 1D Swerve Drivebase <p>To finish the drivebase, you will use the content on the following pages to add these details:</p> <ol> <li> <p>Battery Mounting: Every robot needs a battery, and while the location may vary based on the other mechanisms present in your robot, it should always be placed as low as possible to make the robot more stable.</p> </li> <li> <p>Electronics Mounting: Adequate space must be allocated on the robot for ease of wiring. Typically, the robot\u2019s electronics are mounted on the bellypan.</p> </li> <li> <p>Bellypan Pocketing: This step is optional. Some teams will prefer to add cutouts in their bellypan to remove weight and make wiring easier. However, pocketing the bellypan may significantly increase machining time.</p> </li> <li> <p>Bumpers and Bumper Mounting: While bumper rules can vary from year to year, they are almost always required to protect your robot and other robots from collisions. Making your bumpers easy to attach and remove is also a very nice quality of life improvement for when you\u2019re at competition.</p> </li> </ol> <p>Note</p> <p>Even though the first three details won't directly reference the layout sketch, they will reference parts that reference the layout sketch (the frame) and will update accordingly if changes are made.</p> <p>While the exact implementation for each of these details will vary based on the rest of your robot and from team to team, an example reference for Stage 1E is provided.</p> Example of a fully detailed Stage 1E drivetrain. <p>You can access the reference CAD model with the button below. It is based off of the Stage 1D drivebase.</p> <p>1E Full Detail Drivetrain Reference </p> <p>Tip</p> <p>As you should have a good grasp of part modeling by now, feel free to use your own team's preferences to add details to your drivebase. This can be very open ended.</p> <p></p>"},{"location":"learning-course/stage1/1E/review-summary/","title":"Review &amp; Summary","text":""},{"location":"learning-course/stage1/1E/review-summary/#review","title":"Review","text":"<p>Make sure to review all the CAD you've done using the review instruction page. If you copied the reference through the instruction slides, you can check against the solution document; otherwise, just exclude that step from the review.</p>"},{"location":"learning-course/stage1/1E/review-summary/#summary","title":"Summary","text":"<p>Congratulations on completing Stage 1E! With the Stage 1E tasks completed, your drivebase is now fully functional and could even be used as a blueprint to manufacture and assemble one.</p> <p>Here is a quick summary of what you have achieved in 1E:</p> <ul> <li>Practiced adding parts within the context of a robot, making sure to use an intelligent origin</li> <li>Learned the typical workflow for detailing a complex subsystem</li> <li>Learned about battery mounting and the importance of a secure battery holder</li> <li>Learned about core FRC electronics and how and where to mount them</li> <li>Learned how to use the <code>Electronic Mounting</code> Featurescript</li> <li>Optionally learned how to pocket a bellypan</li> <li>Learned about bumpers, how to model them, and the importance of having a secure mounting system</li> </ul> <p>In Stage 2, you will begin to model robot mechanisms using all the skills you have learned and practiced in Stage 0 and Stage 1. This will teach mechanism design, the purpose and correct usage of some COTS parts, and many important engineering concepts.</p> <p>Make sure to fill out our simple feedback form for 1E so we can collect data and get a better idea of how to improve the website!</p> <p>Fill out this feedback form as well to give feedback for all of Stage 1!</p> <p></p>"},{"location":"learning-course/stage2/2A/assembly/","title":"2A: Basic Shooter","text":"<p>Shooter Reference Document</p>"},{"location":"learning-course/stage2/2A/assembly/#assembly","title":"Assembly","text":"<p>In your own document, create an assembly, insert the parts and origin cube from the part studio (excluding the reference tubes) with the green checkmark, and group them together. Fasten the origin cube to the origin. </p> <p>Add the rest of the parts from the part studio, MKCAD, and standard content, using replicate and patterns when you can. You can try using simplified motors.</p> Finished Assembly <p></p>"},{"location":"learning-course/stage2/2A/ball-trajectory/","title":"2A: Basic Shooter","text":""},{"location":"learning-course/stage2/2A/ball-trajectory/#ball-trajectory","title":"Ball Trajectory","text":"<p>In a ball shooter, the trajectory is primarily determined by the exit angle and exit velocity of the game piece, which translates to how hard you launch and where you point the shooter.</p> Team 1678's 2022 shooter ball trajectory."},{"location":"learning-course/stage2/2A/ball-trajectory/#reference-design","title":"Reference Design","text":"<p>For 2020, the initiation line on the field can serve as a reference point to estimate your shooting position and angle. The goal's scoring area is forgiving enough to accommodate slight variations in position, making precise alignment less critical. By using a shot distance calculator, you can estimate the optimal shooting parameters.</p>"},{"location":"learning-course/stage2/2A/ball-trajectory/#trajectory-calculator","title":"Trajectory Calculator","text":"<p>Explore this 2020 trajectory calculator to see how adjustments to angle and speed affect your shot. Can you identify a combination of angle and speed that allows for consistent scoring even with some positional variation?</p> <p>Calculator</p> <p></p> <p></p>"},{"location":"learning-course/stage2/2A/compression-wrap/","title":"2A: Basic Shooter","text":""},{"location":"learning-course/stage2/2A/compression-wrap/#compression-wrap","title":"Compression &amp; Wrap","text":""},{"location":"learning-course/stage2/2A/compression-wrap/#compression","title":"Compression","text":"<p>The purpose of compression is to efficiently transfer energy from the flywheel to the game piece. The softer the game piece, the more compression is needed for effective energy transfer. Insufficient compression causes slipping, resulting in poor energy transfer, while excessive compression increases power requirements and reduces efficiency. Prototyping is essential to find the right balance. For games with hard game pieces, like in 2017, compression can be also achieved using a foam backing.</p>"},{"location":"learning-course/stage2/2A/compression-wrap/#wrap","title":"Wrap","text":"<p>Wrap refers to the duration the game piece stays in contact with the flywheel. A longer wrap time allows for more consistent energy transfer. For the underlying physics, see Impulse (Wikipedia).</p> Not Enough Compression/Contact Time <p> This is what it may look like if you do not have enough compression. See how loud the shooter is compared to how far the shot actually goes (Warning: Loud Audio / Swearing)</p> Good Contact Time and Compression <p> This is what it looks like if you have good contact time and compression with the exact same robot. (Warning: Loud Audio)</p> <p>Stealth wheels, Solid roller wheels, (WCP Solid Roller Wheels), and Colson wheels are chosen commonly because of their lack of compression and soft grippy silicone surface. These are all good options for shooter wheels to prototype in a build season. </p>"},{"location":"learning-course/stage2/2A/compression-wrap/#reference-design","title":"Reference Design","text":"<p>The example design uses 4 inch diameter roller wheels. The diameter allows for enough contact time while being small enough to reasonably package. </p>"},{"location":"learning-course/stage2/2A/compression-wrap/#feeder","title":"Feeder","text":"<p>A wheel or set of belts is commonly used to feed game pieces into the flywheel. The design depends on the game and the specific feeding strategy. For instance, in the 2020 game, it is advantageous to power both sides of the feeder due to the sticky nature of the power cell. In the example, a single compliant wheel is employed to direct the game pieces into the shooter.</p> <p></p> <ul> <li> <p></p> </li> <li> <p></p> </li> </ul> Observe how the game pieces are fed into 2910's and 1690's robot. <p></p>"},{"location":"learning-course/stage2/2A/exit-velocity/","title":"2A: Basic Shooter","text":""},{"location":"learning-course/stage2/2A/exit-velocity/#exit-velocity","title":"Exit Velocity","text":""},{"location":"learning-course/stage2/2A/exit-velocity/#surface-speed","title":"Surface Speed","text":"<p>The exit velocity of the game piece is primarily controlled by the surface speed of the flywheel. Surface speed is determined by the wheel's rotations per minute (RPM) and its diameter. Increasing the diameter is often more efficient because it achieves the same surface speed with a lower RPM. A common choice is a 4-inch diameter wheel. Among all variables, RPM and, optionally, shot angle are the only controllable factors in software.</p> <p>For flywheel shooters, two CIM-class brushless motors are commonly used. </p>"},{"location":"learning-course/stage2/2A/exit-velocity/#inertia","title":"Inertia","text":"<p>When shooting a single game piece at a time, common choices for flywheel wheels include stealth wheels, Colsons, and solid roller wheels. These options store enough energy for a consistent shot while being durable. Avoid using compliant or treaded wheels, as they tend to expand or fail at high speeds, leading to inconsistent performance.</p> <p>Each time a game piece is launched, the flywheel loses energy and slows down as the game piece accelerates to match the wheel's speed. When shooting multiple game pieces, this can result in delays between shots. Adding mass to the flywheel increases its moment of inertia, which reduces the time between shots by minimizing the energy loss per shot. The tradeoff is a longer spin-up time to reach the target speed initially.</p> <p></p> <ul> <li> <p></p> </li> <li> <p></p> </li> </ul>  Team 2056 and 118 shooting quickly by utilizing a high moment of inertia shooter wheel  <p></p> <p>Acceleration and recovery times can be improved by properly gearing down your motors or adding additional motors.</p>"},{"location":"learning-course/stage2/2A/exit-velocity/#reference-design","title":"Reference Design","text":"<p>In the reference design, two Kraken X60 motors are employed, though any brushless CIM-class motor will suffice. </p> Two Krakens driving the shooter wheels, flywheels, and a belt transferring power to the hood wheels."},{"location":"learning-course/stage2/2A/exit-velocity/#flywheel-calculator","title":"Flywheel Calculator","text":"<p>A useful tool for determining the optimal gear ratio is the ReCalc Flywheel Calculator. This tool calculates spin-up time, recovery time, and estimated projectile speed based on input parameters. You can adjust the target shooter RPM, gear ratio, and flywheel mass to optimize performance, while ensuring the projectile speed remains above 12 m/s for this game. For this shooter design, the calculations were performed with ReCalc, leading to the selection of a 4:3 reduction for the 4-inch shooter wheels and two 4-inch brass flywheels.</p> <p>Note</p> <p>Reductions or upductions should be done with belts due to their high efficiency and low maintenance. Use pulleys larger than 24 teeth on the flywheel and ensure high tooth engagement to maximize energy transfer and prevent belt skipping.</p> <p></p>"},{"location":"learning-course/stage2/2A/friction-efficiency/","title":"2A: Basic Shooter","text":""},{"location":"learning-course/stage2/2A/friction-efficiency/#friction-efficiency","title":"Friction &amp; Efficiency","text":"<p>Friction reduces efficiency by converting energy into heat and adding unnecessary load to the motor. Excessive friction can prevent the flywheel from reaching speed, causing shot inconsistencies, and may overheat or damage the motors.</p>"},{"location":"learning-course/stage2/2A/friction-efficiency/#minimizing-friction","title":"Minimizing Friction","text":"<p>The following are all practices that should be followed to reduce friction.</p>"},{"location":"learning-course/stage2/2A/friction-efficiency/#belt-tension","title":"Belt Tension","text":"<p>Slightly reduce belt tension by shortening the center-to-center distance (0.01-0.02\") to improve efficiency.</p>"},{"location":"learning-course/stage2/2A/friction-efficiency/#spacers","title":"Spacers","text":"<p>Use spacers between components on shafts and bearings. Components should not contact the outer race of the bearing to avoid friction.</p> A COTS 1/2 hex delrin spacer which is used to reduce friction and constrain the object."},{"location":"learning-course/stage2/2A/friction-efficiency/#shaft-support","title":"Shaft Support","text":"<p>Don't over-constrain shafts by using more than 2 fixed bearing points to hold a shaft; small misalignments can cause massive friction with the bearings.</p> <p>Example</p> <p> Example of a shaft being overconstrained by having a fixed bearing in the middle of the shaft. Example of a shaft being properly constrained with two fixed bearings. </p>"},{"location":"learning-course/stage2/2A/friction-efficiency/#bent-shafts","title":"Bent Shafts","text":"<p>Bent shafts reduce efficiency. Prevent bending by avoiding excessive cantilevering and ensuring proper alignment of bearings. Keep pulleys close to bearings</p>"},{"location":"learning-course/stage2/2A/friction-efficiency/#tolerance-stackup","title":"Tolerance Stackup","text":"<p>Minimize tolerance stackup, which occurs when multiple parts connect and introduce friction. Improve precision in fabrication or reduce the number of connections. Generally its best to keep belt runs on the same plate. In this design, a single manufactured plate for bearing holes and center-to-center distances helps reduce tolerance stackup.</p>"},{"location":"learning-course/stage2/2A/friction-efficiency/#larger-wheels","title":"Larger Wheels","text":"<p>Larger shooter wheels mean lower RPMs are necessary for the same surface speed, which reduces the amount of friction throughout the system. Additionally, gearing your motors down and running them at at not max speeds is better for the motor.</p>"},{"location":"learning-course/stage2/2A/friction-efficiency/#last-resort","title":"Last Resort","text":"<p>If necessary, throw another motor at your shooter. This is the easiest way to deal with your problems in case you have slightly too much friction and need something that works without too much effort. </p> <p>Note</p> <p>These tips for reducing friction can be applied to all power transmissions</p> <p></p>"},{"location":"learning-course/stage2/2A/introduction/","title":"2A: Basic Shooter","text":"<p>Welcome to Stage 2! This section covers FRC mechanism design, emphasizing CAD skills, best practices, and key engineering concepts. Each project guide explains design decisions and criteria, promoting independent CAD work with less step-by-step instruction.</p>"},{"location":"learning-course/stage2/2A/introduction/#shooter-mechanisms","title":"Shooter Mechanisms","text":"<p>Shooters are used in FRC games when you need to score in high places but are not allowed to physically reach up to the scoring position. A flywheel is the most common method of scoring as illustrated below. </p> <p>While most shooting games involve launching a ball, the fundamentals between ball shooters and shooters for non-spherical objects (discs or rings) remain roughly the same.</p> <p></p> <ul> <li> <p></p> </li> <li> <p></p> </li> </ul> FRC Team 2910 and's 1690's 2021 Robot Launching Game Pieces <p></p>"},{"location":"learning-course/stage2/2A/introduction/#flywheel-shooters","title":"Flywheel Shooters","text":"<p>The most common way to launch game pieces is with flywheel shooters. Other methods, such as catapults or punchers, tend be more challenging to execute with the required accuracy/fire rate and rely on different concepts than flywheel shooters.</p> <p></p> <ul> <li> <p></p> </li> <li> <p></p> </li> </ul> 1678's 2022 and 2024 Flywheel Shooters. The 2022 shooter launched 9.5\" diameter inflated balls and the 2024 shooter launched 14\" diameter foam rings. <p></p> <p>This video is a good slow-motion look at how a ball gets propelled out of a shooter.</p> <p>Other mechanism examples and deep dives for shooters can be found on the ball shooters page. The design handbook page will have a deeper dive when the shooter design page is completed. </p> <p></p>"},{"location":"learning-course/stage2/2A/layout-sketch/","title":"2A: Basic Shooter","text":""},{"location":"learning-course/stage2/2A/layout-sketch/#layout-sketch","title":"Layout Sketch","text":"<p>The following outlines the steps you should take to design your ball shooter. The reference document is provided below:</p> <p>Shooter Reference Document</p>"},{"location":"learning-course/stage2/2A/layout-sketch/#initial-layout","title":"Initial Layout","text":"<ol> <li>Use the Origin Cube Featurescript to insert the Origin Cube.</li> <li>Sketch any field elements you intend to interact with. There's no hard alignment, but you intend to shoot into the back goal of the \"Power Port,\" so you must sketch that from a side view using the game manual and field layout drawings for reference. Place it 135 inches away from the origin, as that places the center of your robot 15 inches away from the white \"initiation line\"</li> </ol> Field Element Layout Sketch <ol> <li>Sketch a side view of your drivetrain + bumpers.</li> <li>Sketch a rectangle with your frame perimeter and height limit. This becomes your bounding box on where to design.</li> </ol>"},{"location":"learning-course/stage2/2A/layout-sketch/#shooter-layout","title":"Shooter Layout","text":"<ol> <li>Sketch your flywheel location, with the flywheels being 4in diameter.</li> <li>Sketch another circle concentric with the flywheels, 0.5\" smaller in radius. This is to compensate for the compression of the ball.</li> <li>Sketch another circle, concentric with the other two circles, and make the outside of that circle 7 inches away from the outside of the 3\" compression circle. This large circle is to denote the path of the ball and eventually the bent polycarb the ball slides against.</li> <li>Sketch your hood wheels by adding two 2 inch circles tangent to the outside of the large circle. Dimension them from each other using a belt calculator.</li> <li>To constrain your shot angle to the field element placement, since the hood is not adjustable, create a line between the 3\" compression circle and the last hood wheel, create an arc from the center of that line to the center of the back goal of the Power Port, and make it normal to the first line you made in this step. Adjust the radius of the arc until you are happy with the arc. The arc itself can be adjustable in real life depending on how far away from the goal you are by adjusting the speed of the flywheels.</li> </ol> Sketched Shooter Ball Trajectory <ol> <li>Decide where you want the motors for the flywheels to go and dimension them away from the flywheel center using a belt calculator.</li> </ol>"},{"location":"learning-course/stage2/2A/layout-sketch/#feeder","title":"Feeder","text":"<ol> <li>Now decide how the shooter is being fed. This depends on the amount of space in the rest of the indexing system, but here we're using an S-shape feeder because the balls are being fed from the front and shot from the back. Sketch two concentric circles for the feeder wheels (green compliant wheels), 3\" and 2\" to account for the compression of the wheels, making the 2\" circle concentric to the large ball path circle. Add a final large ball path circle concentric with your feeder wheels and make it tangent to the original 3\" compression circle of the flywheels.</li> <li>Sketch 7\" circles representing the power cells to further demonstrate the ball path.</li> </ol> <p>Now make sure all the geometry in the main layout sketch is fully constrained (black). Constrain any unconstrained geometry arbitrarily if you need to.</p> Finished Layout Sketch <p></p>"},{"location":"learning-course/stage2/2A/part-studio/","title":"2A: Basic Shooter","text":"<p>Shooter Reference Document</p>"},{"location":"learning-course/stage2/2A/part-studio/#part-studio","title":"Part Studio","text":"<p>Tip</p> <p>You can use the rollback bar to view the reference shooter part studio at each step of the process.</p>"},{"location":"learning-course/stage2/2A/part-studio/#structure","title":"Structure","text":"<ol> <li>Model your reference drivetrain cross tubes that the shooter plates will mount onto and make them a closed composite part. These will be 8 inches apart to leave room for the ball to travel between the plates.</li> <li>Model your main plate on the inside of the cross rails, sketching mounting hardware holes first, including standoffs to hold the bent polycarb following the edge of the large ball path circle concentric to the feeder wheels, then power transmission (motors, belt center-to-center lines, gear pitch circles), then finally the plate outline. Similar to sketching a large gearbox, isn't it? Make sure to extrude it and mirror it for parametric reference for other parts.</li> <li>Model the additional 1x1 tube used to mount the front of the shooter to the drivetrain. This helps keep it rigid despite potential flywheel vibrations at high speeds.</li> </ol>"},{"location":"learning-course/stage2/2A/part-studio/#power-transmission","title":"Power Transmission","text":"<ol> <li>Model the power transmission components using the <code>Belt &amp; Chain Gen</code> and <code>Shaft Generator</code> featurescripts. </li> <li>Most pulleys will be inserted in the assembly using MKCAD's configurable HTD pulley part (they can all be 3D-printed), but the Kraken x60 pinion pulley for the feeder wheels will use a SplineXS 3D-printed part adapter. Use MKCAD to derive the base pulley into the part studio, and derive the SplineXS 3dp adapter from this document. Perform a boolean subtract operation on the pulley with the adapter to create the cutout, checking keep tools to keep the adapter part. Make sure they're transformed into the correct place on the main plate.</li> </ol>"},{"location":"learning-course/stage2/2A/part-studio/#finishing-steps","title":"Finishing Steps","text":"<ol> <li>Model the polycarb backing with holes in it to attach it to the standoffs with zip ties.</li> <li>Model the 3D-printed camera mount and camera mount spacers for the Limelight 3</li> </ol> Finished Part Studio"},{"location":"learning-course/stage2/2A/project-overview/","title":"2A: Basic Shooter","text":""},{"location":"learning-course/stage2/2A/project-overview/#project-overview","title":"Project Overview","text":"<p>You will be designing a flywheel shooter to launch a Power Cell, a 7 inch diameter foam ball, from the 2020/2021 Infinite Recharge game. Watch the 2020 Game Animation, Team 1690 2020 Robot Reveal and 2021 Chezy Champs Finals 2 for an understanding of the game tasks. Refer to the game manual and field layout drawings for field elements and the AndyMark website for power cell specifications.</p> <p>The shooter will be designed to shoot the Power Cells into the high goal from just behind the white \"Initiation Line.\"</p> Finished shooter assembly. <p>To design the shooter, this document will be used as reference. After the engineering concepts section, you will follow a rough guide to model a copy of it.</p> <p>Shooter Reference Document</p>"},{"location":"learning-course/stage2/2A/project-overview/#engineering-concepts-decisions","title":"Engineering Concepts &amp; Decisions","text":"<p>The engineering concepts and decisions made to design the reference shooter are covered in the following sections. We cover these concepts lightly so you can understand the principles of designing flywheel shooters enough to design one yourself. The design handbook covers the \"why\" for these concepts if you would like to gain a deeper understanding.</p> <p></p>"},{"location":"learning-course/stage2/2A/spin-control/","title":"2A: Basic Shooter","text":""},{"location":"learning-course/stage2/2A/spin-control/#spin-control","title":"Spin Control","text":""},{"location":"learning-course/stage2/2A/spin-control/#spin","title":"Spin","text":"<p>When using a single flywheel shooter, spherical game pieces can acquire spin due to the static nature of one side of the shooter. In 2022, excessive spin was problematic as it caused the game piece to bounce out of the goal. To address this, backrollers were introduced to counteract the spin by rotating in the opposite direction. While some spin can enhance shot stability\u2014beneficial in games like 2017, where a steep arc trajectory was advantageous\u2014it needed to be carefully managed in 2022 to avoid negatively impacting shot accuracy.</p> <p>  Your browser does not support the video tag.  <p> Bounceout caused by too much spin. Credit: FRC Team 7492 </p>"},{"location":"learning-course/stage2/2A/spin-control/#back-rollers","title":"Back Rollers","text":"<p>Reducing friction helps transfer more energy into the shot by minimizing the energy lost to spinning the ball. This can be achieved by using low-friction materials on the hood or incorporating back rollers, which further decrease friction and improve shot efficiency.</p>  This high speed shooter video uses PTFE tape to lower the friction on the hood backing to reduce some of the spin. This led to a higher exit velocity by 2 miles per hour.  <p>Back rollers increase energy transfer to the ball in three key ways:</p> <ol> <li>They reduce the amount of spin imparted to the game piece, converting more energy into forward motion and increasing shooting speed.</li> <li>They decrease drag by ensuring both sides are powered, allowing for greater compression and more effective energy transfer.</li> <li>They increase the number of contact points, improving overall energy transfer to the game piece.</li> </ol> <p>Back rollers should rotate in the opposite direction to the shooter. This can be achieved by adding additional motor(s) to the back rollers or by using gears and belts to link the main flywheel to the back rollers. Linking the two sides mechanically can simplify software control. By changing the speed of the back rollers, you can control the amount of spin imparted onto the game piece.</p> Observe how the ball spins as it travels along the shooter path. Despite the presence of back rollers, some spin is still evident.  <p></p>"},{"location":"learning-course/stage2/2A/structure-rigidity/","title":"2A: Basic Shooter","text":""},{"location":"learning-course/stage2/2A/structure-rigidity/#rigidity","title":"Rigidity","text":"<p>Rigidity is essential for every mechanism you design, and it is particularly critical for shooters to ensure consistent performance. If a shooter wobbles while driving or shooting, accuracy will be compromised, making it difficult to hit the target consistently.</p>"},{"location":"learning-course/stage2/2A/structure-rigidity/#reference-design","title":"Reference Design","text":"<p>This shooter uses two 1/4\" polycarbonate plates for the sides. The 1/4\" thickness is chosen because polycarbonate is easy to machine, cost-effective, and rigid enough for shooters when properly supported. In the reference design, the plates are mounted to the bottom drive rails and reinforced with support beams. Standoffs, which also serve as a camera mount and ball guide, keep the plates spaced apart, ensuring the overall rigidity of the shooter.</p> 1x1 structure with the gussets helping support the polycaronbate plates. <p></p>"},{"location":"learning-course/stage2/2A/summary/","title":"2A: Basic Shooter","text":""},{"location":"learning-course/stage2/2A/summary/#summary","title":"Summary","text":"<p>You've completed Stage 2A, and your first full mechanism! To summarize what you've learned in this stage:</p> <ul> <li>One way to make 2 parallel plates rigid</li> <li>All the factors that go into designing a flywheel shooter</li> <li>Tips to reduce friction and inefficiences in power transmissions</li> <li>Using a reference drivetrain to build a mechanism off of to reduce integration complexity</li> <li>How to create a main layout sketch for a flywheel shooter for balls</li> <li>Direction-changes in power transmissions</li> <li>Customizing a 3D-printed pulley</li> <li>Designing a custom limelight mount for a shooter</li> <li>How to model a whole mechanism!</li> </ul> <p>While you've now modeled your first full mechanism, it is fully static in the context of the robot, with no moving parts. </p> <p>In the next stage, you'll learn the different concepts that go into designing a robust pivot and how to model one in Onshape, making sure to optimize load times.</p> <p>Make sure to fill out our simple feedback form for 2A so we can collect data and get a better idea of how to improve the website!</p> <p></p>"},{"location":"learning-course/stage2/2B/assembly/","title":"2B: Dead Axle Pivot","text":""},{"location":"learning-course/stage2/2B/assembly/#assembly","title":"Assembly","text":"<p>Because this subsystem contains a static part and a moving part, we want to separate them into rigid (no movement) assemblies, then combine them at the top level. This makes load times significantly faster.</p>"},{"location":"learning-course/stage2/2B/assembly/#base-assembly","title":"Base Assembly","text":"<p>Create an assembly for the static parts, insert the parts and origin cube from the part studio with the green checkmark, and group them together. Fasten the origin cube to the origin. Add the rest of the parts from the part studio, MKCAD, and standard content, using replicate and patterns when you can.</p> Finished Base Subassembly."},{"location":"learning-course/stage2/2B/assembly/#arm-assembly","title":"Arm Assembly","text":"<p>Create an assembly for the arm portion of the mechanism and do the same thing as above to complete the assembly and make it rigid.</p> Finished Arm Subassembly. <p>Tip</p> <p>Below is an example of the instance list of a rigid assembly. Notice the icon in the top left indicating it's rigid. You can tell what can still move in the assembly by a \"degree of freedom\" icon (3 arrows to indicate the 3 axis.)  Instance list of a rigid assembly. </p>"},{"location":"learning-course/stage2/2B/assembly/#top-level-assembly","title":"Top Level Assembly","text":"<p>Now create a top level assembly and insert the static assembly (fasten to the origin) and intake arm assembly. Create a revolute mate between the mate connectors from the origin cubes in both assemblies and add a limit to it. This completes the deadaxle pivot assembly.</p> <p> Finished Top Level Pivot Assembly. <p></p> <p></p>"},{"location":"learning-course/stage2/2B/backlash/","title":"2B: Dead Axle Pivot","text":""},{"location":"learning-course/stage2/2B/backlash/#backlash","title":"Backlash","text":"<p>Especially for pivots, which you want to make as rigid as possible for better control, you want to take steps to reduce the backlash as much as possible.</p> Source Details Solution Image Hex Interfaces Gaps in hex to hex hole interfaces create backlash. Use shim tape to reduce gaps. Sprocket Clocking Ensure correct alignment of sprockets to prevent uneven movement. Align notches on both sides. Note the notch on the sprocket Mounting Slop Loose bolt-to-hole interfaces can introduce slop. Use proper bolting and strong spacers. Reduction Stages More reduction stages increase backlash. Keep stages to 3 or fewer for optimal performance. One of the \"stages\" being the sprocket reduction Chain Stretch Chain stretching over time leading to backlash Periodically check chain tension. If extremely high precision is needed (shooters), utilize a sector gear instead <p>Details on these solutions are covered in the design handbook page discussing designing for controllability.</p>"},{"location":"learning-course/stage2/2B/backlash/#reference-design","title":"Reference Design","text":"<p>Backlash typically arises as a result of real life tolerances so they are difficult to model in CAD. If the reference design were built in real life, it would utilize shim tape to reduce gear slop, aligned sprockets, and properly tensioned chain to minimize backlash.</p> <p></p>"},{"location":"learning-course/stage2/2B/friction/","title":"2B: Dead Axle Pivot","text":""},{"location":"learning-course/stage2/2B/friction/#friction","title":"Friction","text":"<p>Friction must be minimized since the mechanism pivots around the axle. This can be done using either bushings or bearings. Bushings can handle higher loads at lower speeds, while bearings are more suited for higher speeds and lower loads, but larger bearings can be used for large dead axles.   A stepped bushing and a large x contact bearing sometimes used for large dead axles. <p></p>"},{"location":"learning-course/stage2/2B/friction/#reference-design","title":"Reference Design","text":"<p>This reference design uses 7/8\" ID, 1.125\" OD Bushings for its pivot. This design is intended to handle a high load, which was why 7/8\" tube was chosen for the pivot axle. Its larger OD gives it more strength than 1/2\" hex or 3/4\" tube, but while keeping a much lower profile than an extruded spline shaft. The bushing having a 1.125\" OD makes it compatible with the 1.125\" bore found on most COTS plate sprockets.</p> <p></p>"},{"location":"learning-course/stage2/2B/introduction/","title":"2B: Dead Axle Pivot","text":""},{"location":"learning-course/stage2/2B/introduction/#rotary-mechanisms","title":"Rotary Mechanisms","text":"<p>Rotary mechanisms enable the pivoting of mechanisms through rotational movement. These mechanisms come in many shapes and sizes but there are a couple good practices that should be followed when designing powered pivots.</p> <p>6036's 2023 Arm and 2910's 2023 Arm</p> <p>Take a look at Team 2910's 2023 robot reveal video to see their pivoting arm in action. </p>"},{"location":"learning-course/stage2/2B/introduction/#pivot-drive-systems","title":"Pivot Drive Systems","text":"<p>Two types of pivot drive systems exist: Dead Axles and Live Axles. The following table compares the pros and cons of the two types.</p> Axle Type Description Pros Cons Picture Dead Axle The axle remains stationary, and the mechanism pivots around it. Stronger, larger axle, no risk of axle twisting. Requires a separate method to transfer power. May run into packaging issues Live Axle The axle rotates with the mechanism. Commonly used with hex axles and hubs. Simple setup. Direct power transfer. Risk of twisting the axle. Commonly done with 1/2 hex which may be too weak for the application <p>Out of these, dead axles (and coaxial designs as a result) are the best choice for pivots, especially ones that need to handle a significant amount of load.</p> <p>Some key points when designing pivoting mechanisms are: </p> <ol> <li>Keep the center of mass of the pivoting \"arm\" as close to the pivot as possible.</li> <li>Ensure the axle is fully supported, using either box tube or nested plates.</li> <li>Maintain a rigid support structure.</li> <li>If the structure is wide, power both sides for additional rigidity.</li> </ol>"},{"location":"learning-course/stage2/2B/introduction/#applications-examples","title":"Applications &amp; Examples","text":"Mechanism Type Description Axle Type Friction Management Images Wrist Short, light rotary mechanisms. These are commonly seen to allow for ground pickup or pitch adjustments. You'll find coaxial, live, and dead axles for wrists. Both bearings and bushings are common. Large Pivots Include pink arms, pivoting elevators, and large arms. Dead axle is preferred; consider using 35 chain for heavy loads. Bushings are more common, though thin x contact bearings are used occasionally. High Load Short Pivot Pivots full mechanisms such as a shooter to adjust shot angle. Same as for large pivots. Both bearings and bushings are used. <p>Other mechanism examples and deep dives for pivots can be found on the pivots page. The mechanism fundamentals page is yet to be made but will also be a helpful resource.</p> <p></p>"},{"location":"learning-course/stage2/2B/layout-sketch/","title":"2B: Dead Axle Pivot","text":""},{"location":"learning-course/stage2/2B/layout-sketch/#layout-sketch","title":"Layout Sketch","text":"<p>The layout sketch is very simple as it uses Maxplanetaries for the gear reduction. </p> <ol> <li>Use the origin cube featurescript to insert the origin cube</li> <li>Dimension the cross bar</li> <li>Lay out the pivot location and driving sprocket position above the cross bar. Dimension a construction line between them a distance that will give enough chain length to use an inline tensioner.</li> <li>Create construction circles to represent the pitch circles of both sprockets and the diameter of the motor.</li> </ol> Finished Layout Sketch. <p></p>"},{"location":"learning-course/stage2/2B/part-studio/","title":"2B: Dead Axle Pivot","text":""},{"location":"learning-course/stage2/2B/part-studio/#part-studio","title":"Part Studio","text":"<ol> <li>Create a mate connector on the pivot point of the main layout sketch, owned by the origin cube. This will be used in the top level assembly to define motion between the subassemblies.</li> <li>Create the cross bar tubes</li> <li>Create the pivot support plates</li> <li>Create the chain and hex axle using featurescripts</li> <li>Create the dead axle tube, spacer, and washer.</li> <li>Create the tubes for the arm, including access holes for bolts.</li> <li>Create the plate to space the sprocket off from the arm.</li> <li>Name and give materials and appearances to all your parts</li> </ol> <p> Finished part studio. <p></p> <p>Note</p> <p>Try to create folders for related features while modeling the mechanism! It's easier doing it throughout the modeling process than saving all the clean-up for the end.</p> <p></p>"},{"location":"learning-course/stage2/2B/power-transmission/","title":"2B: Dead Axle Pivot","text":""},{"location":"learning-course/stage2/2B/power-transmission/#power-transmission","title":"Power Transmission","text":"<p>Sprocket and chain is used for transmitting power due chain's high load rating and low chance of slipping. Using large sprockets bolted to the mechanism helps reduce backlash and increase load capacity, while ensuring that the axle remains a dead axle. </p> <p>Torque is transmitted directly to the rotating mechanism from the sprocket, while the entire thing only uses the axle as a structural member to rotate on.</p>  A chain and sprocket powered pivot."},{"location":"learning-course/stage2/2B/power-transmission/#reference-design","title":"Reference Design","text":"<p>The reference design utilizes a 60T #25 chain sprocket to drive the arm.</p>  Reference design chain and sprocket. <p></p>"},{"location":"learning-course/stage2/2B/project-overview/","title":"2B: Dead Axle Pivot","text":""},{"location":"learning-course/stage2/2B/project-overview/#project-overview","title":"Project Overview","text":"<p>You will be designing a simple dead axle pivot. While the arm is not designed for a specific game, it will teach you core concepts applicable to any rotary mechanism.</p> <p>The project requirements are as follows:</p> <ul> <li>Gearbox: Use Max planetaries.</li> <li>Chain: Utilize 25 chain with a large sprocket reduction.</li> <li>Axle: Use 7/8 inch tube for the dead axle and ensure proper support.</li> </ul> Finished arm assembly. <p>To design the arm, this document will be used as reference. After the engineering concepts section, you will follow a rough guide to model a copy of it.</p> <p>Dead Axle Reference Document </p>"},{"location":"learning-course/stage2/2B/project-overview/#engineering-concepts-decisions","title":"Engineering Concepts &amp; Decisions","text":"<p>The engineering concepts and decisions made to design the reference pivot are covered in the following sections. We cover these concepts lightly so you can understand the principles enough to design one yourself. The design handbook covers the \"why\" for these concepts if you would like to gain a deeper understanding.</p> <p></p>"},{"location":"learning-course/stage2/2B/strength/","title":"2B: Dead Axle Pivot","text":""},{"location":"learning-course/stage2/2B/strength/#strength","title":"Strength","text":"<p>The primary considerations for the strength of a pivot are the rigidity (resistance to bending) and resistance to twisting. Dead axles provide superior strength to live axles due to the way they don't transmit any load and can be fastened to the rest of the structure. </p> <p>Large round tubes, such as 3/4\" and 7/8\" diameter, are preferred over 1/2\" hex for their strength-to-weight ratio and resistance to twisting. The primary reason 3/4\" and 7/8\" tube diameters are chosen is those sizes have bushings with a 1.125\" OD available, which means they fit almost all COTS sprockets. Live axles can be utilized in some situations for low load applications.</p> <p>Tip</p> <p>Click through the tabs to see how much each axle bends given the same load. Deformation is exaggerated by 100 times.</p> 1/2\" Hex3/4\" Tube7/8\" TubeSplineXL2\" Tube <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"learning-course/stage2/2B/strength/#reference-design","title":"Reference Design","text":"<p>The reference design utilizes 7/8\" OD round tube for the arm pivot, which is a good balance of strength and size.</p> <p></p>"},{"location":"learning-course/stage2/2B/summary/","title":"2B: Dead Axle Pivot","text":""},{"location":"learning-course/stage2/2B/summary/#summary","title":"Summary","text":"<p>You've completed Stage 2B! To summarize what you've learned in this stage:</p> <ul> <li>Different types of axle usage</li> <li>Principles of designing a good pivot</li> <li>Applications of pivots (wrists, arms)</li> <li>One way of tensioning chain</li> <li>Different sources of backlash in a power transmission</li> <li>How to model a subsystem with multiple moving parts using the origin cube</li> </ul> <p>This mechanism being completed leads to many more mechanisms that have multiple moving parts. Most robots have at least one pivot, though each one can be designed differently depending on the use case and packaging. </p> <p>Each pivot has some things in common though: try to minimize backlash, use a dead axle (usually with chain), and it will obviously need a power transmission included. </p> <p>In the next stage, you'll apply very similar concepts to an intake with a pivot and several rollers.</p> <p>Make sure to fill out our simple feedback form for 2B so we can collect data and get a better idea of how to improve the website!</p> <p></p>"},{"location":"learning-course/stage2/2B/tensioning/","title":"2B: Dead Axle Pivot","text":""},{"location":"learning-course/stage2/2B/tensioning/#tensioning","title":"Tensioning","text":"<p>To accommodate chain stretch over the course of a season and reduce backlash, an active tensioning system is required. If enough chain length is available, inline tensioners such as turnbuckles and Spartan tensioners are the simplest way to tension the chain. </p> <p>If there isn't enough space for an inline tensioner (if the chain moves too much, the tensioner might run into either of the sprockets), other methods, such as moving the position of one of the sprockets with a sliding or rotating gearbox or stage, may be used. </p>  A chain and sprocket moving with a turnbuckle tensioner. The turnbuckle is located on the bottom half the chain. <p> Two types of inline tensioners: a turnbuckle (left) and a Spartan tensioner (right). <p></p>"},{"location":"learning-course/stage2/2B/tensioning/#reference-design","title":"Reference Design","text":"<p>For this design, enough chain length was provided for a simple inline spartan tensioner to work well.</p> <p></p>"},{"location":"learning-course/stage2/2C/assembly/","title":"2C: Slapdown Intake","text":""},{"location":"learning-course/stage2/2C/assembly/#assembly","title":"Assembly","text":"<p>Just like the dead axle pivot, this subsystem contains a static part and a moving part. Again, we want to separate them into rigid (no movement) assemblies, then combine them at the top level. </p>"},{"location":"learning-course/stage2/2C/assembly/#base-assembly","title":"Base Assembly","text":"<p>Create an assembly for the static parts, insert the parts and origin cube from the part studio with the green checkmark, and group them together. Fasten the origin cube to the origin. Add the rest of the parts from the part studio, MKCAD, and standard content, using replicate and patterns when you can. </p> Finished Static Assembly"},{"location":"learning-course/stage2/2C/assembly/#arm-assembly","title":"Arm Assembly","text":"<p>Create an assembly for the intake arms and do the same thing as above to complete the assembly and make it rigid. For the rollers, insert them from the Configurable Rollers Document.</p> Finished Intake Arms Assembly"},{"location":"learning-course/stage2/2C/assembly/#top-level-assembly","title":"Top Level Assembly","text":"<p>Now create a top level assembly and insert the static assembly (fasten to the origin) and intake arm assembly. Create a revolute mate between the mate connectors from the origin cubes in both assemblies and add a limit to it. This completes the slapdown intake assembly.</p> Finished Top Level Intake Assembly <p></p>"},{"location":"learning-course/stage2/2C/intake-golden-rules/","title":"2C: Slapdown Intake","text":""},{"location":"learning-course/stage2/2C/intake-golden-rules/#intake-golden-rules","title":"Intake Golden Rules","text":"<p>There are many good resources out there for how to design good intakes. Andrew Torrance from Team 254 has provided a list of golden rules for roller intakes.</p>"},{"location":"learning-course/stage2/2C/intake-golden-rules/#the-rules","title":"The Rules","text":"<ul> <li>The surface speed of intake rollers/wheels should be at least double the robot's max speed.</li> <li>Maximize grippiness with game piece through all methods to maximize energy transfer, and thus intake speed and reliability</li> <li>If object is squishy, make your rollers rigid, if the object is hard, make your rollers compliant/squishy. </li> <li>Maximize intake area to make it easier to intake during auto and teleop. </li> <li>Intakes need to be robust as they are frequently out of frame perimeter.</li> <li>Use sensors to detect game pieces. </li> </ul>"},{"location":"learning-course/stage2/2C/intake-golden-rules/#reference-design","title":"Reference Design","text":"<p>The reference design follows all of the golden rules apart from sensor mounting as modeling 3D printed parts is outside the scope of this project.</p> <p></p>"},{"location":"learning-course/stage2/2C/introduction/","title":"2C: Slapdown Intake","text":""},{"location":"learning-course/stage2/2C/introduction/#over-the-bumper-intakes","title":"Over-the-Bumper Intakes","text":"<p>A common style of intake for gamepieces in FRC (depending on extension rules) is an \"over-the-bumper\" intake (OTB for short). These bring the gamepiece from the floor against and then over the bumper into another subsystem. They were used commonly in 2019, 2020, 2022, 2023, and 2024, and other past games. </p>"},{"location":"learning-course/stage2/2C/introduction/#slapdown-intake","title":"Slapdown Intake","text":"<p>The two types of OTB intakes are \"slapdown\" which consists of a single set of arms with rollers which slap down and back up again, and four-bar linkages, which allow the intake to stow more horizontally instead of vertically. The intake designed in this stage will be a slapdown intake for 2022 (inspired by 4414 HighTide\u2019s slapdown intake from 2023).</p> <p></p> <p>1323's 2022 Slapdown Intake and 1678's 2022 Four-bar Intake in action </p> <p>Match footage of Team 1323's 2022 intake is an example of a well executed slapdown intake.</p> <p>Other mechanism examples and deep dives for OTB intakes can be found on the slapdown intakes page and 4-bar intakes page. The mechanism fundamentals page is yet to be made but will also be a helpful resource.</p> <p></p>"},{"location":"learning-course/stage2/2C/layout-sketch/","title":"2C: Slapdown Intake","text":""},{"location":"learning-course/stage2/2C/layout-sketch/#layout-sketch","title":"Layout Sketch","text":"<ol> <li>Use the origin cube featurescript to insert the origin cube</li> <li>Sketch the side of your drivetrain and bumper profile</li> <li>Sketch the path of the ball over the bumper</li> <li>Sketch roller or wheel positions needed to get the game piece to move that way. Use the belt transmission tools you learned in 1B to dimension the location of the rollers. Decreasing the c-c distance by 0.02\" can help with ease of assembly and roller efficiency.</li> <li>Use a sketch circular pattern to represent the stowed position of your intake rollers and define where you want the pivot to be</li> </ol> Finished Layout Sketch"},{"location":"learning-course/stage2/2C/part-studio/","title":"2C: Slapdown Intake","text":""},{"location":"learning-course/stage2/2C/part-studio/#part-studio","title":"Part Studio","text":"<ol> <li>CAD the front of your reference drivetrain or derive the tubes and modules from the another swerve drivebase you designed (e.g. from 2A). Make these a composite part. This is only for referencing.</li> <li>CAD the superstructure tube (mirror and add the mirror to the drivetrain composite for referencing). Use the assembly mirror featurescript to add mate connectors to the tube for easy assembly.</li> <li>Derive and transform the nut strips for referencing</li> <li>Design the plates based off of your main layout sketch</li> <li>Create the shafts using the shaft featurescript</li> <li>Create the intake arm and spacer to attach a sprocket to it</li> <li>Create a mate connector on the pivot point in the main layout sketch, owned by the origin cube. This is for creating motion in the top level assembly.</li> <li>Use your chosen belt/chain generator featurescripts to create the belts and chain</li> <li>Name and give materials and appearances to all your parts</li> </ol>  Finished Part Studio"},{"location":"learning-course/stage2/2C/pivot/","title":"2C: Slapdown Intake","text":""},{"location":"learning-course/stage2/2C/pivot/#pivot","title":"Pivot","text":""},{"location":"learning-course/stage2/2C/pivot/#gear-ratio","title":"Gear Ratio","text":"<p>The pivot is powered by a single Kraken motor on a 2-stage MAXplanetary gearbox. The 4:1 stages in the MAXplanetary (16:1) and the 12:48 sprocket reduction make a total of 42:1 overall reduction for the pivot. </p> <p>You can assess whether you want this much reduction on your own mechanism by using an arm calculator, but around 30:1 to 42:1 should be good for most intakes.</p>"},{"location":"learning-course/stage2/2C/pivot/#pivot-design","title":"Pivot Design","text":"<p>The MAXplanetary uses a 1:1 belt/pulley to transfer rotation to a long cross-axle. All custom pulleys have pockets for COTS metal inserts to prevent them from stripping. There are sprockets on either end of this cross axle, with chain going up to sprockets attached to the arm. This setup is to ensure both sides of the intake are moved up and down equally so there's no weird twisting forces on the intake.</p>"},{"location":"learning-course/stage2/2C/pivot/#backlash-and-sensor-feedback","title":"Backlash and Sensor Feedback","text":"<p>To reduce backlash in the system, the 1:1 belt/pulley is exact center-center distance and the chains are tensioned with inline tensioners. Large sprockets on the output of the arms are good as well for more teeth engagement with the chain.</p> <p>For controlling the intake position, no absolute encoder is needed. You can zero the position when it is stowed and against the hardstop or have it rest on the ground when the robot is turned on, and use the relative encoder to take it to a specific position down.</p>  Reference Design Intake Pivot <p></p>"},{"location":"learning-course/stage2/2C/project-overview/","title":"2C: Slapdown Intake","text":""},{"location":"learning-course/stage2/2C/project-overview/#project","title":"Project","text":"<p>You will be designing a slapdown intake applicable to both the 2022 and 2023 games, both of which had a 9.5\" diameter game piece.</p> Finished Intake Assembly <p>To design the intake, this document will be used as reference. After the engineering concepts section, you will follow a rough guide to model a copy of it.</p> <p>Slapdown Intake Reference Document </p>"},{"location":"learning-course/stage2/2C/project-overview/#engineering-concepts-decisions","title":"Engineering Concepts &amp; Decisions","text":"<p>The engineering concepts and decisions made to design the reference intake are covered in the following sections. We cover these concepts lightly so you can understand the principles enough to design one yourself. The design handbook covers the \"why\" for these concepts if you would like to gain a deeper understanding.</p> <p></p>"},{"location":"learning-course/stage2/2C/robustness/","title":"2C: Slapdown Intake","text":""},{"location":"learning-course/stage2/2C/robustness/#robustness","title":"Robustness","text":""},{"location":"learning-course/stage2/2C/robustness/#main-structure","title":"Main Structure","text":"<p>The main structure uses 1/4\" polycarbonate, 2x1 tubes, and nut strips to attach the plates directly to the frame. In this way, the structure would do an especially good job resisting impacts from the front. The rigid nature of the main plate mounting makes polycarbonate a good choice of material, which is lighter and stronger than pocketed aluminum. </p> <p>The two secondary plates used to make sure all axles are supported on two points aren't connected with a very rigid structure and so work better as aluminum.</p>"},{"location":"learning-course/stage2/2C/robustness/#intake-width","title":"Intake Width","text":"<p>The intake is as wide as possible to decrease the precision and time needed by the driveteam or autonomous code to intake the game piece. The only aim is to get the game piece into the robot, then it can be centered or serialized inside frame perimeter, also minimizing the time that the intake is down.</p> <p></p>"},{"location":"learning-course/stage2/2C/rollers/","title":"2C: Slapdown Intake","text":""},{"location":"learning-course/stage2/2C/rollers/#rollers","title":"Rollers","text":"<p>The rollers are powered with a single Kraken motor with small reduction of 1.6:1; often, you want rollers to be spinning very fast, but still have enough torque to bring in game pieces without stalling the motor. Compression also matters a lot with this. You want to balance compression of a game piece so the intake can move it easily enough without needing too much extra torque from the motors. This is often why adding grippy material to the rollers instead of increasing compression is optimal.</p>"},{"location":"learning-course/stage2/2C/rollers/#dead-axle-rollers","title":"Dead Axle Rollers","text":"<p>There are 3 total rollers. Rollers often provide more consistent compression than wheels and are a great option for transporting game pieces. They are typically cheaper, lighter, and easier to put on a dead axle than wheels. Dead axles allow the intake arms to be connected by effectively long standoffs, making the assembly more rigid, while still allowing the rollers to spin on bearings. </p> <p>The dead axle rollers used in this project use polycarbonate tube and 3D-printed endcaps for the bearings and power transfer. We use Andrew Card's Configurable Rollers for the example intake, but you are also welcome to model your own rollers.</p> <p>Configurable Rollers Document</p>"},{"location":"learning-course/stage2/2C/rollers/#roller-locations","title":"Roller Locations","text":"<p>Only 2 of the rollers are on the pivoting arm portion. The final one inside the frame perimeter is on a separate plate. This can keep the pivot for the intake arms lower, decreasing the vertical height of the intake when stowed.</p>  The sketched ball path influences the position of the rollers <p></p>"},{"location":"learning-course/stage2/2C/summary/","title":"2C: Slapdown Intake","text":""},{"location":"learning-course/stage2/2C/summary/#summary","title":"Summary","text":"<p>You've completed Stage 2C! To summarize what you've learned in this stage:</p> <ul> <li>Concepts behind designing an effective and robust intake</li> <li>Real application of a pivot</li> <li>Driving dead axle rollers</li> <li>\"Zombie\" Axles</li> <li>Intake main layout sketches and ball paths</li> <li>More practice with a mechanism with moving parts and the origin cube</li> </ul> <p>Intakes like this one can be applied during a lot of years, but even if the mechanism type itself isn't used, many concepts, such as the pivot, zombie axle, and dead axle rollers can be reused for basically any mechanism moving or manipulating game pieces. </p> <p>In the next stage, you'll learn about a completely new mechanism with linear motion instead of rotation that can be used to extend part of your robot in a specific direction.</p> <p>Make sure to fill out our simple feedback form for 2C section so we can collect data and get a better idea of how to improve the website!</p> <p></p>"},{"location":"learning-course/stage2/2C/zombie-axles/","title":"2C: Slapdown Intake","text":""},{"location":"learning-course/stage2/2C/zombie-axles/#zombie-axles","title":"Zombie Axles","text":"<p>Since the arm pivot is a dead axle, the shaft doesn't spin with the arm. This means we can utilize the pivot shaft as a live axle to spin a pulley connected to the rollers. This is called a 'Zombie Axle', since the pivot shaft is being used as both a dead axle for the pivot and a live axle for roller power.</p> <p>This design allows the roller motor to be located on the base of the robot, which reduces arm weight and protects the roller motor.</p> <p>If you are having trouble visualizing this and have a 3d printer, you can print and assemble this 3D-printed model (Coming Soon). </p> <p></p>"},{"location":"learning-course/stage2/2D/assembly/","title":"2D: Cascade Elevator","text":""},{"location":"learning-course/stage2/2D/assembly/#assembly","title":"Assembly","text":"<p>Because this subsystem has multiple moving parts, just like the dead axle pivot and slapdown intake, separate rigid subassemblies should be created for each stage.</p>"},{"location":"learning-course/stage2/2D/assembly/#base-stage-assembly","title":"Base Stage Assembly","text":"<p>Create an assembly for the static parts and follow the typical process for inserting them and creating a rigid body (origin cube, group, fasten to origin). Add the rest of the parts by duplicating existing parts, MKCAD, and standard content, using replicate and patterns when you can.</p> Finished base stage assembly"},{"location":"learning-course/stage2/2D/assembly/#first-stage-assembly","title":"First Stage Assembly","text":"<p>Do the same thing for the first stage subassembly.</p> Finished first stage assembly"},{"location":"learning-course/stage2/2D/assembly/#carriage-assembly","title":"Carriage Assembly","text":"<p>And finally the carriage subassembly.</p> Finished carriage assembly"},{"location":"learning-course/stage2/2D/assembly/#top-level-assembly","title":"Top Level Assembly","text":"<p>Now create the top level assembly, insert the subassemblies (fasten the origin cube of the static assembly to the origin), and use the reference mates on the origin cubes from the separate subassemblies to create slider mates with limits to define the motion of the elevator. </p> <p>Because it's a cascade elevator, you can use the \"Linear Relation\" assembly tool between the two slider mates with a ratio of 1 to link the motion of the stages together in the same way it would be in real life.</p> <p></p>"},{"location":"learning-course/stage2/2D/cable-clamp/","title":"2D: Cascade Elevator","text":""},{"location":"learning-course/stage2/2D/cable-clamp/#cable-clamp","title":"Cable Clamp","text":"<p>Cascade elevators function by moving a fixed length of cable from one side of a clamp to the other side of the clamp, to force the elevator up. This cable clamp is usually bolted to some form of crossmember. </p> TTB Cable Clamp"},{"location":"learning-course/stage2/2D/cable-clamp/#reference-design","title":"Reference Design","text":"<p>The reference design uses the TTB cable clamp to maintain consistency in rigging components (they come in a kit). The clamp consists of two plates; the first one is fastened to the tube and the second one is ONLY fastened to the first plate. You can choose to make access holes for the bolts or bolt all the way through the cross member with a crushblock.</p> <p>Note</p> <p>The WCP cable clamp uses a similar design but the fasteners go through both plates into the crossmember tube, sharing the clamping force with the crossmember.</p> <p></p>"},{"location":"learning-course/stage2/2D/cable-ends/","title":"2D: Cascade Elevator","text":""},{"location":"learning-course/stage2/2D/cable-ends/#cable-ends","title":"Cable Ends","text":"<p>The ends of the cable are arguably the most important part of elevator rigging to do right. If they are handled improperly it can cause issues with rigging falling apart during impacts; this usually takes the elevator (and anything requiring it to move) completely out of commission for the match. Cascade rigging consists of at least one loop of cable per stage, which drives the motion for the next stage.</p> Elevator carriage with ratchet plate"},{"location":"learning-course/stage2/2D/cable-ends/#cable-tension","title":"Cable Tension","text":"<p>To ensure smooth motion, these cables need tensioned. One of the best ways to tension these cables is through a ratcheting cable spool. The COTS solution is to use the WCP Ratchet Plate (though an easy homemade solution can be done by cutting the end off of a ratcheting wrench and fastening it to your mechanism), with a hex shaft acting as the spool. The hex shaft gets a hole drilled in it so the cable is forced to wrap around it. </p> <p>It is important to tie a self-tightening knot in the cable to prevent this from coming undone under high load. This ratcheting spool only needs to be done on one side, with a simple fixed loop on the other side. To tension properly, you will need to loosen the clamping plate before adding tension. This is for two reasons: in order to maintain sync between the stages and so that the tension gets added to each side instead of just the side with the ratchet. </p> Close up of ratchet plate <p></p>"},{"location":"learning-course/stage2/2D/chain-attachment/","title":"2D: Cascade Elevator","text":""},{"location":"learning-course/stage2/2D/chain-attachment/#chain-attachment","title":"Chain Attachment","text":"<p>Most cascade elevators use chain to power their initial stage; while this chain can run either parallel or perpendicular to the face of the elevator, but the core concept is the same. The chain is bolted to the first stage of the elevator, and the rigging moves the other stages off it.</p> Chain Comb for Attaching Chain to Elevator Stage"},{"location":"learning-course/stage2/2D/chain-attachment/#reference-design","title":"Reference Design","text":"<p>The reference design uses the TTB chain comb to bolt the chain to the first stage.</p> <p></p>"},{"location":"learning-course/stage2/2D/drive-system/","title":"2D: Cascade Elevator","text":""},{"location":"learning-course/stage2/2D/drive-system/#drive-system","title":"Drive System","text":"<p>Elevators need motors to power them. Once you have the rigging planned out you can figure out where you can fit the motors to drive the base elevator stage.</p> <p></p> Elevator drive system close up"},{"location":"learning-course/stage2/2D/drive-system/#reference-design","title":"Reference Design","text":"<p>The reference design utilizes a vertical chain with the TTB chain comb and NEO motors with MAX planetary gearboxes.</p> <p></p>"},{"location":"learning-course/stage2/2D/elevator-blocks/","title":"2D: Cascade Elevator","text":""},{"location":"learning-course/stage2/2D/elevator-blocks/#elevator-blocks","title":"Elevator Blocks","text":"<p>Every modern elevator will use some form of \"elevator block\" to allow the stages to slide past each other smoothly using bearings. </p>"},{"location":"learning-course/stage2/2D/elevator-blocks/#cots-elevator-blocks","title":"COTS Elevator Blocks","text":"<p>Most teams will purchase elevator blocks from WCP or TTB instead of manufacturing them in-house (because of the time investment and machining capabilities of a typical team) but elevator blocks can also be made with plates instead of billet (see 2471 2018 Robot CAD). </p> Two different types of elevator blocks"},{"location":"learning-course/stage2/2D/elevator-blocks/#reference-design","title":"Reference Design","text":"<p>The reference design uses the WCP Inline Clamping and Inline blocks, but different blocks from WCP or TTB could be substituted with little to no design changes besides the distance between the stages on the sides.</p> <p></p>"},{"location":"learning-course/stage2/2D/introduction/","title":"2D: Cascade Elevator","text":""},{"location":"learning-course/stage2/2D/introduction/#elevators","title":"Elevators","text":"<p>Elevators pop up commonly in FRC and are used to move mechanisms in a compact linear fashion. This is usually to reach higher places with a mechanism, reach far out from your frame perimeter, or even climb on a field element. Elevators are typically classified by the way they are \"Rigged\". Elevator \"Rigging\" is what allows the motor to transmit motion to each stage. FRC elevators are usually rigged to be either \"Cascade\" or \"Continuous.\" </p> <p></p> <p>2468's Cascade Elevator and 4414's Continuous Elevator </p> <p>Watch the following match videos to see 2468's 2023 Robot with a cascade-rigged elevator and 4414's 2023 Robot with a continuous-rigged elevator in action.</p>"},{"location":"learning-course/stage2/2D/introduction/#utilizing-cots-components","title":"Utilizing COTS Components","text":"<p>Elevators as designed most typically may be out of the scope of a lower-capability team because of the amount of custom metal parts that need to be bought or manufactured, but once you know how one works and have designed one, you may be able to make one with minimal manufacturing capabalities and time required. This project will be discussing the design of a cascade-rigged elevator over a continuous-rigged elevator due to the availability of COTS parts and minimal manufacturing required for a cascade-rigged elevator.</p>"},{"location":"learning-course/stage2/2D/introduction/#cascade-elevator","title":"Cascade Elevator","text":"<p>Cascade elevators are characterized by the way the stages move. In a cascade rigged system, each elevator stage moves the same distance from its parent stage.</p> Cascade Motion"},{"location":"learning-course/stage2/2D/introduction/#comparison","title":"Comparison","text":"Category Cascade Rigging Continuous Rigging Number of Stages Possible to make cascade elevators with more than 3 stages, but designing the rigging gets harder especially if width constrained. Additional stages are relatively trivial to add Stage Order Since all of the stages move together at once, your center of mass will be higher in the middle range of extension as compared to continuous rigging Stages move up based on the friction between stages and force to move each stage. If properly constructed, the inner stages should move first. COTS Many options available for cable rigging. Not as many options available for cable rigging Gearbox (Given the same end effector speed and force) Can utilize intermediary stages, which have higher force than the final stage, for situations like climbing (See 2056's 2018 robot) Requires less reduction, but requires a shifting gearbox to have different high speed and high force modes Pass Through Can be achieved by moving the location of the rigging Can be achieved by moving the location of the rigging. Intermediary stage positions may be indeterminate depending on how well tuned the stage movement order is."},{"location":"learning-course/stage2/2D/layout-sketch/","title":"2D: Cascade Elevator","text":""},{"location":"learning-course/stage2/2D/layout-sketch/#layout-sketches","title":"Layout Sketches","text":"<p>Elevator main layout sketches usually start with an extended side view so you can drive the length of it based off of the extension limits and your required beginning and end position for whatever mechanism you're moving. </p> <p>Though this elevator doesn't have that context, it's still useful to follow the same workflow of starting with a side sketch, which will contain most important dimensions but can be hard to conceptualize at first.</p> <p>Follow the instructions in the slides to create your elevator layout sketches.</p> A clean view of the front sketch of the elevator tubes.  As practice for stage 3, we'll start with defining the position of the elevator in relation to drivetrain side sketch. Use rectangles to represent the 2x2 tube and the length of the stages. Add rectangles to represent the bottom tubes of each stage and carriage as well.   Feel free to create a retracted side sketch (constraining it to the geometry of the first side sketch) to help double check geometry and integration. This especially helpful when designing a full robot.   Now add the front sketch to define all the elevator tubes, the width of the elevator, and the distance between stages on the side. \u276e \u276f <p>Tip</p> <p>Instead of creating \"extended\" and \"retracted\" views, you can separate the stages into their own individual side sketches to let you \"animate\" how it moves in the sketch. You can use configurations to do this.</p> <p></p>"},{"location":"learning-course/stage2/2D/part-studio/","title":"2D: Cascade Elevator","text":""},{"location":"learning-course/stage2/2D/part-studio/#part-studio","title":"Part Studio","text":"<ol> <li>Add the <code>Origin Cube</code> feature and derive the main layout sketches if you made them in a separate part studio.</li> <li>Use extrude individual to create the tubes (without creating only duplicates; this means only the bottoms of stages on one side).</li> <li> <p>Convert the extrusions into tubes.</p> Converting Extrusions into Tubes <p>Tube converter is the easiest way to do this, as demonstrated before, but the hole pattern can break things and be misaligned pretty easily if the dimensions of the elevator end up changing. The most parametric way is to shell the tubes manually, then use a mix of sketches and linear patterns to create the hole pattern. This way you can build design intent into the hole pattern so it won't be misaligned with anything when dimensions change.</p> <p>To create parametric hole patterns, you can start by using the Measure Value featurescript from CADSHARP to measure the length of the tube. You create your first hole at the top of the tube, then create a feature pattern or sketch pattern down the length of the tube with the distance of 0.5\" and the instance count set to <code>((#frame_side_tube/inch)*2)-1</code>. This method keeps the hole count parametric to the length of the tube.</p> </li> <li> <p>Transform and copy the tubes to complete the structure.</p> <p>Tip</p> <p>At this point, as design lead, you could create mate connectors, subassemblies, and top level assembly, and hand off the elevator to other people to parallelize the process if that's how your team works.</p> </li> <li> <p>Model any unique crushblocks</p> <p>Info</p> <p>Crushblocks and tube plugs are commonly used for most superstructures and elevators nowadays. Find out what they are and why they're useful on the design handbook page about structure.</p> <p>  Finished elevator tubes  </p> </li> <li> <p>Decide where you want your rigging (rope) and model it with a path, profile, and sweep.</p> </li> <li>Derive the TTB chain comb into place on a first stage tube. This is for knowing how much to space the chain off from the tubes.</li> <li>Sketch the chain transmission and crossmember, including the bearing holes for the sprockets.</li> <li>Create the plates and tube for the crossmember. The clamp for the rigging will be mounted to the crossmember, but it's also for the rigidity of the base stage.</li> <li>Derive the TTB cable clamp into place on the crossmember and create mounting holes for it, and a crushblock if bolting all the way through the tube.</li> <li>Add holes for the tube plugs on the crossmember.</li> <li>Create the chain transmission, including the chain, any custom spacers, and axles</li> <li>Derive some maxplanetary parts to build the gearbox around. Create spacers and mounting for both maxplanetaries. Make sure to leave them easily accessible and replaceable</li> <li>Add plates at the bottom of the elevator to support the MAXplanetary shafts.</li> <li>Optionally, derive nut strips and a ratchet plate for the carriage and create the shaft for the rigging to be tied to.</li> <li>Create a reference mate in the middle of the base tube, owned by the origin cube, to later mate the subassemblies together with.</li> </ol>  Finished elevator part studio  <p></p>"},{"location":"learning-course/stage2/2D/project-overview/","title":"2D: Cascade Elevator","text":""},{"location":"learning-course/stage2/2D/project-overview/#project-overview","title":"Project Overview","text":"<p>Because elevators are just mechanisms to move other mechanisms around, this project is similar to the dead axle pivot and will be designed without much context to learn the design process and components. You will get practice with designing elevators in the context of a robot in Stage 3.</p> Reference Elevator Assembly <p>To design the elevator, this document will be used as reference. After the engineering concepts section, you will follow a rough guide to model a copy of it.</p> <p>Cascade Elevator Reference Document </p>"},{"location":"learning-course/stage2/2D/project-overview/#engineering-concepts-decisions","title":"Engineering Concepts &amp; Decisions","text":"<p>The engineering concepts and decisions made to design the reference elevator are covered in the following sections. We cover these concepts lightly so you can understand the principles enough to design one yourself. The design handbook covers the \"why\" for these concepts if you would like to gain a deeper understanding.</p> <p></p>"},{"location":"learning-course/stage2/2D/rigging/","title":"2D: Cascade Elevator","text":""},{"location":"learning-course/stage2/2D/rigging/#rigging","title":"Rigging","text":"<p>Elevator rigging typically takes up the bulk of the design process, as its the most important part of the elevator. Rigging style, and organization drives the motor mounting, and position of the crossmember the clamp plate is mounted to, so its important to properly plan out the cable paths.</p> Example of a 3 stage cascade elevator rigging <p></p>"},{"location":"learning-course/stage2/2D/summary/","title":"2D: Cascade Elevator","text":""},{"location":"learning-course/stage2/2D/summary/#summary","title":"Summary","text":"<p>You've completed Stage 2D! To summarize what you've learned in this stage:</p> <ul> <li>The concepts and key components of a cascade-rigged elevator</li> <li>The main layout sketch concepts and geometry for elevators</li> <li>Linear relations in assemblies</li> <li>The uses of tube plugs and crush blocks for tube assemblies</li> <li>More practice with a mechanism with moving parts and the origin cube</li> </ul> <p>There's a lot of freedom for attaching mechanisms to this kind of elevator. If you mount it 90 degrees offset from the front of your robot, you can even create a passthrough mechanism that can move up and down. </p> <p>Once you practice more main layout sketch integration in the next stage, you will be able to replicate a robot with an angled elevator in the later part of Stage 3.</p> <p>Make sure to fill out our simple feedback form for 2D so we can collect data and get a better idea of how to improve the website!</p> <p>Fill out this feedback form as well to give feedback for all of Stage 2.</p> <p></p>"},{"location":"learning-course/stage3/3A/introduction/","title":"Stage 3","text":"<p>In this stage you will practice full robot main layout sketches, replicate simple robots, and practice top-down workflow and integration</p> <p>Under Construction</p>"},{"location":"mechanism-examples/","title":"Mechanism Examples","text":"<p>\"Steal from the best, invent the rest\" - Mike Corsetto, Head Coach of Team 1678. Don't ever be afraid of taking inspiration from designs of other robots. This page acts as a design reference and learning page for a wide variety of mechanisms.</p> <p>Note</p> <p>A CAD link has been provided when available, but examples without CAD can still be useful to look at with Behind The Bumpers videos and ChiefDelphi threads.</p> <p>Contribution</p> <p>This library of mechanism examples always needs expansion. Follow the contribution guidelines to add your own examples or help write Behind the Design pages for existing examples.</p>"},{"location":"mechanism-examples/#drivebases","title":"Drivebases","text":"<ul> <li> <p>Swerve drivebases, primarily COTS swerve modules</p> <p> Swerve Drivebases</p> </li> <li> <p></p> <p>Tank drivebases, not commonly found on robots anymore</p> <p> Tank Drivebases (Coming Soon)</p> </li> </ul>"},{"location":"mechanism-examples/#intakes","title":"Intakes","text":"<ul> <li> <p>Over-the-bumper intakes deployed on a single pivot</p> <p> Pivoting Intakes</p> </li> <li> <p></p> <p>Over-the-bumper intakes deployed with a linkage, includes four-bar linkages</p> <p> Linkage Intakes</p> </li> <li> <p></p> <p>Intakes that acquire game pieces underneath the bumpers</p> <p> Under-the-bumper Intakes (Coming Soon)</p> </li> </ul>"},{"location":"mechanism-examples/#game-piece-manipulation","title":"Game Piece Manipulation","text":"<ul> <li> <p>Mechanisms designed to shoot game pieces</p> <p> Shooters</p> </li> <li> <p></p> <p>Unique mechanisms for game piece scoring, sometimes combined with intaking</p> <p> End Effectors (Coming Soon)</p> </li> <li> <p></p> <p>Mechanisms for transporting game pieces from one part of a robot to another</p> <p> Indexers (Coming Soon)</p> </li> </ul>"},{"location":"mechanism-examples/#linear-extensions","title":"Linear Extensions","text":"<ul> <li> <p>Elevators with continuous rigging</p> <p> Continuous Elevators</p> </li> <li> <p></p> <p>Elevators with cascade rigging</p> <p> Cascade Elevators</p> </li> <li> <p></p> <p>Telescoping extension mechanisms</p> <p> Telescoping Extensions (Coming Soon)</p> </li> </ul>"},{"location":"mechanism-examples/#rotating-mechanisms","title":"Rotating Mechanisms","text":"<ul> <li> <p>Mechanisms designed to rotate other mechanisms vertically</p> <p> Pivots</p> </li> <li> <p></p> <p>Mechanisms designed to rotate other mechanisms horizontally</p> <p> Turrets (Coming Soon)</p> </li> </ul> <p></p>"},{"location":"mechanism-examples/drivebase/swerve/","title":"Swerve Drivebases","text":"<p>The drivebase is the single most important part of your robot, if you can't move, you can't score or play defense. All other mechanisms will also build on top of the drivebase. These examples can provide useful inspiration for electronics layout, bellypan design, and structural supports.</p>"},{"location":"mechanism-examples/drivebase/swerve/#featured","title":"Featured","text":"<ul> <li> <p>A drivebase with two cross tubes featuring wire grommets</p> <p> 2910 Charged Up Drivebase</p> </li> <li> <p></p> <p>A drivebase featuring a \"dropped frame\" frame found on many robots in 2024</p> <p> 1678 Crescendo Drivebase</p> </li> <li> <p></p> <p>A drivebase featuring REV swerve modules and NEO motors</p> <p> 3005 Charged Up Drivebase</p> </li> <li> <p></p> <p>A drivebase featuring a unique frame cutout for an UTB intake</p> <p> 6328 Crescendo Drivebase</p> </li> <li> <p></p> <p>A standard swerve drivebase with SDS MK4i modules and pocketed tubing</p> <p> 5460 Charged Up Drivebase</p> </li> <li> <p></p> <p>A drivebase featuring an inverted bellypan, or \"brainpan\" for electronics mounting</p> <p> 972 Crescendo Drivebase</p> </li> </ul>"},{"location":"mechanism-examples/drivebase/swerve/#more-examples","title":"More Examples","text":""},{"location":"mechanism-examples/drivebase/swerve/#2024","title":"2024","text":"<ul> <li> <p>1778's Crescendo Drivebase</p> </li> <li> <p>2910's Crescendo Drivebase</p> </li> <li> <p>6036's Crescendo Drivebase</p> </li> </ul>"},{"location":"mechanism-examples/drivebase/swerve/#2023","title":"2023","text":"<ul> <li> <p>1678's Charged Up Drivebase</p> </li> <li> <p>3847's Charged Up Drivebase</p> </li> <li> <p>5460's Charged Up Drivebase</p> </li> </ul>"},{"location":"mechanism-examples/drivebase/swerve/#2022","title":"2022","text":"<ul> <li>1678's Rapid React Drivebase</li> </ul>"},{"location":"mechanism-examples/drivebase/swerve/#2021-infinite-recharge-home","title":"2021 (Infinite Recharge @ Home)","text":"<ul> <li>111's IR @ Home Drivebase</li> </ul>"},{"location":"mechanism-examples/drivebase/swerve/1678_2024_dt/","title":"1678's Crescendo Drivebase","text":""},{"location":"mechanism-examples/drivebase/swerve/1678_2024_dt/#1678-crescendo-drivebase","title":"1678 Crescendo Drivebase","text":"A drivebase featuring a \"dropped frame\" frame found on many robots in 2024"},{"location":"mechanism-examples/drivebase/swerve/1678_2024_dt/#links","title":"Links","text":"<p>CAD Document</p>"},{"location":"mechanism-examples/drivebase/swerve/1678_2024_dt/#behind-the-design","title":"Behind the Design","text":"<p>Coming Soon</p> <p></p>"},{"location":"mechanism-examples/drivebase/swerve/2910_2023_dt/","title":"2910's Charged Up Drivebase","text":""},{"location":"mechanism-examples/drivebase/swerve/2910_2023_dt/#2910-charged-up-drivebase","title":"2910 Charged Up Drivebase","text":"Swerve drivetrain featuring MK4i swerve modules, a pocketed bellypan, and a billet brass frame-rail for weight distribution."},{"location":"mechanism-examples/drivebase/swerve/2910_2023_dt/#links","title":"Links","text":"<p>CAD Document</p>"},{"location":"mechanism-examples/drivebase/swerve/2910_2023_dt/#behind-the-design","title":"Behind the Design","text":"<p>This drivebase embodies all fundamentals of good drivebase design, including the following features:</p>"},{"location":"mechanism-examples/drivebase/swerve/2910_2023_dt/#rigidity","title":"<p>Rigidity </p>","text":"This drivebase is constructed primarily from 1/8 inch box tube, with important cross-members providing rigidity to the structure. Drivebases must be built extremely tough, as they will experience the brunt of each collision while robots travel across the field at high speed. The bellypan offers extra rigidity by holding the frame members parallel with each other."},{"location":"mechanism-examples/drivebase/swerve/2910_2023_dt/#electrical","title":"<p>Electrical </p>","text":"Holes in the drive-rails allow electrical teams to easily route wires to where they need to go. Holes cut into aluminum may have sharp edges, so it's important to cover them with rubber grommets! The robot's bellypan should have mounting holes for most of the major electronics designed into it. This allows for easy and secure fastening of components like the PDH, and reduces the chances of electronics coming lose in competition. <p>The drivebase usually serves a double purpose as a robot's electrical hub, so it's important to take electronics into consideration. While looking through the CAD, you may notice several key aspects of this drivebase that intentionally accommodate electronics including:</p> <ul> <li>Pocketed bellypan serves a double purpose of both weight reduction, and providing many points to secure wires with zip-ties.</li> <li>All electronics have pre-designed mounting holes</li> <li>Holes in the frame-rails around the PDH allow for easy wire routing while keeping wires low in the bellypan and out of the way.</li> </ul> <p></p>"},{"location":"mechanism-examples/drivebase/swerve/3005_2023_dt/","title":"3005 Charged Up Drivebase","text":"Swerve drivetrain featuring a combination of REV MaxSwerve and NEO motors."},{"location":"mechanism-examples/drivebase/swerve/3005_2023_dt/#links","title":"Links","text":"<p>CAD Document</p>"},{"location":"mechanism-examples/drivebase/swerve/3005_2023_dt/#behind-the-design","title":"Behind the Design","text":"<p>Coming Soon</p> <p></p>"},{"location":"mechanism-examples/drivebase/swerve/5460_2023_dt/","title":"5460 Charged Up Drivebase","text":"A standard swerve drivebase utilizing SDS MK4i modules."},{"location":"mechanism-examples/drivebase/swerve/5460_2023_dt/#links","title":"Links","text":"<p>CAD Document</p>"},{"location":"mechanism-examples/drivebase/swerve/5460_2023_dt/#behind-the-design","title":"Behind the Design","text":"<p>Coming Soon</p> <p></p>"},{"location":"mechanism-examples/drivebase/swerve/6328_2024_dt/","title":"6328 Crescendo Drivebase","text":"A swerve drivetrain using SDS MK4i swerve modules and featuring a unique frame cutout for an UTB intake."},{"location":"mechanism-examples/drivebase/swerve/6328_2024_dt/#links","title":"Links","text":"<p>CAD Document</p>"},{"location":"mechanism-examples/drivebase/swerve/6328_2024_dt/#behind-the-design","title":"Behind the Design","text":"<p>Coming Soon</p> <p></p>"},{"location":"mechanism-examples/drivebase/swerve/972_2024_dt/","title":"972 Crescendo Drivebase","text":"Swerve drivetrain featuring the \"brainpan\" style of electroncis mounting."},{"location":"mechanism-examples/drivebase/swerve/972_2024_dt/#links","title":"Links","text":"<p>CAD Document</p>"},{"location":"mechanism-examples/drivebase/swerve/972_2024_dt/#behind-the-design","title":"Behind the Design","text":"<p>Coming Soon</p> <p></p>"},{"location":"mechanism-examples/drivebase/tank/","title":"Tank Drivebases","text":"<p>Coming Soon</p> <p></p>"},{"location":"mechanism-examples/elevator/cascade/","title":"Cascade Elevators","text":"<p>Cascade elevator stages are characterized by their linked stages. Each stage is driven by the previous stage, ie: a cascading motion.</p>"},{"location":"mechanism-examples/elevator/cascade/#featured","title":"Featured","text":"<ul> <li> <p>Chain and cable driven COTS cascade elevator kit from WCP</p> <p> WCP's GreyT Cascade Elevator</p> </li> <li> <p></p> <p>2-stage chain and cable driven cascade elevator with a plate carriage and heavy utilization of COTS components</p> <p> 2-Stage Cascade Elevator*</p> </li> <li> <p></p> <p>3-stage chain and cable driven cascade elevator with a plate carriage and heavy utilization of COTS components</p> <p> 3-Stage Cascade Elevator*</p> </li> </ul> <p>* Designs marked with an asterisk have not been built or tested in real life. They will be phased out as new mechanism examples are added.</p> <p></p>"},{"location":"mechanism-examples/elevator/cascade/#more-examples","title":"More Examples","text":"<p>Coming Soon</p> <p></p>"},{"location":"mechanism-examples/elevator/cascade/2_stage_elevator/","title":"2 Stage Cascade Elevator","text":"Chain driven 2 stage elevator featuring a plate based carriage. Uses TTB COTS Rigging and WCP Elevator Blocks. <p>NOTE: This model not been built or tested in real life. It will phased out as new mechanism examples are added.</p>"},{"location":"mechanism-examples/elevator/cascade/2_stage_elevator/#links","title":"Links","text":"<p>CAD Document</p>"},{"location":"mechanism-examples/elevator/cascade/2_stage_elevator/#behind-the-design","title":"Behind the design","text":"<p>Coming Soon</p> <p></p>"},{"location":"mechanism-examples/elevator/cascade/3_stage_elevator/","title":"3 Stage Cascade Elevator","text":"Chain driven 3 stage elevator featuring a plate based carriage. Uses TTB COTS Rigging and WCP Elevator Blocks. <p>NOTE: This model not been built or tested in real life. It will phased out as new mechanism examples are added.</p>"},{"location":"mechanism-examples/elevator/cascade/3_stage_elevator/#links","title":"Links","text":"<p>CAD Document</p>"},{"location":"mechanism-examples/elevator/cascade/3_stage_elevator/#behind-the-design","title":"Behind the design","text":"<p>Coming Soon</p> <p></p>"},{"location":"mechanism-examples/elevator/cascade/wcp_greyt_elevator/","title":"WCP's GreyT Cascade Elevator","text":"Chain and cable driven COTS cascade elevator kit from WCP."},{"location":"mechanism-examples/elevator/cascade/wcp_greyt_elevator/#links","title":"Links","text":"<p>CAD Document</p>"},{"location":"mechanism-examples/elevator/cascade/wcp_greyt_elevator/#behind-the-design","title":"Behind the Design","text":"<p>Coming Soon</p> <p></p>"},{"location":"mechanism-examples/elevator/continuous/","title":"Continuous Elevators","text":"<p>Continuous elevators are characterized by the continuous loop of cable or belt that drives the final stage. The intermediary stages are not directly driven.</p>"},{"location":"mechanism-examples/elevator/continuous/#featured","title":"Featured","text":"<ul> <li> <p>External cable driven 2-stage elevator using COTS bearing blocks with a unique open-top carriage</p> <p> 1678's Charged Up Elevator</p> </li> <li> <p></p> <p>External timing belt driven 2-stage continuous elevator with constant force springs and COTS bearing blocks</p> <p> 3847's Charged Up Elevator</p> </li> </ul> <p></p>"},{"location":"mechanism-examples/elevator/continuous/#more-examples","title":"More Examples","text":"<p>Coming Soon</p> <p></p>"},{"location":"mechanism-examples/elevator/continuous/1678_2023_elevator/","title":"1678 Charged Up Elevator","text":"External cable driven 2-stage elevator using COTS bearing blocks with a unique open-top carriage."},{"location":"mechanism-examples/elevator/continuous/1678_2023_elevator/#links","title":"Links","text":"<p>CAD Document</p>"},{"location":"mechanism-examples/elevator/continuous/1678_2023_elevator/#behind-the-design","title":"Behind the Design","text":"<p>Coming Soon</p> <p></p>"},{"location":"mechanism-examples/elevator/continuous/3847_2023_elevator/","title":"3847 Charged Up Elevator","text":"External timing belt driven 2-stage continuous elevator with constant force springs and COTS bearing blocks."},{"location":"mechanism-examples/elevator/continuous/3847_2023_elevator/#links","title":"Links","text":"<p>CAD Document</p>"},{"location":"mechanism-examples/elevator/continuous/3847_2023_elevator/#behind-the-design","title":"Behind the Design","text":"<p>Coming Soon</p> <p></p>"},{"location":"mechanism-examples/end-effector/","title":"End Effectors","text":"<p>Coming Soon</p>"},{"location":"mechanism-examples/indexer/","title":"Indexers","text":"<p>Coming Soon</p>"},{"location":"mechanism-examples/intake/linkage/","title":"Linkage Intakes","text":"<p>Linkage deployed over-the-bumper intakes offer creative packaging and added compliance.</p>"},{"location":"mechanism-examples/intake/linkage/#featured","title":"Featured","text":"<ul> <li> <p>A motor driven four-bar intake with compliance wheels</p> <p> 1678's Rapid React Intake</p> </li> <li> <p></p> <p>A motor driven four-bar intake with round rollers</p> <p> 6800's Rapid React Intake</p> </li> <li> <p></p> <p>A pneumatically actuated 4-bar intake with vectoring wheels for centering</p> <p> 4089's Rapid React Intake</p> </li> </ul> <p></p>"},{"location":"mechanism-examples/intake/linkage/1678_2022_intake/","title":"1678's Rapid React Intake","text":""},{"location":"mechanism-examples/intake/linkage/1678_2022_intake/#1678s-rapid-react-intake","title":"1678's Rapid React Intake","text":"Motor driven 4 bar intake designed to take up minimal horizontal space"},{"location":"mechanism-examples/intake/linkage/1678_2022_intake/#link","title":"Link","text":"<p>CAD Document</p>"},{"location":"mechanism-examples/intake/linkage/1678_2022_intake/#behind-the-design","title":"Behind the design","text":"<p>4 bar OTB intakes are built to pull gamepieces off the floor and into the robot, but to do so they put themselves in a precarious situation. Sitting outside the robots frame perimeter, they are susceptible to damage from collisions with the field and other robots. All OTB intake designs are heavily influenced by the design requirements to be robust against impacts and damage, fast, and light.</p>  Always include a way to tension your chains!  OTB intakes must actuate quickly and accurately, so a motor is a good choice to power them. 1678 used a single Falcon 500 with a 30:1 ratio. This intake featured a torque transfer shaft (highlighted yellow in the image) to transfer power to both sides of the intake. Driving both sides of the intake pivot prevents the entire intake from bending under the loads of extension and retraction. The pivot itself is driven by chain on a 32t plate sprocket. Using a chain for the final reduction and power transmission is optimal due to its ability to absorb shock loads.  These screws and washers prevent bearings from popping out during impacts.   The intake rollers are powered by a Falcon 500, and power is transferred using HTD 5mm timing belts. The intake is designed with the \"touch it own it\" design philosophy, and it spans the full width of the robot to make intaking as easy as possible for the driver. The intake is \"geared\" (using belt and pulley reductions) so that the surface speed of the rollers are approximately 2.5x the speed of the robot. This allows the robot to intake balls even while driving into them at full speed. Each level of wheels is also belted together such that they have equal surface speeds, despite their different diameters.  It is important to take the diameter of your intake wheels/rollers into account because it may effect their surface speeds. <p>This intake takes many special considerations to increase its survivability and robustness</p> The first stage of rollers has two belts powering it for redundancy, just in case one belt is damaged. Pulleys feature extra-large flanges to prevent belts from slipping off. Intake plates are manufactured from 1/4\" polycarbonate, which is the most common intake material due to its strength to weight ratio and ability to return to its original shape after deforming. This intake has extra aluminum reinforcement on the areas most susceptible to breaking. Intake hardstopped in its down position. Intake hardstopped in its up position <p> 1678 designed their intake polycarbonate plates to hardstop on each other in both the fully extended and retracted positions. This makes programming the intake easier, and helps the robot pass inspection by proving that the intake cannot extend past the frame perimeter extension limit. In a pneumatically actuated intake, having the pivot plates hardstop allows for some error margin on the pneumatic piston's stroke.</p>"},{"location":"mechanism-examples/intake/linkage/1678_2022_intake/#see-this-intake-in-action-here","title":"<p> See this Intake in Action Here </p>","text":"<p>Tip</p> <p>Click the images to watch the videos.</p> <p> </p> <p></p>"},{"location":"mechanism-examples/intake/linkage/4089_2022_intake/","title":"4089's Rapid React Intake","text":"A pneumatically actuated 4-bar intake with vectoring wheels for centering."},{"location":"mechanism-examples/intake/linkage/4089_2022_intake/#link","title":"Link","text":"<p>CAD Document</p>"},{"location":"mechanism-examples/intake/linkage/4089_2022_intake/#behind-the-design","title":"Behind the design","text":"<p>Coming Soon</p> <p></p>"},{"location":"mechanism-examples/intake/linkage/6800_2022_intake/","title":"6800's Rapid React Intake","text":"A motor driven four-bar intake with round rollers."},{"location":"mechanism-examples/intake/linkage/6800_2022_intake/#link","title":"Link","text":"<p>CAD Document</p>"},{"location":"mechanism-examples/intake/linkage/6800_2022_intake/#behind-the-design","title":"Behind the design","text":"<p>Coming Soon</p> <p></p>"},{"location":"mechanism-examples/intake/slapdown/","title":"Pivoting Intakes","text":"<p>Pivoting, or \"slapdown\", intakes offer fast deployment and fine control of intake positioning.</p>"},{"location":"mechanism-examples/intake/slapdown/#featured","title":"Featured","text":"<ul> <li> <p>A motor powered slapdown intake with polycarbonate rollers for intaking notes</p> <p> 1678's Crescendo Slapdown Intake</p> </li> <li> <p></p> <p>A motor powered slapdown intake with a zombie axle pivot for intaking notes</p> <p> 1778's Crescendo Slapdown Intake</p> </li> <li> <p></p> <p>A motor powered pivoting intake that flips up for a handoff</p> <p> 6423's Crescendo Flip Intake</p> </li> <li> <p></p> <p>A spring powered pivoting intake that allows for the pivot motor to be the same as the roller motor</p> <p> 3847's Rapid React Springed Intake</p> </li> <li> <p></p> <p>A pneumatically actuated intake with vectoring wheels for centering Infinite Recharge balls</p> <p> 2910's IR @ Home Pneumatic Intake</p> </li> </ul> <p></p>"},{"location":"mechanism-examples/intake/slapdown/1678_2024_intake/","title":"1678 Crescendo Flip Intake","text":"A motor powered slapdown intake with polycarbonate rollers for intaking notes."},{"location":"mechanism-examples/intake/slapdown/1678_2024_intake/#links","title":"Links","text":"<p>CAD Document</p>"},{"location":"mechanism-examples/intake/slapdown/1678_2024_intake/#behind-the-design","title":"Behind the design","text":"<p>Coming Soon</p> <p></p>"},{"location":"mechanism-examples/intake/slapdown/1778_2024_intake/","title":"1778 Crescendo Flip Intake","text":"A motor powered slapdown intake with a zombie axle pivot for intaking notes"},{"location":"mechanism-examples/intake/slapdown/1778_2024_intake/#links","title":"Links","text":"<p>CAD Document</p>"},{"location":"mechanism-examples/intake/slapdown/1778_2024_intake/#behind-the-design","title":"Behind the design","text":"<p>Coming Soon</p> <p></p>"},{"location":"mechanism-examples/intake/slapdown/2910_2021_intake/","title":"2910's IR @ Home / 2021 Offseason Pnuematic Intake","text":"A pneumatically actuated intake with vectoring wheels for centering Infinite Recharge balls."},{"location":"mechanism-examples/intake/slapdown/2910_2021_intake/#links","title":"Links","text":"<p>CAD Document</p>"},{"location":"mechanism-examples/intake/slapdown/2910_2021_intake/#behind-the-design","title":"Behind the design","text":"<p>Coming Soon</p> <p></p>"},{"location":"mechanism-examples/intake/slapdown/3847_2022_intake/","title":"3847 Rapid React Flip Intake","text":"A spring powered pivoting intake that allows for the pivot motor to be the same as the roller motor."},{"location":"mechanism-examples/intake/slapdown/3847_2022_intake/#links","title":"Links","text":"<p>CAD Document</p>"},{"location":"mechanism-examples/intake/slapdown/3847_2022_intake/#behind-the-design","title":"Behind the design","text":"<p>Coming Soon</p> <p></p>"},{"location":"mechanism-examples/intake/slapdown/6423_2024_intake/","title":"6423 Crescendo Flip Intake","text":"A motor powered pivoting intake that flips up for a handoff."},{"location":"mechanism-examples/intake/slapdown/6423_2024_intake/#links","title":"Links","text":"<p>CAD Document</p>"},{"location":"mechanism-examples/intake/slapdown/6423_2024_intake/#behind-the-design","title":"Behind the design","text":"<p>Coming Soon</p> <p></p>"},{"location":"mechanism-examples/intake/utb/","title":"Under-the-bumper Intakes","text":"<p>Coming Soon</p>"},{"location":"mechanism-examples/pivots/","title":"Pivots","text":"<p>Pivots come in all sorts of shapes and sizes, and their designs are highly dependent on mechanism requirements. These examples provide some insight into different solutions for the many challenges of designing pivots.</p>"},{"location":"mechanism-examples/pivots/#featured","title":"Featured","text":"<ul> <li> <p>Double jointed arm, high pivot, A-frame structure, stub axles</p> <p> 6328 A-Frame Pivot</p> </li> <li> <p></p> <p>Chain-driven custom dead axle pivot, electronics and camera mounts, rotating final stage tensioning</p> <p> 2910 Dead Axle Pivot</p> </li> <li> <p></p> <p>A unique sector lantern gear driven pivot for low backlash</p> <p> 1690 Lantern Gear Pivot</p> </li> <li> <p></p> <p>A high torque belt driven pivot for a double jointed arm</p> <p> 5460 Charged Up Belt Pivot</p> </li> </ul> <p></p>"},{"location":"mechanism-examples/pivots/1690_2024_pivot/","title":"1690's 2024 Lantern Gear Pivot","text":"A unique sector lantern gear driven pivot for low backlash."},{"location":"mechanism-examples/pivots/1690_2024_pivot/#links","title":"Links","text":"<p>CAD Document</p>"},{"location":"mechanism-examples/pivots/1690_2024_pivot/#behind-the-design","title":"Behind the Design","text":"<p>Coming Soon</p> <p></p>"},{"location":"mechanism-examples/pivots/2910_2023_pivot/","title":"2910's 2023 Dead Axle Pivot","text":"A custom dead-axle pivot with a creative chain tensioning solution."},{"location":"mechanism-examples/pivots/2910_2023_pivot/#links","title":"Links","text":"<p>CAD Document </p> <p>(Thanks to JB of FRC6995 for cleaning the OnShape document up!)</p> <p>CAD and Tech Binder Release ChiefDelphi Thread</p> <p>Match Video</p>"},{"location":"mechanism-examples/pivots/2910_2023_pivot/#behind-the-design","title":"Behind the Design","text":"<p>The pivot is driven by 2 mirrored dual falcon 500 gearboxes. These gearboxes are incredibly compact and thoughtful design decisions have been made throughout the whole pivot to reduce part count. One method utilized in this gearbox is to use a Thunderhex bearing retention technique in which each shaft is turned down from 1/2\" Hex to 13.75mm (Thunderhex diameter) on each end, which fully constrains each flange bearing as long as the two plates are compressed. This both reduces part count, design complexity, and makes the gearboxes easier to assemble and service, requiring only 5 bolts to swap out the entire motor plate (motors included) and the entire gearset.</p> Thunderhex bearing retention technique utilizing turned hex flanges, bearing flanges, and fixed plates. <p>All of these plates are heavily lightened to increase the robots top speed and acceleration capabilities (F=ma), and to keep the center of gravity low. The gearboxes and even motor placement on the gearboxes are as low and central as possible to improve the robots center of mass. Lower center of mass helps to reduce tipping and gives the robot an advantage in pushing battles.</p> <p>The second stage shaft runs across the robot to link the two gearboxes, which is essential to eliminate any torsion in the arm that would be caused by unevenly driving each side of the pivot independently.</p> Wheel Support Reference from REV ION Robot Basics Guide <p>The third stage is an additional reduction that doubles as a tensioning mechanism,  reusing the mechanical link shaft as an idler shaft to pivot around, adjusting the center to center distance of the final chain run. Tightening the bolt (shown in red in the diagram below) pulls the lever back, applying tension to the chain. The planet gear &amp; sprocket shaft uses the same \u00bd\u201d to 13.75mm diameter hex shaft technique to reduce part count. Using a chain for the final reduction and power transmission is optimal due to its exeptional tensile strength and ability to absorb shock loads.</p> <p>The main pivot itself is a massive dead axle fixed into the triangular superstructure. Triangles are strong! This (almost) right angle superstructure is incompressible, as when a force is applied to compress any side there is always an opposite side in tension to counteract that force. This dead axle assembly is very simple, with 3 custom parts that are all easily manually machineable on a lathe. The large dead axle has two end caps and a single bolt through from one end to the other to hold the whole axle assembly together.</p> <p></p>"},{"location":"mechanism-examples/pivots/5460_2023_pivot/","title":"5460's Charged Up Belt Pivot","text":"A high torque belt driven pivot for a double jointed arm."},{"location":"mechanism-examples/pivots/5460_2023_pivot/#links","title":"Links","text":"<p>CAD Document</p>"},{"location":"mechanism-examples/pivots/5460_2023_pivot/#behind-the-design","title":"Behind the Design","text":"<p>Coming Soon</p> <p></p>"},{"location":"mechanism-examples/pivots/6328_2023_pivot/","title":"6328 A-Frame Pivot","text":""},{"location":"mechanism-examples/pivots/6328_2023_pivot/#6328-a-frame-pivot-2023","title":"6328 A-Frame Pivot 2023","text":"This triple pivoted design folded in on itself to start inside frame perimeter, and allowed for a near universal manipulation of the robot\u2019s end effector."},{"location":"mechanism-examples/pivots/6328_2023_pivot/#links","title":"Links","text":"<p>CAD Document</p> <p>ChiefDelphi OpenAlliance Build Thread</p> <p>Pivot April Tag Tracking</p>"},{"location":"mechanism-examples/pivots/6328_2023_pivot/#behind-the-design","title":"Behind the Design","text":"<p>In many cases, pivoting arms are a fundamental mechanism in the architecture of a robot. Thus, rigid, robust, and fast pivoting mechanisms can make or break a good design. Due to the massive moment load applied on this pivot joint at full arm extension, its essential that this pivots drive mechanism is both powerful and bulletproof.</p>"},{"location":"mechanism-examples/pivots/6328_2023_pivot/#force-breakdown-on-pivot-arm","title":"Force Breakdown on Pivot Arm","text":"<p>Torque is a function of two main variables: the magnitude of the applied force, the distance from the axis of rotation to where the force is applied (often referred to as the lever arm or moment arm), as well as the angle at which the force is applied. The force applied across an objects mass by gravity can be equivalently represented by a single force applied to the center of gravity of the object. At full arm extension, the CoG of the lever arm is at its max distance from the pivot axis, and gravity applies a point load at the CoG at a 90 degree angle relative to the lever arm, at which point the torque applied the pivot is this force MULTIPLIED by the distance from the CoG to the pivot.</p> <p>This massive moment load on the main pivot joint requires the pivot mechanism to both be built durable enough to handle this large torque without breaking, and also powerful enough to counteract and overcome this torque so that the pivot is able to be driven. When designing drive mechanisms and gearboxes for pivot arms like this, it is generally very useful to get a good estimation of how powerful a mechanism you will need to drive your arm depending on its length and mass, so many designers use simulators such as the Reca.lc Arm Calculator or the AMB Mechanism Ratio Calculator.</p> <p> The following breakdown is an excerpt from the 6328 OpenAlliance thread on ChiefDelphi, written by Matthew3 of FRC 6328 </p>"},{"location":"mechanism-examples/pivots/6328_2023_pivot/#the-improved-design","title":"The Improved Design","text":""},{"location":"mechanism-examples/pivots/6328_2023_pivot/#custom-gearbox","title":"Custom Gearbox","text":"<p>Due to the limited availability of MAXPlanetaries and belly pan space constraints, we have re-evaluated the way we are powering the first joint. The gearbox will be placed low in the belly pan powering a dead-axle MAXSpline where we chain that to the two first joints. This has a few major advantages over our previous approach: packaging, mechanically linking the first two joints, limited stick out into the middle of the robot to make it easier to pass through, and eliminating several MAXPlantary cartridges.</p> <p>The two bottom NEOs power the MAXSpline that crosses the width of the robot, while the MAXPlanetary NEO is powering the joint of the cube intake.</p> <p> For the new first joint dead axles, we are using 1.25\u201d 0.25 wall tube turned down to 30mm for the bearings. To hold the dead axles, we were inspired by 971\u2019s 2018 robot and their use of mitee-bites to hold the dead axle.</p> <p>For this, we use an \u2018outside\u2019 0.25 aluminum plate with an interesting profile put into it for clearance around the tube and to be selective about contact points. On the inside plate, the one that can move, this same profile is used but flipped 180 degrees.</p> <p>This inside plate is mounted with a few bolts in some oversized holes (0.005\u201d). They tap into the outer plate and the clearance holes in the blue plate allow the blue inner plate to have some movement. This means when you tighten the mitee-bite, it clamps the dead-axle in place. We calculated that this system provides around 1800 lbs of clamping force on the dead-axle for secure mounting. This also means it can easily switch out in the somewhat extreme scenario where we need to replace the dead-axle or if we need to replace the joint.</p> <p>This stackup is all contained within two snap rings (98541A134). This outermost constraint is for the \u201cworst case scenario\u201d where the mitee-bites fail. The inside snap ring is essential for keeping the stack up together.</p> <p>Moving to the joint itself, the previous design for this was a live axle MAXspline, this had a few small issues, but definitely things we would like to fix going forward. With the move to a real dead-axle, we solve all of these problems (hopefully).</p> <p>Taking a look at the joint itself, you will see the tube of the link, and the joint that connects to that link, this is a drastic improvement in repairability and was a requirement for us. We also switched the link tube into a thick wall MAXtube from the thin wall MAXtube. The joint itself consists of 0.25\u201d aluminum plates captured in PA12-CF nylon 3d prints. In the following picture, you can see the aluminum plate (light blue) captured in the nylon part (light gray). The aluminum plate takes the bearing while the nylon part captures it and locates it in the tube (creating the more complicated geometry of the inside of the MAXtube) and becomes a spacer for the bearings side to side.</p> <p>The encoder is a 3d printed part that comes off the side of the sprocket and uses the same system as the previous design.</p>"},{"location":"mechanism-examples/pivots/6328_2023_pivot/#the-second-joint","title":"The Second Joint","text":"<p>The second joint was host to most of the issues with the arm. This is mostly due to us taking what seemed to be the easiest design-wise when building it at first. Just as a reminder, the previous joint was a 3 stage max planetary and a 32t to 80t geared reduction. A very simple joint, but an issue ridden one at best. The MAXplanetary has a significant amount of backlash, it is all assembled with press fit tube blocks and such, making it almost impossible to take apart, and the MAXspline itself has a significant amount of spring in it. With these issues in mind, let\u2019s take a look at the new design.</p> <p>This joint looks fairly similar to the first joint. The dead axle is clamped by a very similar system as the first joint, with the sub plate (light blue) clamping the dead axle onto the first tube. The shaft has snap rings on the outside for the worst case scenario where the tube slips.</p> <p>The dead axle tube (orange) has thin wall aluminum tube (1.25 OD 0.028 wall) acting as spacers, contacting the inner race of the bearing and the outer tube. The dead axle (orange tube) has a length of it turned 0.005\u201d less than the 30mm OD of the rest of the tube (the length where no bearings are in contact) for assembly reasons.</p> <p>This system will (hopefully) reduce spring and separate the joints from the tubes, aiding repairability.</p> <p>The gearbox is 3 stages (+ chain) to a total of 228:1 of reduction. While this will add weight to the arm, it is located relatively low when compared to the previous solution and we are willing to trade weight for lower backlash. The output of the gearbox is chained to the sprocket attached to the second link. The sprocket is a Rev 64t maxspline sprocket with the center enlarged to 1.375 for clearance around the dead axle. The sprocket is spaced off of the joint with a 3d printed spacer made in Pa12-CF nylon filament bolted to the joint with through bolts.</p> <p>The second joint has significantly more bracing in the previous design. We will now have full 1/16 wall 2x1s going across the second link, compared to the previous \u00bd hex going across. The gussets will be riveted onto the cross 2x1 and bolted onto the MAXtube to allow for repairability.</p> <p>The wrist stackup will be the exact same as the previous, with the same end effector and encoder/chain system.</p>"},{"location":"mechanism-examples/pivots/6328_2023_pivot/#see-this-pivot-in-action-here","title":"<p> See this Pivot in Action Here </p>","text":"<p>Tip</p> <p>Click the images to watch the videos.</p> <p> </p> <p></p>"},{"location":"mechanism-examples/shooter/","title":"Shooters","text":"<p>For all your piece launching needs. Shooter designs vary slightly with different size and shaped pieces, but the general concepts of what makes a \"good\" shooter tend to stay the same.</p>"},{"location":"mechanism-examples/shooter/#featured","title":"Featured","text":"<ul> <li> <p>A ball shooter featuring a rack gear actuated hood and hood rollers</p> <p> 1678's Rapid React Shooter</p> </li> <li> <p></p> <p>A ring shooter with independently driven halves to increase spin</p> <p> 6328's Crescendo Shooter</p> </li> <li> <p></p> <p>A ball shooter with a multipurpose hood for aiming and climbing</p> <p> 2910's Rapid React Shooter</p> </li> <li> <p></p> <p>A ball shooter with an adjustable hood and turret</p> <p> 6800's Rapid React Shooter</p> </li> <li> <p></p> <p>A compact ball shooter with back rollers and a heavy flywheel</p> <p> 2910's IR @ Home / 2021 Offseason Shooter</p> </li> </ul>"},{"location":"mechanism-examples/shooter/#more-examples","title":"More Examples","text":""},{"location":"mechanism-examples/shooter/#2024","title":"2024","text":"<ul> <li> <p>111's Crescendo Shooter</p> </li> <li> <p>581's Crescendo Shooter</p> </li> <li> <p>1778's Crescendo Shooter</p> </li> <li> <p>1678's Crescendo Shooter</p> </li> <li> <p>2910's Crescendo Shooter</p> </li> <li> <p>3005's Crescendo Shooter</p> </li> <li> <p>5419's Crescendo Shooter</p> </li> <li> <p>5940's Crescendo Shooter</p> </li> <li> <p>6036's Crescendo Shooter</p> </li> </ul>"},{"location":"mechanism-examples/shooter/#2022","title":"2022","text":"<ul> <li> <p>111's Rapid React Shooter</p> </li> <li> <p>118's Rapid React Shooter</p> </li> <li> <p>2337's Rapid React Shooter</p> </li> <li> <p>3357's Rapid React Shooter</p> </li> <li> <p>3847's Rapid React Shooter</p> </li> <li> <p>4089's Rapid React Shooter</p> </li> <li> <p>4099's Rapid React Shooter</p> </li> <li> <p>4481's Rapid React Shooter</p> </li> <li> <p>6328's Rapid React Shooter</p> </li> </ul>"},{"location":"mechanism-examples/shooter/#2020","title":"2020","text":"<ul> <li> <p>111's Infinite Recharge Shooter</p> </li> <li> <p>1114's Infinite Recharge Shooter</p> </li> <li> <p>1678's Infinite Recharge Shooter</p> </li> </ul>"},{"location":"mechanism-examples/shooter/1678_2022_shooter/","title":"1678's Rapid React Shooter","text":""},{"location":"mechanism-examples/shooter/1678_2022_shooter/#1678s-rapid-react-shooter","title":"1678's Rapid React Shooter","text":"Integrated hooded shooter and indexer for simplicity. This design is optimized to shoot large balls as accurately and consistently as possible."},{"location":"mechanism-examples/shooter/1678_2022_shooter/#links","title":"Links","text":"<p>CAD Document</p>"},{"location":"mechanism-examples/shooter/1678_2022_shooter/#behind-the-design","title":"Behind the Design","text":"<p>Hooded ball shooters all follow the same fundamental design principles, in an effort to produce the most consistent and accurate shots possible. These can be broken down to the following ideas: </p> <ul> <li>Maximize contact time with the game piece you are shooting. This benefits shot consistency as it gives the gamepiece more time to match the speed of the flywheels. </li> <li>Ensure your shooter can aim with adequate precision.</li> <li>Ensure your flywheels have enough mass to hold a consistent speed throughout the shot.</li> <li>In some cases, spin can be beneficial.</li> </ul> <p>Learn more about the 2022 game: Rapid React Game Reveal</p>  Hooded shooters in 2022 featured backrollers for one main purpose: Controlling backspin. A unique aspect of the 2022 game was the high goal that robots were required to shoot into. The geometry of the goal led many teams to find that their shots bounced out with high backspin. As a remedy, teams added backrollers to their shooters that were geared to spin in the opposite direction as the main flywheel. This reduced backspin on the balls to a manageable amount, but in some cases left just a little bit. This is due to the aerodynamics of spinning balls; thanks to the Magnus effect, backspin on rapid react balls helped them arc better into the high goal, and increased their stability in flight for long distance shots. Hooded shooter flywheels typically use TTB Urethane Wheels or Stealth Wheels. It is important that your flywheels maintain enough mass to hold a constant speed throughout the shot, to ensure consistent shots. Increasing the mass of your flywheel will increase it's moment of inertia, which in turn will increase its consistency. Games in which you can hold and shoot multiple pieces at a time such as Rapid React and Infinite Recharge especially necessitate massed flywheels. The 1678 shooter in 2022 utilized two SDS flywheels for its mass.  The most common method of pivoting a hooded shooter is a rack and pinion. 1678 utilized a 3DP rack integrated with their shooter's \"hood,\" and a smaller gear that \"climbed\" the hood gear. This simple design allows for precise actuation of the hood to a wide range of angles."},{"location":"mechanism-examples/shooter/1678_2022_shooter/#see-this-shooter-in-action-here","title":"<p> See this Shooter in Action Here </p>","text":"<p>Tip</p> <p>Click the images to watch the videos.</p> <p> </p> <p></p>"},{"location":"mechanism-examples/shooter/2910_2021_shooter/","title":"2910 IR @ Home / 2021 Offseason Shooter","text":"A compact ball shooter with back rollers and a heavy flywheel."},{"location":"mechanism-examples/shooter/2910_2021_shooter/#links","title":"Links","text":"<p>CAD Document</p>"},{"location":"mechanism-examples/shooter/2910_2021_shooter/#behind-the-design","title":"Behind the Design","text":"<p>Coming Soon</p> <p></p>"},{"location":"mechanism-examples/shooter/2910_2022_shooter/","title":"2910 Rapid React Shooter","text":"A ball shooter with a multipurpose hood for aiming and climbing."},{"location":"mechanism-examples/shooter/2910_2022_shooter/#links","title":"Links","text":"<p>CAD Document</p>"},{"location":"mechanism-examples/shooter/2910_2022_shooter/#behind-the-design","title":"Behind the Design","text":"<p>Coming Soon</p> <p></p>"},{"location":"mechanism-examples/shooter/6328_2024_shooter/","title":"6328 Crescendo Shooter","text":"A ring shooter with independently driven halves to increase spin."},{"location":"mechanism-examples/shooter/6328_2024_shooter/#links","title":"Links","text":"<p>CAD Document</p>"},{"location":"mechanism-examples/shooter/6328_2024_shooter/#behind-the-design","title":"Behind the Design","text":"<p>Coming Soon</p> <p></p>"},{"location":"mechanism-examples/shooter/6800_2022_shooter/","title":"6800 Rapid React Shooter","text":"A ball shooter with an adjustable hood and turret."},{"location":"mechanism-examples/shooter/6800_2022_shooter/#links","title":"Links","text":"<p>CAD Document</p>"},{"location":"mechanism-examples/shooter/6800_2022_shooter/#behind-the-design","title":"Behind the Design","text":"<p>Coming Soon</p> <p></p>"},{"location":"mechanism-examples/telescope/","title":"Telescope Extensions","text":"<p>Coming Soon</p>"},{"location":"mechanism-examples/turret/","title":"Turrets","text":"<p>Coming Soon</p>"},{"location":"resources/","title":"Resources","text":"<p>This section includes resources that you may find useful to help improve your knowledge of mechanisms, help you understand the rest of the site better, and assist your CAD workflow.</p>"},{"location":"resources/#sections","title":"Sections","text":""},{"location":"resources/#glossary","title":"Glossary","text":"<p>The glossary is a compiled list of words (including acronyms and abbreviations) and definitions to help people understand the lingo used in various parts of the website and on the discord server. When you find one of these words across the site, it will be underlined, and you can hover over it to see the definition.</p>"},{"location":"resources/#cad-resources","title":"CAD Resources","text":"<p>A collection of resources to support your workflow in Onshape, relevant to FRC.</p> <p>Featurescripts: A list of FRC-relevant featurescripts and how to add them (includes some short tutorial videos).</p> <p>Simplified Models: A collection of simplified models of COTS parts to reduce load time (see the importance of this in assembly best practices). These have been already mostly added to the MKCAD App.</p> <p>Configurables: A collection of configurable parts or assemblies that aren't in MKCAD that could assist your design.</p> <p>KrayonCAD: A resource now integrated with MKCAD that allows people to quickly model out robot architectures.</p> <p></p>"},{"location":"resources/configurables/","title":"Configurables","text":"<p>Parts in FRC such as printed pulleys can be standardized. Here is a list of common ones:</p> <ul> <li> <p>Configurable HTD5 pulley with insert</p> </li> <li> <p>Configurable Crush Block</p> </li> <li> <p>Configurable Deadaxle Roller</p> </li> </ul> <p>More Parts Coming Soon</p> <p></p>"},{"location":"resources/featurescripts/","title":"Featurescripts","text":"<p>Onshape has its own scripting language to create custom features to automate aspects of design called Featurescript. There are a lot of featurescripts (what we call the custom features) that make designing for FRC much easier.</p>"},{"location":"resources/featurescripts/#how-to-install-featurescripts","title":"How To Install Featurescripts","text":"<ol> <li>Open any Onshape document and go inside of a part studio</li> <li>Click the rightmost button on the toolbar <ul> <li>Note: If you have previously added any Featurescripts one of those may show up as the right most icon. In that case click the dropdown to show the add button.</li> </ul> </li> <li> <p>Paste the link of the document with the featurescript(s) in it into the search bar</p> <ul> <li>Note: Some of the below featurescripts exist in the same document, so you can add multiple from the same link.</li> </ul> </li> <li> <p>Select the featurescript(s) you want to add to your profile, then exit the box. They will be accessible in all documents from then on in the same drop-down in the toolbar where you added the feature.</p> </li> </ol> Video Tutorial <p> </p> <p>Adding Featurescripts while in a Featurescript Document</p> <p>When viewing a tab in a document that uses custom features, you can click a button near the top left that says 'custom features'. From here you can add custom features used in the document to your profile.</p>"},{"location":"resources/featurescripts/#troubleshooting-and-updating-featurescripts","title":"Troubleshooting and Updating Featurescripts","text":"<p>If a featurescript is not working as expected, the current version might be broken. You might have to update the featurescript. If it needs updating, the feature will show a blue icon to the right of it that, when hovered over, will say \"change version of linked document.\"</p> <ol> <li>The first way to update it is by individually by right clicking the feature you want updated in the feature list and clicking \"Update linked document...\"</li> <li>The second, and slightly more permanent way (until the maintainer of the custom feature creates a new version), is by right clicking any of the featurescript icons in your toolbar or in the custom features dropdown and clicking \"Update...\" or \"Update all...\" From there, you can see the current versions of the custom features you have added to your profile and update selected ones to use the current latest version when you use a featurescript.</li> </ol> Video Tutorial <p> </p>"},{"location":"resources/featurescripts/#list-of-featurescripts","title":"List of Featurescripts","text":"<p>Tip</p> <p>The title of each featurescript or group of featurescripts links to its respective document. Right click the title and click \"copy link address\" for installing it to your profile using the above process.</p>"},{"location":"resources/featurescripts/#highly-recommended","title":"Highly Recommended","text":"<p>These featurescripts are must haves to enhance your Onshape workflow. Many of these are developed by members of the FRC community and well maintained.</p> <p>Origin Cube Featurescript</p> <ul> <li>Used to create an origin reference for assembly mating</li> <li>Optionally import design constants like bolt hole sizes, heat set insert hole sizes, etc</li> <li>Optionally import functions for calculating gear OD, pulley/sprocket pitch &amp; outer diameters, and calculate belt/chain c-c distances</li> <li>See Assembly Best Practices for more information on usage</li> </ul> Video Example <p> Origin Cube's FRC Functions enables belt and chain calculations directly inside of sketches and fully captures design intent by capturing tooth counts.</p> <p>Belt &amp; Chain Gen</p> <ul> <li>Used in conjunction with Origin Cube FRC Functions to create highly customizable belts and chains</li> <li>Highly parametric - pulley/sprocket tooth count is automatically calculated from sketch pitch diameter.</li> <li>Create multi pulley, double sided belt, and multi sprocket transmissions with options for both toothed and round idlers</li> <li>Calculates belt and chain pitch; when used in conjunction with <code>Final</code> can allow for easy adjustment of path lengths</li> <li>Block model and high detail belt and chain model options available</li> <li>Allows for arbitrary placement of belts with a mate connector reference</li> </ul> Video Example <p> </p> <p>Extrude Individual (Julia's Featurescripts)</p> <ul> <li>Can extrude multiple regions as different parts with one feature, even if regions are adjacent</li> <li>Commonly used with tube converter to make punched aluminum tubes from a top view sketch</li> </ul> Video Tutorial <p> </p> <p>Tube Converter (Julia's Featurescripts)</p> <ul> <li>Converts extrusions into punched tube, with customization and presets for hole pattern, wall thickness, and profile.</li> </ul> Video Tutorial <p> </p> <p>Shaft Generator (Julia's Featurescripts)</p> <ul> <li>Generates a shaft, with options for hex, rounded hex (13.75mm OD), MAXSpline, etc.</li> <li>Options for retention type on both ends</li> <li>Can be generated in-place and with offsets</li> </ul> Video Tutorial <p> </p> <p>Spacer Generator (Julia's Featurescripts)</p> <ul> <li>Generates a spacer, with options for round, 3/8\" hex, and 1/2\" hex</li> </ul> Video Tutorial <p> </p> <p>Part Lighten (2471 Featurescripts)</p> <ul> <li>Better than \"Lighten\" and more complex than \"Vent\"</li> <li>Better control over ribs, cut depth, fillets, etc.</li> <li>Gives a nice estimate of how much weight is being saved</li> </ul> Video Tutorial <p> </p> <p>FilletXpert (Fillet All Edges) (Julia's Featurescripts)</p> <ul> <li>After selecting a face, it adds a fillet to the corners of that face (all edges normal to the selected face)</li> </ul> Video Tutorial <p> </p>"},{"location":"resources/featurescripts/#bundles","title":"Bundles","text":"<p>The below links contain several featurescripts each that you can add all at once. The more useful featurescripts from each bundle are demonstrated further below.</p> <p>Julia's Featurescripts</p> <p>Alex's Featurescripts</p> <p>Abhi's Features &amp; Configs</p> <p>2471 Featurescripts</p> <p>TLamp's Featurescripts</p> <p>CADSHARP's Featurescripts</p>"},{"location":"resources/featurescripts/#structure","title":"Structure","text":"<p>Extrude Individual (Julia's Featurescripts)</p> <ul> <li>Can extrude multiple regions as different parts with one feature, even if regions are adjacent</li> <li>Commonly used with tube converter to make punched aluminum tubes from a top view sketch</li> </ul> Video Tutorial <p> </p> <p>Tube Converter (Julia's Featurescripts)</p> <ul> <li>Converts extrusions into punched tube, with customization and presets for hole pattern, wall thickness, and profile.</li> </ul> Video Tutorial <p> </p> <p>Gusset Generator (Julia's Featurescripts)</p> <ul> <li>Generate a gusset from hole selections</li> <li>Warning: Not a very parametric featurescript and causes lag, but can be useful in a pinch</li> </ul> <p>Shaft Generator (Julia's Featurescripts)</p> <ul> <li>Generates a shaft, with options for hex, rounded hex (13.75mm OD), MAXSpline, etc.</li> <li>Options for retention type on both ends</li> <li>Can be generated in-place and with offsets</li> </ul> Video Tutorial <p> </p> <p>Spacer Generator (Julia's Featurescripts)</p> <ul> <li>Generates a spacer, with options for round, 3/8\" hex, and 1/2\" hex</li> </ul> Video Tutorial <p> </p> <p>FilletXpert (Fillet All Edges) (Julia's Featurescripts)</p> <ul> <li>After selecting a face, it adds a fillet to the corners of that face (all edges normal to the selected face)</li> </ul> Video Tutorial <p> </p> <p>Robot Spacer (Alex's Featurescripts)</p> <ul> <li>A more complex alternative to Julia's spacer generator, if you need more config options</li> </ul> <p>Electronics Mounting (Julia's Featurescri pts)</p> <ul> <li>Generates hole patterns for different electronic components using center points and mate connectors on sketches</li> </ul> <p>MechSketch (TLamp's Featurescripts)</p> <ul> <li>Incredibly useful, generates sketch profiles for a variety of things</li> <li>Profiles for COTS parts like Maxspline, TTB inserts, maxtube, motors, and the versa patern</li> <li>Profiles and holes for all electronics</li> <li>Profile generator for pulleys and a spur gears</li> </ul>"},{"location":"resources/featurescripts/#power-transmissions","title":"Power Transmissions","text":"<p>Belt &amp; Chain Gen</p> <ul> <li>Used in conjunction with Origin Cube FRC Functions to create highly customizable belts and chains</li> <li>Highly parametric - pulley/sprocket tooth count is automatically calculated from sketch pitch diameter.</li> <li>Create multi pulley, double sided belt, and multi sprocket transmissions with options for both toothed and round idlers</li> <li>Calculates belt and chain pitch; when used in conjunction with <code>Final</code> can allow for easy adjustment of path lengths</li> <li>Block model and high detail belt and chain model options available</li> <li>Allows for arbitrary placement of belts with a mate connector reference</li> </ul> Video Example <p> </p> <p>Belt &amp; Pulley Generation (2471 Featurescripts)</p> <ul> <li>Configurable belt and pulley generation</li> <li>Belt width, pulley tooth count, offset and fit adjustment, belt type, etc.</li> <li>Options for bore and flanges for both pulleys</li> </ul> <p>Timing Belt Pulley Generator</p> <ul> <li>Generates GT2 pulleys</li> </ul> <p>Sprocket (Abhi's Features &amp; Configs)</p> <ul> <li>Generate a sprocket for common types of chain</li> </ul> <p>doesinlinechaintensionerfit</p> <ul> <li>Calculates whether or not an inline chain tensioner will fit on a chain transmission</li> <li>For when you are too lazy to do basic math</li> </ul> <p>Spur Gear (Alex's Featurescripts)</p> <ul> <li>Generates a spur gear with with many different options</li> <li>Can be useful for 3D-printed parts.</li> </ul> <p>Thrifty Insert</p> <ul> <li>Cuts a profile in a part at a given location and depth to fit a thriftybot insert into, for 3D-printed parts to stop them from stripping while being driven on an axle.</li> </ul> <p>Polybelt Generator (2471 Featurescripts)</p> <ul> <li>Generates polycord and pulleys based off of selected points</li> </ul>"},{"location":"resources/featurescripts/#pocketing","title":"Pocketing","text":"<p>Part Lighten (2471 Featurescripts)</p> <ul> <li>Better than \"Lighten\" and more complex than \"Vent\"</li> <li>Better control over ribs, cut depth, fillets, etc.</li> <li>Gives a nice estimate of how much weight is being saved</li> </ul> Video Tutorial <p> </p> <p>Vent</p> <ul> <li>Used for pocketing and lightening plates</li> <li>Uses sketch regions to determine pocket and rib placement</li> </ul> Video Tutorial <p> </p> <p>Lighten</p> <ul> <li>Less optimized and breaks more then vent.</li> </ul> <p>CheeseIt! (TLamp's Featurescripts)</p> <ul> <li>Advanced lightening pattern generation</li> <li>Isogrid, hexagon, or circle pattern</li> </ul> <p>PatchIt! (TLamp's Featurescripts)</p> <ul> <li>Patches specified pockets in a part</li> </ul>"},{"location":"resources/featurescripts/#manufacturing","title":"Manufacturing","text":"<p>Auto Layout</p> <ul> <li>Given some derived plates, either transformed from an in-context assembly (to maintain part count) or derived from a part studio, it will automatically lay them out into sheets of a given size, sorted by thickness. This is used to prepare a file to route or waterjet parts out of material with a machine.</li> </ul> <p>Measure Cut List</p> <ul> <li>Creates a table of measurements</li> <li>Great for creating cut lists for parts</li> </ul> <p>Laser Joint</p> <ul> <li>Highly configurable featurescript that generates tab joints between overlapping parts</li> <li>Options to make it easier for cnc routers to cut parts</li> <li>Can use for bumper wood corners</li> </ul> <p>Dogbone and Corner Overcut</p> <ul> <li>Features to make it easier for cnc routers to cut cavities in parts</li> </ul>"},{"location":"resources/featurescripts/#onshape-functionality-extensions","title":"Onshape Functionality Extensions","text":"<p>Origin Cube Featurescript</p> <ul> <li>Used to create an origin reference for assembly mating</li> <li>Optionally import design constants like bolt hole sizes, heat set insert hole sizes, etc</li> <li>Optionally import functions for calculating gear OD, pulley/sprocket pitch &amp; outer diameters, and calculate belt/chain c-c distances</li> <li>See Assembly Best Practices for more information on usage</li> </ul> Video Example <p> </p> <p>Measure Value</p> <ul> <li>An extremely useful featurescript</li> <li>Creates variables from measured values</li> <li>Useful for creating parametric patterns, including hole patterns</li> </ul> <p>Assembly Mirror</p> <ul> <li>Adds reflected mate connectors to a part so you can easily mate it reflected across a plane in an assembly (does not mirror geometry).</li> </ul> <p>Part Color</p> <ul> <li>Give color to faces on a part retroactively</li> <li>Can use a variety of different color inputs</li> <li>Can be used for part color configurations</li> </ul> <p>Set Materials (Abhi's Features &amp; Configs)</p> <ul> <li>Parametrically set materials and appearances of parts in batches</li> </ul> <p>Set Properties (Abhi's Features &amp; Configs)</p> <ul> <li>Sets properties of parts in batches</li> </ul> <p>2471's Part Numbering (2471 Featurescripts)</p> <ul> <li>Numbers parts based off of a given standard</li> </ul> <p>Abhi's Part Numbering</p> <ul> <li>Used for quickly applying a system to number parts</li> </ul> <p>3D Printed Mass (Julia's Featurescripts)</p> <ul> <li>Modifies 3D-printed parts to have accurate mass with given material, infill, and wall thickness</li> </ul> Video Tutorial <p> </p> <p>Advanced Variables (2471 Featurescripts)</p> <ul> <li>Can create a compound variable with path length, angle between edges, distance between planes, angle between planes, distance between points, pulley center distance, and chain center distance</li> <li>Very useful for complex belt and chain runs</li> <li>Include measurements that Onshape can't normally do</li> </ul> <p></p>"},{"location":"resources/gameHistory/","title":"Game History","text":"<p>WIP</p> <p></p>"},{"location":"resources/glossary/","title":"Welcome to the Glossary","text":""},{"location":"resources/glossary/#why-this-exists","title":"Why this exists.","text":"<p>We know it can be hard learning each and every term thrown around in FRC design, so we have compiled a list of words and definitions to aide you throughout your learning.</p>"},{"location":"resources/glossary/#terms","title":"Terms","text":"<code>c-c</code> \"Center to Center\" distance <code>WCP</code> \"West Coast Products\" <code>TTB</code> \"The Thrifty Bot\" <code>SDS</code> \"Swerve Drive Specialties\" <code>Turnbuckle</code> A threaded part that goes in between chain links to tension the chain <code>COG</code> Center of Gravity, also referred to as COM(Center of Mass) <code>OTB</code> \"Over the Bumper\" typically used to refer to a style of intake where you lift the piece over the bumper <code>UTB</code> \"Under the Bumper\" typically used to refer to a style of intake where you move the piece under the bumper <code>V4B</code> \"Virtual 4 Bar\" is where a second degree of freedom is directly geared of a previous degree of freedom instead of being moved independently or by a linkage. <code>4Bar</code> A type of linkage characterized by its 4 pivot points <code>COTS</code> \"Commercial Off the Shelf\" parts are anything you can buy from a vendor. <code>Dead Axle</code> A type of axle setup where the axle is fixed in place and or is not transferring the torque of the system through it. <code>Live Axle</code> A type of axle setup where the main torque transfer is through the axle <code>Zombie Axle</code> Typically used on pivots a zombie axle spins with the mechanism, but is transferring little to no torque through it. This is commonly used to put an encoder on the pivot point. <code>Tube Nut</code> Also known as a \"Star Nut\", these provide an easy way to put a thread in end of a hollow tube allowing you to bolt the tube to another part.  <code>Cantilever</code> Horizontal Element that's supported by one side only. <code>Shear</code> When forces are applied parallel to the plane of a material, causing breaking of fasteners due to excessive force and stress. <code>Torque</code> Force that produces rotational movement. <code>Moment of Inertia</code> Amount of resistance against angular acceleration. <code>End Effector</code> Mechanism attached to the end of an arm. <code>Linear Actuator</code> Device that converts rotational movement to linear motion, usually with a lead screw. <code>PDH</code> Power Distribution Hub. <code>SparkMAX</code> Motor controller for REV motors. <code>Main Breaker</code> Switch for the robot. <code>PWM</code> Pulse Width Modulation cable. <code>RIO</code> RoboRIO, brain of the robot. <code>Blinkn</code> LED controller for REV. <code>Radio</code> Device that helps the robot communicate with the driver station. <code>Limit Switch</code> Type of sensor that acts as a soft limit when physically or magnetically hit. <code>Throughbore Encoder</code> An encoder that allows shafts to pass through its center to record position.  <code>Magnetic Encoder</code> An encoder that uses magnetic fields to measure position or motion.  <code>3DP</code> Abbreviation for 3D printed or 3D printing. <code>Billet</code> Component machined down from a solid block of material. <code>Bevel Gear</code> Special gears that change the axis of rotation, typically by 90 degrees. <code>Gusset</code> Reinforcement plate, usually made of aluminum, used to strengthen connections between two tubes. <code>Box Tube</code> Hollow, square or rectangular metal tubing. <code>Tie Rod</code> Rigid bar used for structural support and stability, often in the frame of a robot. <code>Poly/PC</code> Abbreviation for polycarbonate. <code>Stripping</code> Process of removing threads or bolt heads, often due to excessive force or wear. <code>Cross Threading</code> Damage caused when a fastener is forced at an incorrect angle during assembly. <code>Tapping</code> The process of creating threads in a hole using a tap tool. <code>Brainpan</code> Flipped electronics bellypan. <code>Bellypan</code> Plate for mounting electronics on the underside of your drivebase. <code>Hardstop</code> A physical limit designed to prevent a mechanism or component from moving beyond a certain point. <code>Softstop</code> A software-based limit or control mechanism that restricts the movement of a mechanism or component to prevent it from exceeding certain parameters. <code>DP</code> Diametral pitch is the number of teeth per inch of the pitch circle. <code>packaging</code> The way in which you fit parts of your robot together in a space <code>backlash</code> 'Slop' in a power transmission system; can wiggle back and forth without engaging the whole system <code>parametric</code> Designed in a way that uses relationships between steps to maintain design intent"},{"location":"resources/krayonCAD/","title":"KrayonCAD","text":""},{"location":"resources/krayonCAD/#what-is-krayoncad","title":"What is KrayonCAD?","text":"<p>KrayonCAD is a collection of simplified, configurable Onshape assemblies for the most common FRC subsystems. These subsystems can be modified by changing just a few variables, allowing you to piece together a robot concept extremely quickly and efficiently. KrayonCAD Assemblies only contain the necessary parts to communicate design intent, while minimizing detail and part count to ensure quick load times.</p> <p></p>"},{"location":"resources/krayonCAD/#why-should-i-use-krayoncad","title":"Why should I use KrayonCAD?","text":"<p>After brainstorming ideas for a new game, the first CAD iteration is sometimes a heavily simplified design, commonly referred to as \u201cCrayola CAD.\u201d This workflow is used by many teams, including team 254. This is where KrayonCAD comes in; using a library of configurable subsystems, KrayonCAD allows you to:</p> <ul> <li>Investigate robot architectures</li> <li>Budget space</li> <li>Verify geometries for robot designs</li> <li>Further flesh out robot designs to scale and in 3D</li> </ul> <p>KrayonCAD is fast! You can go from an idea in your head or a sketch to a 3D model in minutes!</p>"},{"location":"resources/krayonCAD/#how-do-i-use-krayoncad","title":"How do I use KrayonCAD?","text":"<p>KrayonCAD is a simple as 1, 2, 3:</p> <ol> <li> <p>Insert: From any Onshape assembly, use the MKCAD app to insert a KrayonCAD Assembly. You can configure the Assembly before inserting.</p> <p></p> </li> <li> <p>Configure: Right click a KrayonCAD Assembly in the parts list &gt; Configure &gt; change dimensions, check or uncheck boxes, and choose options from drop down lists to configure the assembly to your liking.</p> <p></p> </li> <li> <p>Mate: KrayonCAD Assemblies have mate connectors placed in strategic places to allow for easy mating using the Fasten and Revolute mate types.</p> <p></p> </li> </ol>"},{"location":"resources/krayonCAD/#credit","title":"Credit","text":"<p>ChiefDelphi release post and contributors</p> <p></p>"},{"location":"resources/simplified/","title":"Simplified Models","text":"<p>To reduce load time and simplify geometry, simplified models are used in FRC. Electrical simplified models are included in the MKCad library, so they will not be included here.</p>"},{"location":"resources/simplified/#swerve","title":"Swerve","text":"<p>SDS MK4</p> <p>SDS MK4i</p> <p>SDS MK4N</p> <p>MAXSwerve</p> <p>SwerveX (Credit Astro from 6423)</p>"},{"location":"resources/simplified/#gearboxes","title":"Gearboxes","text":"<p>MAXPlanetary</p> <p>VersaPlanetary</p> <p>UltraPlanetary</p>"},{"location":"resources/simplified/#motors","title":"Motors","text":"<p>Motors</p>"},{"location":"resources/simplified/#electrical","title":"Electrical","text":""},{"location":"resources/design-challenges/overview/","title":"Design Challenges","text":"<p>Design Challenges are at the core of what makes DDS Special. Design Challenges provide a variety of different practice scenarios to iron your design skills and compete against others in a mutually beneficial way.</p>"},{"location":"resources/design-challenges/overview/#scoring","title":"Scoring","text":"<p>Each Design Challenge will net a total of 7 points maximum, with 4 for completion and 3 possible bonuses. Late submissions will allow participants to win up to 2 completion points and all 3 bonus points. </p>"},{"location":"resources/design-challenges/overview/#bonuses","title":"Bonuses","text":"<ul> <li>Simplicity bonus: Awarded to submissions that simplify design to increase the quality of life of their team. </li> <li>Quality bonus: Awarded to submissions that embody good CAD and design principles and reflect the time and effort put into making a design as clean as possible.</li> <li>Special bonus: Bonus point specific to each design challenge, usually involving the way the challenge is approached and the design is executed. </li> </ul>"},{"location":"resources/design-challenges/overview/#leaderboards","title":"Leaderboards","text":"<p>Design challenges will feature two separate leaderboards: Beginner and Intermediate/Advanced. Each leaderboard will function independently, but points will be transferred when beginner members gain experience and self identify as intermediate. Please correctly self identify with your skill level! DDS is meant to be a community for learning, and trying to game the system by identifying as a beginner only discourages others. We operate on an honor system, but if someone is trying to game the system, we will punish them accordingly. </p> <p></p>"},{"location":"resources/design-challenges/week1/","title":"Design Challenge #1: Swerve Drivebase","text":"<p>Welcome to the first design challenge! We are going to start with a swerve drivebase, the foundation of your robot. We have two different levels of challenges, beginner and advanced. It is recommended to complete the beginner challenge first before going on to the advanced version. The advanced version is the same as the beginner challenge, with a few additional things added on.</p> Beginner ChallengeAdvanced Challenge <ul> <li>You need to choose a COTS swerve module</li> <li>It needs to be assembled using 2\" x 1\" aluminum tubes</li> <li>You need to add a bellypan</li> <li>The drivebase needs to be legal to be used on the field. </li> </ul> <ul> <li>Lay out and add mounting holes for all of the electronics, making sure to leave space for wires</li> <li>Add in the electronics models and mate everything together</li> <li>Add in and secure the battery in some way</li> <li>Add bumpers </li> <li>Add bumper mounts</li> </ul> <p>Need Help?</p> <p>If you are stuck, or have any questions, feel free to ask in the discord server! Same goes with getting your design looked over!</p> <p>Feel free to check out drivebase examples here if you need some brainstorming.</p> <p>Good luck with your first challenge! </p> One example of a drivebase! There are many different ways to make one, so don't let this one example drive your design! Be creative and let your mind go wild."},{"location":"resources/design-challenges/week2/","title":"Design Challenge #2: Gearboxes","text":"<p>This week we will be designing a custom gearbox. Custom gearboxes can be used for many applications, from pivots for intakes or arms, to elevators, and much more. They are useful in certain applications due to their cheap cost and low backlash, as well as being highly customizable to different packaging situations. It is important for any well rounded designer to know their way around a custom gearbox.</p> Beginner ChallengeAdvanced Challenge <p>Beginner Challenge: The year is 2019, and COTS swerve isn\u2019t a thing yet (unless you want to run andymark swerve and steer\u2026). Your team is designing a custom WCD, and needs gearboxes to drive it! </p> <ul> <li>Requirements:<ul> <li>Create a 2 stage gearbox with a total reduction of ~6:1</li> <li>Gearbox must fit within the space requirements as outlined</li> <li>Gearbox may use any motors of your choice, minimum of 2 maximum of 3</li> </ul> </li> </ul> <p>Beginner Template Document</p> <p>Advanced Challenge: Welcome back to Charged Up 2023! Some of you may be (too) familiar with this game, others may have never heard of it. It\u2019s the end of week 1 and your team has just finished deciding a robot archetype: double jointed arm. It\u2019s now your job to design that arm- without using COTS gearboxes. No planetaries, no wcp gearboxes, just your own skill to make a great double jointed arm.</p> <ul> <li>Requirements:<ul> <li>Based on your team\u2019s end effector design, the end of the arm (where a wrist might be) must be able to reach the 3 setpoints in the outline document.</li> <li>The arm must stow within the frame perimeter, with at least 5 inches of clearance from the edge.</li> <li>No electronics will be required, other than motors. </li> <li>Drivetrain details will not be looked at. </li> <li>No COTS gearboxes</li> <li>Proper main layout sketch. </li> </ul> </li> </ul> <p>Advanced Template Document</p> <p>Need Help?</p> <p>If you are stuck, or have any questions, feel free to ask in the discord server! Same goes with getting your design looked over!</p> <p>Good luck!</p>"},{"location":"resources/design-challenges/week3/","title":"Design Challenge #3: Ball Shooter","text":"<p>This week we\u2019re moving onto a different challenge: ball shooters! These mechanisms have been useful across many games in modern FRC, including 2012, 2014, 2016, 2020, and 2022. </p> Beginner ChallengeAdvanced Challenge <p>Welcome to 2020! Your team has decided to design a fixed angle hooded shooter to play the game, just like the highly successful team 973!</p> <ul> <li> <ul> <li>The shooter should be able to score power cells into the high goal from a fixed distance of your choosing.</li> <li>Make sure to include fasteners and proper power transmission.</li> <li>We highly encourage you to use a main layout sketch with the field elements for practice, even though you don\u2019t need to cad the rest of the robot.</li> </ul> <p>Requirements:</p> <p>You can find information regarding the game pieces and field elements here.</p> </li> </ul> <p>The year is 2026, and FRC is in shambles. 2025 will be known as the year epa died, as the majority of teams became uncompetitive due to the terrain game known as \u201cReefscape.\u201d Many teams had forgotten what a WCD is, and spent the build season fruitlessly trying to throw their COTS swerve drives at the sharp jagged field elements of the reef. Seeing the unfolding disaster, FIRST took emergency measures and turned the 2026 game into a generic ball shooter game, with hopes to let teams regain their competitiveness.      Your job is to CAD a variable hood ball shooter for this year's game, fitting the following requirements. </p> <ul> <li> <ul> <li>Assume the base of your shooter is mounted no higher than 3.5ft from the floor.</li> <li>The shooter must be able to shoot from between 3ft and 15ft from the base of the goal.</li> <li>Due to the goal's geometry, balls with too much backspin are likely to roll out. To counter this, your shooter must have some form of backroller(s).</li> <li>You should use a calculator to verify the shot angles and speeds that your shooter will operate at. We recommend reca.lc and/or klib.</li> </ul> <p>Requirements:</p> <p>Game characteristics: The goal geometry can be found in the CAD linked below. The game pieces are 6\u201d rubber kickballs weighing 0.29lbs. Optimal compression is up to your own interpretation. The goal geometry means the ideal way to score is to land the ball right on the lip of the goal while it\u2019s near the top of its arc.</p> <p>ReCalc Link</p> <p>Klib Link (make a copy of the spreadsheet to use)</p> <p>Field CAD</p> </li> </ul> <p>Need Help?</p> <p>If you are stuck, or have any questions, feel free to ask in the discord server! Same goes with getting your design looked over!</p> <p>Good luck!</p>"},{"location":"resources/design-challenges/week4/","title":"Design Challenge #4: Intake","text":"<p>Now, you\u2019ve built a shooter, a gearbox for a pivot, and a drivetrain. For your next trick, you are going to be designing an intake. Some of you will remember last week where you designed a shooter for the 2026 game. Well, before you can shoot the balls you gotta get them into your robot. </p> Beginner ChallengeAdvanced Challenge <p>While you may not have designed a shooter last week, don\u2019t fret. Your job this week will be to design a slapdown style intake for the game piece. Make sure to include fasteners and proper power transmission. We do recommend that you sketch up to a theoretical shooter just to think about integration a little. </p> <p>Slapdown Example Mechanisms</p> <p>I can\u2019t believe you all designed a shooter without the intake \ud83e\udd26. Anyway, your job will be to design a 4-bar intake to intake these game pieces effectively. Preferably, you design this around your shooter that you made last week, so think about how to package with the space you left, along with the ideal ball path for your design. (Hint: Do a main layout sketch)</p> <p>4-Bar Example Mechanisms</p> <p>For both challenges: You may pivot using motors or pneumatics. </p> <p>The game pieces are 6\u201d rubber kickballs weighing 0.29lbs. Game Piece Product Page</p> <p>Need Help?</p> <p>If you are stuck, or have any questions, feel free to ask in the discord server! Same goes with getting your design looked over!</p> <p>Good luck!</p>"},{"location":"resources/design-challenges/week5/","title":"Design Challenge #5: Tilt Shift","text":"<p>The year is 2050. The internet was completely wiped 5 years ago, and all traces of past games have been completely destroyed. Your team has just built a time machine, and, following information about a legendary group of people collectively known as \u201cF4\u201d, have decided to go back in time to 2021 to see the wondrous games they\u2019ve created. You stumbled across the game \u201cTilt Shift\u201d, and decided to cad a subsystem for the game before deciding whether or not it is worth bringing back to the present. </p> BeginnerAdvanced <p>You\u2019ve decided to create a manipulator for the game piece. Assume that you have some sort of way to move said manipulator from the scoring position to the loading position. A main layout sketch is recommended but not required.</p> <p>Your goal is to create a main layout sketch for a full robot that can complete all aspects of the game. Additionally, pick one of those subsystems that directly interacts with the game piece and cad it.</p> <p>Game Manual</p> <p>Field CAD</p> <p>Need Help?</p> <p>If you are stuck, or have any questions, feel free to ask in the discord server! Same goes with getting your design looked over!</p> <p>Good luck!</p>"}]}